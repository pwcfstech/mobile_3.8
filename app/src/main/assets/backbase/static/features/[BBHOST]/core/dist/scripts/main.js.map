{"version":3,"sources":[false,null,"false*","webpack:///core/./scripts/main.js","false**","false***","webpack:///core/./scripts/modules/bus/main.js","webpack:///core/./scripts/modules/bus/provider.js","webpack:///core/./scripts/modules/bus/eventemitter.js","webpack:///core/./scripts/modules/cache/main.js","webpack:///core/./scripts/modules/configuration/main.js","webpack:///core/./scripts/modules/error/main.js","webpack:///core/./scripts/modules/error/config.js","webpack:///core/./scripts/modules/error/handler.js","webpack:///core/./scripts/modules/http/main.js","false****","webpack:///core/./scripts/modules/http/config.js","false*****","webpack:///core/./scripts/modules/utils/main.js","webpack:///core/./scripts/modules/utils/url.js","webpack:///core/./scripts/modules/utils/date.js","false******","webpack:///core/./scripts/modules/utils/portal.js","webpack:///core/./scripts/modules/portal/main.js","webpack:///core/./scripts/modules/portal/portal.js","webpack:///core/./scripts/modules/utils/is.js","webpack:///core/./scripts/modules/utils/parse.js","webpack:///core/./scripts/modules/utils/string.js","webpack:///core/./scripts/modules/utils/cookie.js","webpack:///core/./scripts/modules/utils/ng.js","webpack:///core/./scripts/modules/http/httpInterceptor.js","webpack:///core/./scripts/modules/i18n/main.js","false*******","false********","webpack:///core/./scripts/modules/i18n/utils.js","webpack:///core/./scripts/modules/i18n/loader.js","webpack:///core/./scripts/modules/i18n/i18n.js","webpack:///core/./scripts/modules/i18n/filters.js","webpack:///core/./scripts/modules/i18n/directives.js","webpack:///core/./scripts/modules/i18n/_migration/utils.js","webpack:///core/./scripts/modules/i18n/_migration/lp-message.js","webpack:///core/./scripts/modules/store/main.js","webpack:///core/./scripts/modules/template/main.js","webpack:///core/./scripts/modules/update/main.js","webpack:///core/./scripts/modules/update/providers.js","webpack:///core/./scripts/modules/update/config.js","webpack:///core/./scripts/modules/widget/main.js","webpack:///core/./scripts/modules/widget/providers.js","webpack:///core/./scripts/_migration/common/common-module.js","webpack:///core/./scripts/_deprecated/scripts/form-data-persistence.js","webpack:///core/./scripts/_deprecated/scripts/preference-service.js","webpack:///core/./scripts/_deprecated/scripts/profile-detail-service.js","webpack:///core/./scripts/_migration/common/p2p-service.js","webpack:///core/./scripts/_migration/common/rest-services.js","webpack:///core/./scripts/_deprecated/scripts/main.js","webpack:///core/./scripts/_deprecated/scripts/profile-contact-service.js"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_3__","__WEBPACK_EXTERNAL_MODULE_13__","__WEBPACK_EXTERNAL_MODULE_15__","__WEBPACK_EXTERNAL_MODULE_19__","__WEBPACK_EXTERNAL_MODULE_30__","__WEBPACK_EXTERNAL_MODULE_31__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","__WEBPACK_AMD_DEFINE_RESULT__","name","base","bus","cache","configuration","error","http","i18n","portal","store","template","update","utils","widget","migration","deprecated","createModule","undefined","webpackPolyfill","deprecate","paths","children","deps","provider","EventEmitter","lpCoreBus","setChannel","options","$get","API","emitter","create","window","gadgets","pubsub","subscribe","callback","on","publish","emit","apply","arguments","unsubscribe","off","indexOf","listeners","listener","value","idx","length","defined","thing","event","slice","singleArg","Array","prototype","len","thisp","push","events","hasOwnProperty","listenerIndex","splice","trigger","once","one","self","mixin","target","props","i","lpCoreCachePromise","$cacheFactory","$q","lpCoreUtils","cachePromise","promise","key","promiseCache","get","put","$inject","configurationProvider","lpCoreI18nProvider","useWidgetInstance","w","setWidget","attributes","defineAttribute","default","getLocale","attr","definition","getPreference","getPreferenceFromParents","getDefault","isString","resolvePortalPlaceholders","getAbsPath","getWidgetBaseUrl","config","$provide","decorator","$delegate","$injector","e","opts","AssertionError","lpCoreError","$exceptionHandler","createException","ErrorException","message","Error","constructor","captureException","throwException","throwExceptionAsync","delay","args","defer","assert","condition","$","ng","injector","xsrfTokenCookie","getCookie","ajaxSetup","global","headers","X-XSRF-TOKEN","$httpProvider","interceptors","defaultHeaders","Accept","Content-Type","defaults","common","post","url","date","is","parse","string","cookie","ngUtils","constant","parseQuerystring","str","trim","reduce","split","obj","param","parts","decodeURIComponent","val","isUndefined","isArray","buildQueryString","isObject","map","keys","val2","encodeURIComponent","join","pad","number","dateToISOString","Date","toISOString","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","toFixed","dateFormat","lpPortal","inject","replaceWith","replacements","replace","widgetInstance","isEmpty","src","getPortalProperty","property","page","defaultLandingPage","locale","hideAccount","maskAccount","getPagePreference","prop","getPortalPage","generateUUID","d","getTime","uuid","r","Math","random","floor","toString","run","b$","assign","portalView","getElementsByTagName","serverRoot","pageName","pageUUID","loggedInUserId","bd","designMode","pageClient","portalName","linkId","linkUUID","userId","_portalConfig","isValidEmail","email","regularExpressions","test","isValidUUID","isValidISO7064Checksum","input","replaceLetters","strArray","charCodeAt","mod97","result","parseInt","substr","isNaN","parseBoolean","stripHtml","console","log","document","pop","shift","safeApply","scope","fn","phase","$root","$$phase","$apply","queue","ignoreList","getValue","objects","interpolateUrl","data","params","$0","label","isNotifyable","response","some","pattern","RegExp","getContextId","method","lpCoreHttpInterceptor","requestInterceptor","requestErrorInterceptor","responseErr","reject","responseInterceptor","when","responseErrorInterceptor","status","errors","code","statusText","context","contextId","messages","configureNotifications","ignore","concat","request","requestError","responseError","lpCoreI18n","lpCoreI18nUtils","LOCALE_CHANGE_EVENT","setLocale","filter","directive","CURRENCY_MAP","ALL","AFN","ARS","AWG","AUD","AZN","BSD","BBD","BYR","BZD","BMD","BOB","BAM","BWP","BGN","BRL","BND","KHR","CAD","KYD","CLP","CNY","COP","CRC","HRK","CUP","CZK","DKK","DOP","XCD","EGP","SVC","EEK","EUR","FKP","FJD","GHC","GIP","GTQ","GGP","GYD","HNL","HKD","HUF","ISK","IDR","IRR","IMP","ILS","JMD","JPY","JEP","KZT","KGS","LAK","LVL","LBP","LRD","LTL","MKD","MYR","MUR","MXN","MNT","MZN","NAD","NPR","ANG","NZD","NIO","NGN","KPW","NOK","OMR","PKR","PAB","PYG","PEN","PHP","PLN","QAR","RON","RUB","SHP","SAR","RSD","SCR","SGD","SBD","SOS","ZAR","KRW","LKR","SEK","CHF","SRD","SYP","TWD","THB","TTD","TRL","TVD","UAH","GBP","USD","UYU","UZS","VEF","VND","YER","ZWD","WIDGET_TRANSLATION_PREFERENCE","DEFAULT_TRANSLATIONS_PATH","COMMON_I18N_LOAD_EVENT","ALL_LOCALES_FILE","parseLocale","toLowerCase","toUpperCase","lpCoreI18nLoader","$http","lpI18nCommonTranslation","getPromise","wUrl","widgetUrl","trimRight","merged","cUrl","i18nPath","all","then","res","extend","catch","err","supportedLocale","valLocale","supportLocale","sLocales","getHtmlAttr","getAttribute","$translateProvider","tmhDynamicLocaleProvider","lp","launchpad","navigator","language","browserLanguage","systemLanguage","userLanguage","mergedFiles","path","localeLocationPattern","preferredLanguage","useLoader","$filter","$translate","tmhDynamicLocale","setTimeout","use","set","formatCurrency","amount","currency","symbol","formatDate","format","instant","currencySymbol","lpI18n","$compile","link","el","$observe","removeAttr","restrict","priority","Number","MAX_VALUE","terminal","lpI18nSwitch","locales","preventDefault","i18nUtils","httpService","getInstance","req","endpoint","read","resolvePromise","success","fp","always","loadMessages","lpWidget","messageSrcPref","messageSrc","messagesService","lpMessage","element","attrs","insertMessage","$watch","storeProvider","getItem","setItem","removeItem","reset","providers","directives","lpCoreTemplate","templates","model","preferences","array","prev","curr","lpCoreConfiguration","getOptions","getOptionsPath","getFullPath","resolvePath","resolvedPath","templateKey","customTemplate","match","lpTemplate","getTemplate","srcExp","transclude","controller","$transclude","html","show","clone","find","contents","lpCoreUpdate","checkSameObjectEnlisted","list","forEach","o","getList","aux","main","chain","union","uniq","invokeSingleQueue","invokeQueues","actions","newPaymentOrderInitiated","transactions","lpCoreWidget","getResolvedPreference","propName","defaultConfig","cacheTimeout","xhrTimeout","service","formDataPersistence","hasStorage","storage","uid","localStorage","warn","FormDataPersistenceController","saveFormData","formName","formObject","stringifiedFormObject","JSON","stringify","sessionStorage","removeFormData","getFormData","widgetForm","formatObject","thisObject","testDate","Object","isFormSaved","saved","PreferenceService","preferenceEndpoint","Cache-Control","Pragma","Expires","save","field","angular","ProfileDetailsService","doI18n","profileDetails","detailsParsed","each","counterPartyServiceUrl","ProfileDetailService","setConfig","formatResponse","fullname","firstName","lastName","details","activities","photoUrl","photoData","decodePhotoUrl","lastLoggedIn","getData","P2PService","enrollmentEndpoint","editEmailEndpoint","emailType","primary","secondary","emailStatus","verified","unverified","getUserEnrollmentDetails","enrollUserForP2P","editP2PEnrollment","editP2PDepositAccount","accountNumber","addP2PEmailAddress","emailAddress","Content-type","editP2PEmailAddress","type","editP2PEmailAddressType","deleteP2PEmailAddress","verifyCode","verification","_typeof","Symbol","iterator","exception","$timeout","httpServicesConfig","HttpService","force","cacheId","getCacheKey","getCacheItem","makeXhrRequest","contentType","setCacheItem","cacheData","expires","clearCacheItem","timeout","del","isTesting","location","protocol","__karma__","_","deferred","resolve","services","replaceUrlVars","urlVars","urlVar","urlVarRegexp","getServiceInstance","ProfileContactService"],"mappings":"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","file":"scripts/main.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"base\"), require(\"angular-resource\"), require(\"jquery\"), require(\"moment\"), require(\"angular-translate\"), require(\"angular-dynamic-locale\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"base\", \"angular-resource\", \"jquery\", \"moment\", \"angular-translate\", \"angular-dynamic-locale\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"core\"] = factory(require(\"base\"), require(\"angular-resource\"), require(\"jquery\"), require(\"moment\"), require(\"angular-translate\"), require(\"angular-dynamic-locale\"));\n\telse\n\t\troot[\"core\"] = factory(root[\"base\"], root[\"angular-resource\"], root[\"jquery\"], root[\"moment\"], root[\"angular-translate\"], root[\"angular-dynamic-locale\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_13__, __WEBPACK_EXTERNAL_MODULE_15__, __WEBPACK_EXTERNAL_MODULE_19__, __WEBPACK_EXTERNAL_MODULE_30__, __WEBPACK_EXTERNAL_MODULE_31__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"base\"), require(\"angular-resource\"), require(\"jquery\"), require(\"moment\"), require(\"angular-translate\"), require(\"angular-dynamic-locale\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"base\", \"angular-resource\", \"jquery\", \"moment\", \"angular-translate\", \"angular-dynamic-locale\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"core\"] = factory(require(\"base\"), require(\"angular-resource\"), require(\"jquery\"), require(\"moment\"), require(\"angular-translate\"), require(\"angular-dynamic-locale\"));\n\telse\n\t\troot[\"core\"] = factory(root[\"base\"], root[\"angular-resource\"], root[\"jquery\"], root[\"moment\"], root[\"angular-translate\"], root[\"angular-dynamic-locale\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_13__, __WEBPACK_EXTERNAL_MODULE_15__, __WEBPACK_EXTERNAL_MODULE_19__, __WEBPACK_EXTERNAL_MODULE_30__, __WEBPACK_EXTERNAL_MODULE_31__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1);\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module) {'use strict'; /**\n\t               * Launchpad Core module contains commonly used APIs for all Launchpad modules.\n\t               *\n\t               * @usage\n\t               * ###Install\n\t               * 1. Install core module:\n\t               *\n\t               * ```\n\t               * bower i core --save\n\t               * ```\n\t               *\n\t               * 2. Add `core` as a dependency of your angular module:\n\t               *\n\t               * ```\n\t               * // main.js\n\t               * var core = require('core');\n\t               * var deps = [\n\t               *   ...\n\t               *   core.name,\n\t               *   ...\n\t               * ];\n\t               *\n\t               * module.exports = base.createModule(module.name, deps);\n\t               * ```\n\t               *\n\t               * ###Develop\n\t               *\n\t               * ```\n\t               * git clone ssh://git@stash.backbase.com:7999/LPM/foundation-core.git\n\t               * cd core\n\t               *\n\t               * bower install && bblp start\n\t               * ```\n\t               *\n\t               * ###Testing\n\t               *\n\t               * ```\n\t               * bblp test\n\t               * ```\n\t               *\n\t               * ###Build\n\t               *\n\t               * ```\n\t               * bblp build\n\t               * ```\n\t               *\n\t               * @name core\n\t               * @ngModule\n\t               */\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\n\t    'use strict';\n\n\t    module.name = 'core';\n\n\t    var base = __webpack_require__(3);\n\t    var bus = __webpack_require__(4);\n\t    var cache = __webpack_require__(7);\n\t    var configuration = __webpack_require__(8);\n\t    var error = __webpack_require__(9);\n\t    var http = __webpack_require__(12);\n\t    var i18n = __webpack_require__(29);\n\t    var portal = __webpack_require__(21);\n\t    var store = __webpack_require__(39);\n\t    var template = __webpack_require__(40);\n\t    var update = __webpack_require__(41);\n\t    var utils = __webpack_require__(16);\n\t    var widget = __webpack_require__(44);\n\n\t    var migration = __webpack_require__(46);\n\t    var deprecated = __webpack_require__(52);\n\n\t    module.exports = base.createModule(module.name, [\n\t    update.name,\n\t    portal.name,\n\t    utils.name,\n\t    i18n.name,\n\t    bus.name,\n\t    cache.name,\n\t    http.name,\n\t    error.name,\n\t    store.name,\n\t    template.name,\n\t    configuration.name,\n\t    widget.name,\n\n\t    // To be migrated\n\t    migration.name,\n\n\t    // Migrated and moved to depreacted, will be removed in next breaking release\n\t    deprecated.name]);\n\n\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)(module)))\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = function(module) {\r\n\t\tif(!module.webpackPolyfill) {\r\n\t\t\tmodule.deprecate = function() {};\r\n\t\t\tmodule.paths = [];\r\n\t\t\t// module.parent = undefined by default\r\n\t\t\tmodule.children = [];\r\n\t\t\tmodule.webpackPolyfill = 1;\r\n\t\t}\r\n\t\treturn module;\r\n\t}\r\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module) {'use strict'; /**\n\t               * A mediator object that implements\n\t               * the <a href=\"http://en.wikipedia.org/wiki/Publish%E2%80%93subscribe_pattern\" target=\"_blank\">pub/sub pattern</a>.\n\t               * Any object can publish an event, optionally passing some data\n\t               * in a channel, and all the subscribed listeners to that\n\t               * event in that channel will be called in order.\n\t               *\n\t               * @copyright Backbase B.V.\n\t               * @author Backbase R&D - Amsterdam - New York\n\t               *\n\t               * @name bus\n\t               * @memberof core\n\t               * @ngModule\n\t               */\n\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\t  'use strict';\n\n\t  module.name = 'bus';\n\t  var base = __webpack_require__(3);\n\t  var deps = [];\n\n\t  module.exports = base.createModule(module.name, deps).\n\t  provider(__webpack_require__(5));\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)(module)))\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict'; /**\n\t               *  ----------------------------------------------------------------\n\t               *  Copyright © Backbase B.V.\n\t               *  ----------------------------------------------------------------\n\t               *  Author : Backbase R&D - Amsterdam - New York\n\t               *  Filename : provider.js\n\t               *  Description: Bus Provider\n\t               *  ----------------------------------------------------------------\n\t               */\n\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\n\t  'use strict';\n\n\t  var EventEmitter = __webpack_require__(6);\n\n\t  /**\n\t                                                 * NOTE: If `windows.gadgets.pubsub` is available, this service is just a wrapper around it.\n\t                                                 *\n\t                                                 * All event names should include the source of the event and the type of event separated by a colon character.\n\t                                                 *\n\t                                                 * @memberof core.bus\n\t                                                 * @ngProvider\n\t                                                 */\n\t  exports.lpCoreBus = function () {\n\n\t    this.setChannel = function (options) {\n\n\t    };\n\n\t    // @ngInject\n\t    this.$get = function () {\n\t      /**\n\t                              * @alias core.bus.lpCoreBus\n\t                              */\n\t      var API = {};\n\t      var emitter = EventEmitter.create();\n\n\t      if (window.gadgets && window.gadgets.pubsub) {\n\t        return window.gadgets.pubsub;\n\t      }\n\n\t      /**\n\t         * Adds the specified event listener for the specified event.\n\t         * Allows subscription to the events published by other Launchpad modules / widgets.\n\t         *\n\t         * @example\n\t         * ```\n\t         * bus.subscribe('someEvent', function (data) {\n\t         *   console.log('Event has published with:', data);\n\t         * });\n\t         * ```\n\t         *\n\t         * @param name {String} Event name\n\t         * @param callback {Function} Listener\n\t         * @returns {Undefined}\n\t         */\n\t      API.subscribe = function (name, callback) {\n\t        emitter.on(name, callback);\n\t      };\n\n\t      /**\n\t          * Publishes the specified event.\n\t          * Allows publishing of events that other modules / widgets can subscribe to.\n\t          *\n\t          * @example\n\t          * ```\n\t          * var handler = function (arg1, arg2) {\n\t          *   console.log('Event has published', arg1, arg2);\n\t          * };\n\t          *\n\t          * bus.subscribe('someEvent', handler);\n\t          * bus.publish('someEvent', 'Hello', {foo: 'bar'}); // Event has published, Hello, {foo: \"bar\"}\n\t          * ```\n\t          *\n\t          * @param name {String} Event name\n\t          * @returns {Undefined}\n\t          */\n\t      API.publish = function (name /*, argument1, ..., argumentN*/) {\n\t        emitter.emit.apply(emitter, arguments);\n\t      };\n\n\t      /**\n\t          * Unsubscribes callback function from the event published by other Launchpad modules / widgets.\n\t          *\n\t          * @example\n\t          * ```\n\t          * var handler = function () {\n\t          *   console.log('Event has published');\n\t          * };\n\t          *\n\t          * bus.subscribe('someEvent', handler);\n\t          * bus.publish('someEvent'); // Event has published\n\t          *\n\t          * bus.unsubscribe('someEvent', handler);\n\t          * bus.publish('someEvent'); // Nothing happened here\n\t          * ```\n\t          *\n\t          * @param name {String} Event name\n\t          * @param callback {Function} Listener\n\t          * @returns {Undefined}\n\t          */\n\t      API.unsubscribe = function (name, callback) {\n\t        emitter.off(name, callback);\n\t      };\n\n\t      /**\n\t          * Provides the internal eventemitter to use separetely from the bus itself.\n\t          * It is useful sometimes to emit and listen events between cooperating objects.\n\t          *\n\t          * Available only if `window.gadgets.pubsub` is not available.\n\t          *\n\t          * @example\n\t          * For that you can create a new eventemitter:\n\t          * ```\n\t          * var emitter = lpCoreBus.EventEmitter.create();\n\t          *\n\t          * emitter.on('warning', function(message) {\n\t          *   console.log(message);\n\t          * });\n\t          *\n\t          * emitter.emit('warning', 'Lorem ipsum');\n\t          * ```\n\t          *\n\t          * @example\n\t          * or you can mix the eventemitter methods right into the object\n\t          * and use them as it were part of the original object:\n\t          * ```\n\t          * var alerts = {\n\t          *   show: function (message) {\n\t          *     ...\n\t          *     this.emit('show', message);\n\t          *   }\n\t          * };\n\t          *\n\t          * lpCoreBus.EventEmitter.mixin(alerts);\n\t          * ```\n\t          */\n\t      API.EventEmitter = EventEmitter;\n\n\t      return API;\n\t    };\n\t  };\n\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict'; /**\n\t               *  ----------------------------------------------------------------\n\t               *  Copyright © Backbase B.V.\n\t               *  ----------------------------------------------------------------\n\t               *  Author : Backbase R&D - Amsterdam - New York\n\t               *  Filename : eventemitter.js\n\t               *  Description: A simple event emitter factory to use in any module\n\t               *  ----------------------------------------------------------------\n\t               */\n\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\t    'use strict';\n\n\t    function indexOf(listeners, listener) {\n\t        var idx = listeners.length;\n\t        var value;\n\n\t        while (idx--) {\n\t            value = listeners[idx][0];\n\t            if (value === listener || value.listener && value.listener === listener) {\n\t                return idx;\n\t            }\n\t        }\n\n\t        return -1;\n\t    }\n\n\t    function defined(thing) {\n\t        return typeof thing !== 'undefined';\n\t    }\n\n\t    /**\n\t       * Executes each of the listeners in order with the supplied arguments.\n\t       * @param   {String} event Name of the event\n\t       * @returns {Object}       Chainable methods\n\t       */\n\t    function emit(event) {\n\t        var listeners = this.listeners(event).slice();\n\t        var singleArg = arguments.length === 1;\n\t        var slice = Array.prototype.slice;\n\t        var idx = 0;\n\t        var len = listeners.length;\n\n\t        for (; idx < len; idx++) {\n\t            if (singleArg) {\n\t                if (defined(listeners[idx][1])) {\n\t                    listeners[idx][0].call(listeners[idx][1]);\n\t                } else\n\t                {\n\t                    listeners[idx][0]();\n\t                }\n\t            } else {\n\t                listeners[idx][0].apply(listeners[idx][1], slice.call(arguments, 1));\n\t            }\n\t        }\n\n\t        return this;\n\t    }\n\n\t    function EventEmitter() {}\n\n\t    EventEmitter.prototype = {\n\t        /**\n\t                                * Adds an `event` `listener` to the end of the listeners array for\n\t                                * the specified `event`.\n\t                                * @param   {String}   event    Name of the event\n\t                                * @param   {Function} listener Handler to be added\n\t                                * @param   {Object}   thisp    Object to be bound to the listener\n\t                                * @returns {Object}            Chainable methods\n\t                                */\n\t        on: function on(event, listener, thisp) {\n\t            var listeners = this.listeners(event);\n\n\t            if (indexOf(listeners, listener) < 0) {\n\t                listeners.push([listener, thisp]);\n\t            }\n\n\t            return this;\n\t        },\n\n\t        /**\n\t            * Removes a `listener` from the listener array for that `event`. If the\n\t            * `listener` is not provided removes all the listeners for that `event`.\n\t            * @param   {String}   event    Name of the event\n\t            * @param   {Function} listener Handler to be removed\n\t            * @returns {Object}            Chainable methods\n\t            */\n\t        off: function off(event, listener) {\n\t            if (!arguments.length) {\n\t                this.events = null;\n\t                return this;\n\t            } else if (arguments.length === 1) {\n\t                if (this.events.hasOwnProperty(event)) {\n\t                    this.events[event] = null;\n\t                }\n\t                return this;\n\t            }\n\n\t            var listeners = this.listeners(event);\n\t            var listenerIndex = indexOf(listeners, listener);\n\n\t            if (listenerIndex >= 0) {\n\t                listeners.splice(listenerIndex, 1);\n\t            }\n\n\t            return this;\n\t        },\n\n\t        emit: emit,\n\n\t        /**\n\t                     * Alias for emit\n\t                     * {Function}\n\t                     */\n\t        trigger: emit,\n\n\t        /**\n\t                        * Adds a one time `listener` for the `event`.\n\t                        * @param   {String}   event     Name of the event\n\t                        * @param   {Function} listener  Handler to be added\n\t                        * @param   {Object}   thisp     Object to be bound to the listener\n\t                        * @returns {Object}             Chainable method\n\t                        */\n\t        once: function once(event, listener, thisp) {\n\t            var self = this;\n\n\t            function one() {\n\t                listener.apply(this, arguments);\n\t                self.off(event, one);\n\t            }\n\n\t            one.listener = listener;\n\t            this.on(event, one, thisp);\n\n\t            return this;\n\t        },\n\n\t        /**\n\t            * Returns an array of listeners for the specified `event`.\n\t            * @param   {String} event  Name of the event\n\t            * @returns {Array}\n\t            */\n\t        listeners: function listeners(event) {\n\t            var events = this.events || (this.events = {});\n\n\t            return events[event] || (events[event] = []);\n\t        } };\n\n\n\t    EventEmitter.create = function () {\n\t        return new EventEmitter();\n\t    };\n\n\t    /**\n\t        * Adds event emitter functionality to `target`.\n\t        * @param  {Object} target Object to be mixed\n\t        */\n\t    EventEmitter.mixin = function (target) {\n\t        var props = ['on', 'off', 'emit', 'trigger', 'once', 'listeners'];\n\n\t        for (var i = props.length; i--;) {\n\t            target[props[i]] = EventEmitter.prototype[props[i]];\n\t        }\n\t    };\n\n\t    module.exports = EventEmitter;\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module) {'use strict'; /**\n\t               * Provides generic cache system. Use this module to cache async calls.\n\t               *\n\t               * @copyright Backbase B.V.\n\t               * @author Backbase R&D - Amsterdam - New York\n\t               *\n\t               * @name cache\n\t               * @memberof core\n\t               * @ngModule\n\t               */\n\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\t    'use strict';\n\n\t    module.name = 'core.cache';\n\t    var base = __webpack_require__(3);\n\t    var deps = [];\n\n\t    var cache;\n\t    var promiseCache;\n\n\t    // @ngInject\n\t    function lpCoreCachePromise($cacheFactory, $q, lpCoreUtils) {\n\t        cache = cache || $cacheFactory('lp');\n\n\t        /**\n\t                                               * Returns cached promise for the key if it exists.\n\t                                               * Otherwise calls the function returning promise, and return it.\n\t                                               *\n\t                                               * @name lpCoreCachePromise\n\t                                               * @memberof core.cache\n\t                                               * @param   {Object}  options  Object containing:\n\t                                               *   {String} key        Cache key\n\t                                               *   {Function} promise  Function returning promise\n\t                                               * @returns {Promise}\n\t                                               * @ngFactory\n\t                                               */\n\t        function cachePromise(options) {\n\t            var promise = options.promise;\n\t            var key = options.key;\n\t            promiseCache = cache.get(key);\n\t            if (!promiseCache) {\n\t                promiseCache = promise.call();\n\t                cache.put(key, promiseCache);\n\t            }\n\t            return promiseCache;\n\t        }\n\n\t        return cachePromise;\n\t    }\n\n\t    module.exports = base.createModule(module.name, deps).\n\t    factory('lpCoreCachePromise', lpCoreCachePromise);\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)(module)))\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module) {'use strict'; /**\n\t               * Auto configuration module\n\t               * @name configuration\n\t               * @memberof core\n\t               * @ngModule\n\t               */\n\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\t    'use strict';\n\n\t    module.name = 'core.configuration';\n\n\t    var base = __webpack_require__(3);\n\t    var deps = [];\n\n\t    /**\n\t                    * {Description}\n\t                    * @name lpCoreConfiguration\n\t                    * @memberof core.configuration\n\t                    * @ngProvider\n\t                    * @ngInject\n\t                    */\n\t    function configurationProvider(lpCoreUtils, lpCoreI18nProvider) {\n\t        var widget;\n\t        var utils = lpCoreUtils;\n\n\t        this.useWidgetInstance = function (w) {\n\t            widget = w;\n\t            lpCoreI18nProvider.useWidgetInstance(w);\n\t        };\n\n\t        // @ngInject\n\t        this.$get = function () {\n\t            /**\n\t                                  * @alias core.configuration.lpCoreConfiguration\n\t                                  */\n\t            var API = function API(setWidget) {\n\t                this.widget = setWidget;\n\t                this.attributes = {};\n\n\t                this.defineAttribute('locale', {\n\t                    'default': 'en' });\n\n\t            };\n\n\t            /**\n\t                * Returns current value of locale attribute\n\t                *\n\t                * @example\n\t                * ```\n\t                * var locale = configProvider.getLocale(); // \"en\"\n\t                * ```\n\t                *\n\t                * @returns {String}\n\t                */\n\t            API.prototype.getLocale = function () {\n\t                return this.get('locale');\n\t            };\n\n\t            /**\n\t                * Defines a new config attribute with the specified attribute name\n\t                * and the specified attribute description.\n\t                *\n\t                * @example\n\t                * ```\n\t                * // Define attribute \"permission\" and set \"readonly\" as a default value\n\t                * configProvider.defineAttribute('permission', {\n\t                *   'default': 'readonly'\n\t                * });\n\t                * ```\n\t                *\n\t                * @param attr {String} Attribute name\n\t                * @param {Object} definition\n\t                *\n\t                * @returns {Undefined}\n\t                */\n\t            API.prototype.defineAttribute = function (attr, definition) {\n\t                this.attributes[attr] = definition;\n\t            };\n\n\t            /**\n\t                * Returns value of the specified attribute.\n\t                * Returns default value if actual value is undefined.\n\t                * @param attr {String} Attribute name\n\t                * @returns {*}\n\t                */\n\t            API.prototype.get = function (attr) {\n\t                var value;\n\t                if (this.widget) {\n\t                    value = this.widget.getPreference(attr) || this.widget.getPreferenceFromParents(attr);\n\t                }\n\n\t                value = typeof value !== 'undefined' ? value : this.getDefault(attr);\n\n\t                // If the value is a string, the resolve portal client placeholders ($contextRoot, etc).\n\t                if (utils.isString(value)) {\n\t                    value = utils.resolvePortalPlaceholders(value);\n\t                }\n\n\t                return value;\n\t            };\n\n\t            /**\n\t                * Returns default value of the specified attribute or null,\n\t                * if the attribute doesn't have default value;\n\t                *\n\t                * @example\n\t                * ```\n\t                * // Read default value for \"locale\" attribute\n\t                * var defaultValue = configProvider.getDefault('locale'); // \"en\"\n\t                * ```\n\t                *\n\t                * @param attr {String} Attribute name\n\t                * @returns {*|Null}\n\t                */\n\t            API.prototype.getDefault = function (attr) {\n\t                return this.attributes[attr] && this.attributes[attr]['default'] ?\n\t                this.attributes[attr]['default'] :\n\t                null;\n\t            };\n\n\t            /**\n\t                * Returns the ABS path if there is one. Only works if a widget is set, otherwise assumes\n\t                * ABS path is on the root `/`.\n\t                * @returns {String}\n\t                */\n\t            API.prototype.getAbsPath = function () {\n\t                return this.widget && utils.getWidgetBaseUrl(this.widget) || '/';\n\t            };\n\n\t            return new API(widget);\n\t        };\n\t    }\n\n\t    module.exports = base.createModule(module.name, deps).\n\t    provider('lpCoreConfiguration', configurationProvider);\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)(module)))\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module) {'use strict'; /**\n\t               * Error handler system. Overrides the default Angular\n\t               * <a href=\"https://docs.angularjs.org/api/ng/service/$exceptionHandler\">$exceptionHandler</a> action.\n\t               *\n\t               * @copyright Backbase B.V.\n\t               * @author : Backbase R&D - Amsterdam - New York\n\t               *\n\t               * @name error\n\t               * @memberof core\n\t               * @ngModule\n\t               */\n\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\n\t    'use strict';\n\n\t    module.name = 'error';\n\n\t    var base = __webpack_require__(3);\n\n\t    var deps = [\n\t        // no dependencies\n\t    ];\n\n\t    module.exports = base.createModule(module.name, deps).\n\t    config(__webpack_require__(10)).\n\t    factory(__webpack_require__(11));\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)(module)))\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict'; /**\n\t               *  ----------------------------------------------------------------\n\t               *  Copyright © Backbase B.V.\n\t               *  ----------------------------------------------------------------\n\t               *  Author : Backbase R&D - Amsterdam - New York\n\t               *  Filename : config.js\n\t               *  Description:\n\t               *  #TODO filter exceptions\n\t               *  #TODO use lpCoreBus to emit some specific errors events\n\t               *  #TODO add method to use custom handler\n\t               *  ----------------------------------------------------------------\n\t               */\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\t    'use strict';\n\n\t    // @ngInject\n\t    module.exports = function ($provide) {\n\n\t        // module configuration\n\t        // Decorate the NG exceptionHandler\n\t        $provide.decorator('$exceptionHandler', function ($delegate, $injector) {\n\t            return function (e, opts) {\n\t                // Handle the exception by name and call the propper service\n\t                //var $log = $injector.get('$log');\n\t                //$log.debug('Default exception handler:', e.name);\n\t                $delegate(e, opts);\n\t            };\n\t        });\n\t    };\n\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\t    'use strict';\n\n\t    // base utility library (lodash + base);\n\t    var utils = __webpack_require__(3).utils;\n\t    var API = {};\n\t    var AssertionError;\n\n\t    /**\n\t                         * lpCoreError API\n\t                         *\n\t                         * #####Correctly throwing an error\n\t                         *\n\t                         * 1. Errors should be thrown in the low-level parts of the application (**base, core, modules**)\n\t                         * 2. Always throw an instance of `Error` class, never throw a string or an object. Getting stack trace\n\t                         *    is only possible via Error object, for example.\n\t                         * 3. Throwing an error stops code execution. If the error is not serious enough, throw it asynchronously\n\t                         *\n\t                         * #####Capture inside the widget\n\t                         * @example\n\t                         * ```\n\t                         * var transaction = lpTransaction.api();\n\t                         *\n\t                         * // Widget level\n\t                         * transaction.save()\n\t                         *   .catch(lpCoreError.captureException) // basic handling\n\t                         *   .then(showSuccessMethod)\n\t                         *   .finally(doneLoading);\n\t                         * ```\n\t                         *\n\t                         * #####Custom Error types in LP\n\t                         *\n\t                         * 1. API modules Error types LP{API}Error\n\t                         *\n\t                         * ```\n\t                         * var TransactionError = lpCoreError.createException('LPTransactionError');\n\t                         * var AccountError = lpCoreError.createException('LPAccountError');\n\t                         * ```\n\t                         *\n\t                         * 2. Core Error types `LPCoreHttp`, `LPCoreI18n`, `LPCoreStore`, `LPCoreBus`, etc.\n\t                         *\n\t                         * #####Error types\n\t                         *\n\t                         * Besides the generic Error constructor, there are other core error constructors in JavaScript.\n\t                         * For client-side exceptions, see Exception Handling Statements.\n\t                         *\n\t                         * - `EvalError` occurs regarding the global function eval().\n\t                         * - `InternalError` occurs when an internal error in the JavaScript engine is thrown. E.g. \"too much recursion\".\n\t                         * - `RangeError` occurs when a numeric variable or parameter is outside of its valid range.\n\t                         * - `ReferenceError` occurs when de-referencing an invalid reference.\n\t                         * - `SyntaxError` occurs while parsing code in eval().\n\t                         * - `TypeError` occurs when a variable or parameter is not of a valid type.\n\t                         * - `URIError` occurs when encodeURI() or decodeURI() are called\n\t                         *\n\t                         * #####Events / lpCoreBus\n\t                         *\n\t                         * ```\n\t                         * // will publish a notification error event\n\t                         * lpCoreBus.publish('lp:notify:error', error);\n\t                         * ```\n\t                         *\n\t                         * #####Resources\n\t                         * - <a target=\"_blank\" href=\"http://www.slideshare.net/nzakas/enterprise-javascript-error-handling-presentation\">\n\t                         *      http://www.slideshare.net/nzakas/enterprise-javascript-error-handling-presentation</a>\n\t                         * - <a target=\"_blank\" href=\"http://eloquentjavascript.net/1st_edition/chapter5.html\">\n\t                         *      http://eloquentjavascript.net/1st_edition/chapter5.html</a>\n\t                         * - <a target=\"_blank\" href=\"https://docs.angularjs.org/api/ng/service/$exceptionHandler\">\n\t                         *      https://docs.angularjs.org/api/ng/service/$exceptionHandler</a>\n\t                         * - <a target=\"_blank\" href=\"http://blog.loadimpact.com/2014/06/03/exception-handling-in-an-angularjs-web-application-tutorial/\">\n\t                         *      http://blog.loadimpact.com/2014/06/03/exception-handling-in-an-angularjs-web-application-tutorial/</a>\n\t                         * - <a target=\"_blank\" href=\"https://technology.amis.nl/2014/10/06/automatic-error-handling-in-angularjs/\">\n\t                         *      https://technology.amis.nl/2014/10/06/automatic-error-handling-in-angularjs/</a>\n\t                         * - <a target=\"_blank\" href=\"http://odetocode.com/blogs/scott/archive/2014/04/21/better-error-handling-in-angularjs.aspx\">\n\t                         *      http://odetocode.com/blogs/scott/archive/2014/04/21/better-error-handling-in-angularjs.aspx</a>\n\t                         * - <a target=\"_blank\" href=\"http://bahmutov.calepin.co/catch-all-errors-in-angular-app.html\">\n\t                         *      http://bahmutov.calepin.co/catch-all-errors-in-angular-app.html</a>\n\t                         * - <a target=\"_blank\" href=\"http://www.nczonline.net/blog/2009/03/03/the-art-of-throwing-javascript-errors/\">\n\t                         *      http://www.nczonline.net/blog/2009/03/03/the-art-of-throwing-javascript-errors/</a>\n\t                         *\n\t                         * @memberof core.error\n\t                         * @ngFactory\n\t                         * @ngInject\n\t                         */\n\t    exports.lpCoreError = function ($exceptionHandler, $q) {\n\t        /**\n\t                                                             * Creates a custom Error Exception\n\t                                                             * @param   {String} name  Exception name\n\t                                                             * @returns {Object}       ErrorCustomException constructor\n\t                                                             */\n\t        API.createException = function (name) {\n\t            function ErrorException(message) {\n\t                this.name = name || 'Error';\n\t                this.message = message || 'Unknown Message';\n\t            }\n\n\t            ErrorException.prototype = new Error();\n\t            ErrorException.prototype.constructor = ErrorException;\n\n\t            return ErrorException;\n\t        };\n\n\t        /**\n\t            * Captures the exception and pass it to Angular exceptionHandler.\n\t            *\n\t            * @example\n\t            * Used in a `try-catch` block:\n\t            *\n\t            * ```\n\t            * try {\n\t            *   someUnpredictableMethod();\n\t            * } catch(error) {\n\t            *   lpCoreError.captureException(error);\n\t            * }\n\t            * ```\n\t            *\n\t            * @example\n\t            * Used in a `Promise`:\n\t            *\n\t            * ```\n\t            * someAsyncThing()\n\t            *   .then(someOtherAsyncThing)\n\t            *   .catch(function (error) {\n\t            *     lpCoreError.captureException(error);\n\t            *   });\n\t            * ```\n\t            *\n\t            * @example\n\t            * Also you can pass extra data:\n\t            *\n\t            * ```\n\t            * lpCoreError.captureException(error, {\n\t            *   some: 'option'\n\t            * });\n\t            * ```\n\t            *\n\t            * @memberof core.error.lpCoreError\n\t            * @param   {Error}  error  Exception\n\t            * @param   {Object} opts   Optional cause/options/context\n\t            * @returns {Object} Angular Error Object\n\t            */\n\t        API.captureException = function (error, opts) {\n\t            return $exceptionHandler(error, opts);\n\t        };\n\n\t        /**\n\t            * Throws the error.\n\t            *\n\t            * @example\n\t            * Throwing normal Error object (not recommended):\n\t            *\n\t            * ```\n\t            * exports.MainCtrl = function(lpCoreError) {\n\t            *   if (somethingWrong) {\n\t            *     lpCoreError.throwException('Normal Error');\n\t            *   }\n\t            * }\n\t            * ```\n\t            *\n\t            * This will throw an exception.name of type Error\n\t            * which will be caught by the **$exceptionHandler**\n\t            *\n\t            * @example\n\t            * Throwing your own exceptions (recommended, categorized exceptions):\n\t            *\n\t            * ```\n\t            * // Create a custom exception Error with Widgets.SampleWidget as name\n\t            * var WidgetErrorException = lpCoreError.createException('WidgetError');\n\t            *\n\t            * exports.MainCtrl = function(lpCoreError) {\n\t            *   if (somethingWrong) {\n\t            *     lpCoreError.throwException(new WidgetErrorException('Something wrong'));\n\t            *   }\n\t            * }\n\t            * ```\n\t            *\n\t            * This will throw an exception.name of type **WidgetError**\n\t            *\n\t            * @example\n\t            * Throwing errors in promises:\n\t            *\n\t            * ```\n\t            * var someOtherAsyncThing = function() {\n\t            *   return new Promise(function(resolve, reject) {\n\t            *     lpCoreError.throwException(new WidgetErrorException('Something wrong'));\n\t            *   });\n\t            * };\n\t            * ```\n\t            *\n\t            * You don't need to use reject method.\n\t            *\n\t            * @memberof core.error.lpCoreError\n\t            * @param error {Error|String} Error message or exception instance\n\t            * @returns {Undefined}\n\t            */\n\t        API.throwException = function (error) {\n\t            if (!(error instanceof Error)) {\n\t                error = new Error(error);\n\t            }\n\t            throw error;\n\t        };\n\n\t        /**\n\t            * Throws Error asynchronously.\n\t            * Throwing an error stops code execution.\n\t            * If the error is not serious enough, throw it asynchronously\n\t            *\n\t            * @memberof core.error.lpCoreError\n\t            * @param   {Error}     error  Error message or exception instance\n\t            * @param   {Number}    delay  Execution delay\n\t            * @param   {Object}    args   Arguments for the delay method\n\t            * @returns {Undefined}\n\t            */\n\t        API.throwExceptionAsync = function (error, delay, args) {\n\t            if (!(error instanceof Error)) {\n\t                error = new Error(error);\n\t            }\n\t            utils.defer(function () {throw error;}, delay || 100, args);\n\t        };\n\n\t        /**\n\t            * Throws an AssertionError if condition is not satisfied.\n\t            * Supposed to be a standardized way for programs to test invariants.\n\t            *\n\t            * @example\n\t            * ```\n\t            * lpCoreError.assert(x === 12); // throws an AssertionError if false, with a default error message\n\t            * lpCoreError.assert(x === 12, 'I think it should be twelve') // throws an AssertionError if false, with the given error message\n\t            * ```\n\t            *\n\t            * @memberof core.error.lpCoreError\n\t            * @param   {Boolean}   condition  Evaluate condition\n\t            * @param   {String}    message    Error message\n\t            * @returns {Undefined}\n\t            */\n\t        API.assert = function (condition, message) {\n\t            AssertionError = AssertionError || API.createException('AssertionError');\n\t            if (!condition) {\n\t                API.throwException(new AssertionError(message || 'Assertion fails!'));\n\t            }\n\t        };\n\n\t        return API;\n\t    };\n\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module) {'use strict'; /**\n\t               * Main lpCoreHttp module\n\t               *\n\t               * @copyright Backbase B.V.\n\t               * @author Backbase R&D - Amsterdam - New York\n\t               *\n\t               * @name http\n\t               * @memberof core\n\t               * @ngModule\n\t               */\n\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\t    'use strict';\n\n\t    module.name = 'http';\n\n\t    var base = __webpack_require__(3);\n\t    // 3rd Party\n\t    // Add angular ressources after base\n\t    __webpack_require__(13);\n\n\t    // module dependencies\n\t    var deps = [\n\t    'ngResource'];\n\n\n\t    module.exports = base.createModule(module.name, deps).\n\t    config(__webpack_require__(14)).\n\t    factory(__webpack_require__(28));\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)(module)))\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_13__;\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict'; /**\n\t               *  ----------------------------------------------------------------\n\t               *  Copyright © Backbase B.V.\n\t               *  ----------------------------------------------------------------\n\t               *  Author : Backbase R&D - Amsterdam - New York\n\t               *  Filename : config.js\n\t               *  Description: http Configuration Module\n\t               *  ----------------------------------------------------------------\n\t               */\n\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\n\t    'use strict';\n\n\t    var base = __webpack_require__(3);\n\t    var $ = __webpack_require__(15);\n\t    var utils = __webpack_require__(16);\n\n\t    var $injector = base.ng.injector([utils.name]);\n\t    var lpCoreUtils = $injector.get('lpCoreUtils');\n\n\t    var xsrfTokenCookie = lpCoreUtils.getCookie('XSRF-TOKEN');\n\n\t    // set xsrf token for non-angular XHR requests\n\n\t    // Configure global XHR requests using jQuery\n\t    if (xsrfTokenCookie !== '') {\n\t        $.ajaxSetup({\n\t            global: true,\n\t            headers: { 'X-XSRF-TOKEN': xsrfTokenCookie } });\n\n\t    }\n\n\t    /**\n\t       * [httpConfig description]\n\t       * @param $httpProvider\n\t       * @param $provide\n\t       * @returns {*}\n\t       */\n\t    // @ngInject\n\t    module.exports = function ($httpProvider) {\n\t        // create the interceptor factory\n\t        $httpProvider.interceptors.push('lpCoreHttpInterceptor');\n\t        var defaultHeaders = {\n\t            'Accept': 'application/json',\n\t            'Content-Type': 'application/json',\n\t            'X-XSRF-TOKEN': xsrfTokenCookie };\n\n\t        $httpProvider.defaults.headers.common = defaultHeaders;\n\t        $httpProvider.defaults.headers.post = defaultHeaders;\n\t        $httpProvider.defaults.headers.put = defaultHeaders;\n\t        //* #TODO add general $resourceProvider.defaults\n\n\t    };\n\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_15__;\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module) {'use strict'; /**\n\t               * Core utilities module exposed as `lpCoreUtils` angular constant object.\n\t               * @name utils\n\t               * @memberof core\n\t               * @ngModule\n\t               */\n\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\n\t  'use strict';\n\n\t  module.name = 'core.utils';\n\n\t  var base = __webpack_require__(3);\n\n\t  /**\n\t                               * @name lpCoreUtils\n\t                               * @memberof core.utils\n\t                               * @ngConstant\n\t                               */\n\t  var utils = base.utils;\n\n\t  var url = __webpack_require__(17);\n\t  var date = __webpack_require__(18);\n\t  var portal = __webpack_require__(20);\n\t  var is = __webpack_require__(23);\n\t  var parse = __webpack_require__(24);\n\t  var string = __webpack_require__(25);\n\t  var cookie = __webpack_require__(26);\n\t  var ngUtils = __webpack_require__(27);\n\n\t  utils.mixin(url);\n\t  utils.mixin(date);\n\t  utils.mixin(portal);\n\t  utils.mixin(is);\n\t  utils.mixin(parse);\n\t  utils.mixin(string);\n\t  utils.mixin(cookie);\n\t  utils.mixin(ngUtils);\n\n\t  module.exports = base.createModule(module.name, []).\n\t  constant({ 'lpCoreUtils': utils });\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)(module)))\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict'; /**\n\t               * Parses / stringifies query string\n\t               * @module url\n\t               */\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\t    'use strict';\n\n\t    var utils = __webpack_require__(3).utils;\n\n\t    /**\n\t                                        * Given a `string` returns the json `object` equivalent.\n\t                                        *\n\t                                        * @memberof core.utils.lpCoreUtils\n\t                                        * @param   {String} str  The query string\n\t                                        * @returns {Object} Returns a json object\n\t                                        */\n\t    exports.parseQuerystring = function parseQuerystring(str) {\n\t        if (!utils.isString(str)) {\n\t            return {};\n\t        }\n\n\t        str = utils.trim(str);\n\n\t        if (!str) {\n\t            return {};\n\t        }\n\n\t        return utils.reduce(str.split('&'), function (obj, param) {\n\t            var parts = param.split('=');\n\t            var key = decodeURIComponent(parts[0]);\n\t            var val = parts[1];\n\n\t            val = utils.isUndefined(val) ? null : decodeURIComponent(val);\n\n\t            if (obj.hasOwnProperty(key)) {\n\t                if (!utils.isArray(obj[key])) {\n\t                    obj[key] = [obj[key]];\n\t                }\n\t                obj[key].push(val);\n\t            } else {\n\t                obj[key] = val;\n\t            }\n\n\t            return obj;\n\t        }, {});\n\t    };\n\n\t    /**\n\t        * Given an `object` returns its query string equivalent.\n\t        *\n\t        * @example\n\t        * ```\n\t        * lpCoreUtils.buildQueryString({\n\t        *   search: 'backbase',\n\t        *   page: 3\n\t        * }); // \"search=backbase&page=3\"\n\t        * ```\n\t        *\n\t        * @memberof core.utils.lpCoreUtils\n\t        * @param   {Object} obj  A json compliant object\n\t        * @returns {String} Returns the query string\n\t        */\n\t    exports.buildQueryString = function buildQueryString(obj) {\n\t        if (!utils.isObject(obj)) {\n\t            return '';\n\t        }\n\n\t        return utils.map(utils.keys(obj), function (key) {\n\t            var val = obj[key];\n\n\t            if (utils.isArray(val)) {\n\t                return utils.map(val, function (val2) {\n\t                    return encodeURIComponent(key) + '=' + encodeURIComponent(val2);\n\t                }).join('&');\n\t            }\n\n\t            return encodeURIComponent(key) + '=' + encodeURIComponent(val);\n\t        }).join('&');\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict'; /**\n\t               * Missing methods in the Date native object and extensions.\n\t               * @module date\n\t               */\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\t    'use strict';\n\n\t    var utils = __webpack_require__(3).utils;\n\t    var pad = function pad(number) {\n\t        return utils.pad(number, 2, '0');\n\t    };\n\n\t    /**\n\t        * Exposes <a href=\"http://momentjs.com/docs/\" target=\"_blank\">momentjs</a> object.\n\t        *\n\t        * @memberof core.utils.lpCoreUtils\n\t        * @example\n\t        * ```\n\t        * var date = lpCoreUtils.date().format('dddd, MMMM Do YYYY, h:mm:ss a');\n\t        * console.log(date); // \"Sunday, February 14th 2010, 3:25:50 pm\"\n\t        * ```\n\t        */\n\t    exports.date = __webpack_require__(19);\n\n\t    /**\n\t                                       * Returns a string in ISO format, `YYYY-MM-DDTHH:mm:ss.sssZ`, UTC format.\n\t                                       *\n\t                                       * @memberof core.utils.lpCoreUtils\n\t                                       * @param   {Date}   date  The input date\n\t                                       * @returns {String}       The ISO string representation.\n\t                                       */\n\t    exports.dateToISOString = function (date) {\n\t        if (Date.prototype.toISOString) {\n\t            return Date.prototype.toISOString.call(date);\n\t        }\n\n\t        /** https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString */\n\t        return date.getUTCFullYear() +\n\t        '-' + pad(date.getUTCMonth() + 1) +\n\t        '-' + pad(date.getUTCDate()) +\n\t        'T' + pad(date.getUTCHours()) +\n\t        ':' + pad(date.getUTCMinutes()) +\n\t        ':' + pad(date.getUTCSeconds()) +\n\t        '.' + (date.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) +\n\t        'Z';\n\t    };\n\n\t    exports.dateFormat = function (date, options) {};\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_19__;\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict'; /**\n\t               * Utility methods to assign with portal.\n\t               * @module string\n\t               */\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\t    'use strict';\n\n\t    var base = __webpack_require__(3);\n\t    var lpPortal = base.inject('lpPortal', __webpack_require__(21).name);\n\t    var utils = base.utils;\n\n\t    /**\n\t                             * Resolve portal client placeholders.\n\t                             *\n\t                             * @example\n\t                             * ```\n\t                             * lpCoreUtils.resolvePortalPlaceholders('$(contextPath)/some/page.html'); // \"/real/context/path/some/page.html\"\n\t                             * ```\n\t                             *\n\t                             * @memberof core.utils.lpCoreUtils\n\t                             * @param   {String} string Path to be resolved\n\t                             * @returns {String}\n\t                             */\n\t    exports.resolvePortalPlaceholders = function (string) {\n\t        var replaceWith = lpPortal.root || '';\n\t        if (utils.isString(string)) {\n\t            var replacements = utils([\n\t            '$(contextRoot)',\n\t            '$(contextPath)',\n\t            '$(servicesPath)']);\n\n\n\t            string = replacements.reduce(function (str, replace) {\n\t                return str.replace(replace, replaceWith);\n\t            }, string);\n\t        }\n\t        return string;\n\t    };\n\n\t    /**\n\t        * Returns the base URL of the given widget instance.\n\t        *\n\t        * @memberof core.utils.lpCoreUtils\n\t        * @param   {Widget} widgetInstance Instance of the widget\n\t        * @returns {String}\n\t        */\n\t    exports.getWidgetBaseUrl = function (widgetInstance) {\n\t        if (!utils.isEmpty(widgetInstance)) {\n\t            var src = widgetInstance.getPreference('src');\n\t            return src && exports.resolvePortalPlaceholders(\n\t            src.replace(/\\/[^\\/]*$/, ''));\n\n\t        }\n\t    };\n\n\t    /**\n\t        * Return value of the portal configuration property\n\t        * @memberof core.utils.lpCoreUtils\n\t        * @param   {String} property  Name of the portal property\n\t        * @returns {String}           Value of the portal property\n\t        */\n\t    // TODO: remove this method after refactoring MFALogin to use lpPortal\n\t    exports.getPortalProperty = function (property) {\n\t        switch (property) {\n\t            case 'serverRoot':\n\t                return lpPortal.root;\n\t            case 'portalName':\n\t                return lpPortal.name;\n\t            case 'pageName':\n\t                return lpPortal.page.name;\n\t            case 'defaultLandingPage':\n\t                return lpPortal.defaultLandingPage;\n\t            case 'locale':\n\t                return lpPortal.locale;\n\t            case 'hideAccount':\n\t                return lpPortal.hideAccount;\n\t            case 'maskAccount':\n\t                return lpPortal.maskAccount;\n\t            default:\n\t                return lpPortal['_portalConfig'][property];}\n\n\t    };\n\n\t    /**\n\t        * Returns value of the page configuration preference\n\t        * @memberof core.utils.lpCoreUtils\n\t        * @param   {String} prop  Name of the page property\n\t        * @returns {String}       Value of the page property\n\t        */\n\t    exports.getPagePreference = function (prop) {\n\t        return lpPortal.page.getPreference(prop);\n\t    };\n\n\t    /**\n\t        * Returns the portal page element\n\t        * @memberof core.utils.lpCoreUtils\n\t        * @returns {Element}\n\t        */\n\t    exports.getPortalPage = function () {\n\t        return lpPortal.page;\n\t    };\n\n\t    exports.generateUUID = function () {\n\n\t        var d = new Date().getTime();\n\t        var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n\t            var r = (d + Math.random() * 16) % 16 | 0;\n\t            d = Math.floor(d / 16);\n\t            return (c === 'x' ? r : r & 0x7 | 0x8).toString(16);\n\t        });\n\t        return uuid;\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module) {'use strict'; /**\n\t               *  ----------------------------------------------------------------\n\t               *  Copyright © Backbase B.V.\n\t               *  ----------------------------------------------------------------\n\t               *  Author : Backbase R&D - Amsterdam - New York\n\t               *  Filename : main.js\n\t               *  Description: module for communication with portal client\n\t               * ----------------------------------------------------------------\n\t               */\n\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\t    'use strict';\n\n\t    module.name = 'core.portal';\n\n\t    var base = __webpack_require__(3);\n\n\t    var deps = [];\n\n\n\t    // @ngInject\n\t    function run() {\n\n\t    }\n\n\t    module.exports = base.createModule(module.name, deps).\n\t    constant(__webpack_require__(22)) // lpPortal\n\t    .run(run);\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)(module)))\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\t    'use strict';\n\t    var utils = __webpack_require__(3).utils;\n\t    var b$ = window.b$ || {};\n\t    var portal = utils.assign({\n\t        portalView: { getElementsByTagName: function getElementsByTagName() {return [];} },\n\t        config: { serverRoot: './' },\n\t        pageName: '',\n\t        pageUUID: '',\n\t        loggedInUserId: '' },\n\t    b$.portal);\n\t    var bd = utils.assign({\n\t        designMode: false },\n\t    window.bd);\n\n\t    var page = {\n\t        name: portal.pageName,\n\t        id: portal.pageUUID };\n\n\n\t    var pageClient = portal.portalView.getElementsByTagName('page')[0];\n\t    page.getPreference = function (prop) {\n\t        if (pageClient) {\n\t            return pageClient.getPreference(prop);\n\t        }\n\t    };\n\n\t    exports.lpPortal = {\n\t        root: portal.config.serverRoot,\n\t        name: portal.portalName,\n\t        page: page,\n\t        defaultLandingPage: portal.config.defaultLandingPage,\n\t        linkId: portal.linkUUID,\n\t        userId: portal.loggedInUserId,\n\t        designMode: bd.designMode === 'true',\n\t        // used by module-accounts: (temporary solution, should be widget preferences)\n\t        // portal.config.locale - choses the type of IBAN. possible values EU, US, en-US\n\t        locale: portal.config.locale,\n\t        // portal.config.hideAccount - if true account no is hidden\n\t        hideAccount: portal.config.hideAccount,\n\t        // portal.config.maskAccount - if number only first # will show\n\t        maskAccount: portal.config.maskAccount,\n\t        // temporary solution in case that some config value is missing\n\t        // if you use it, console.log the property that is requested\n\t        '_portalConfig': portal.config\n\t        // resourceManager?\n\t        // noDup is not used anywhere\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict'; /**\n\t               * Testing methods.\n\t               * @module is\n\t               */\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\n\t    'use strict';\n\n\t    /**\n\t                   * Check if input is valid email address.\n\t                   *\n\t                   * @memberof core.utils.lpCoreUtils\n\t                   * @param   {String}  email  Email address\n\t                   * @returns {Boolean}\n\t                   */\n\t    exports.isValidEmail = function (email) {\n\t        var regularExpressions = /^\\w+([\\.\\-]?\\w+)*@\\w+([\\.\\-]?\\w+)*(\\.\\w+)+$/;\n\t        return regularExpressions.test(email);\n\t    };\n\n\t    /**\n\t        * Check if string is valid UUID\n\t        *\n\t        * @memberof core.utils.lpCoreUtils\n\t        * @param   {String}  string\n\t        * @returns {Boolean}\n\t        */\n\t    exports.isValidUUID = function (string) {\n\t        var regularExpressions = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;\n\t        return regularExpressions.test(string);\n\t    };\n\n\t    /**\n\t        * Validate the payment detail checksum based on ISO 7064\n\t        * http://en.wikipedia.org/wiki/International_Bank_Account_Number#Validating_the_IBAN\n\t        * @param  {String} input the input to be validated\n\t        */\n\t    exports.isValidISO7064Checksum = function (input) {\n\t        /**\n\t                                                       * Replace letters from the IBAN with numbers\n\t                                                       * @param  {String} str [description]\n\t                                                       */\n\t        var replaceLetters = function replaceLetters(str) {\n\t            var strArray = str.split('');\n\t            for (var i = 0; i < strArray.length; i++) {\n\t                if (/[A-Z]/.test(strArray[i])) {\n\t                    strArray[i] = strArray[i].charCodeAt(0) - 55;\n\t                }\n\t            }\n\t            return strArray.join('');\n\t        };\n\n\t        /**\n\t            * Performs a basic mod-97 operation for IBAN validation (as described in ISO 7064)\n\t            * @param  {String} str Max 9 character string respresenting part of the IBAN\n\t            */\n\t        var mod97 = function mod97(str) {\n\t            var result = parseInt(str, 10) % 97;\n\t            result = result.toString();\n\n\t            return result.length === 1 ? '0' + result : result;\n\t        };\n\n\t        if (input) {\n\t            input = input.substr(4) + input.substr(0, 4);\n\t            input = replaceLetters(input);\n\t            //bypasses javascript INT32 restriction\n\t            while (input.length > 2 && !isNaN(input)) {\n\t                input = mod97(input.substr(0, 9)) + input.substr(9);\n\t            }\n\t            if (parseInt(input, 10) === 1) {\n\t                return true;\n\t            }\n\t        }\n\n\t        return false;\n\t    };\n\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict'; /**\n\t               * Parsing methods.\n\t               * @module parse\n\t               */\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\n\t  'use strict';\n\n\t  /**\n\t                 * Normalizes boolean values, to be real Boolean type.\n\t                 *\n\t                 * @example\n\t                 * ```\n\t                 * lpCoreUtils.parseBoolean(''); // false\n\t                 * ```\n\t                 *\n\t                 * @memberof core.utils.lpCoreUtils\n\t                 * @param    {String|Boolean|Number} val\n\t                 * @returns  {Boolean}\n\t                 */\n\t  exports.parseBoolean = function (val) {\n\t    return typeof val === 'boolean' && val ||\n\t    typeof val === 'string' && /\\s*true\\s*/i.test(val) ||\n\t    typeof val === 'number' && val !== 0;\n\t  };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict'; /**\n\t               * String helper methods.\n\t               * @module utils\n\t               */\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\n\t    'use strict';\n\n\t    var utils = __webpack_require__(3).utils;\n\n\t    /**\n\t                                        * Removes all the html tags from `str`.\n\t                                        * @memberof core.utils.lpCoreUtils\n\t                                        * @param   {String} str  Input string\n\t                                        * @returns {String}\n\t                                        */\n\t    exports.stripHtml = function (str) {\n\t        if (!utils.isString(str)) {\n\t            // TODO: use custom log object when implemented\n\t            console.log(str + ' is not a String');\n\t            return '';\n\t        }\n\n\t        return str.replace(/<\\/?[^>]+>/g, '');\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict'; /**\n\t               * Cookie helper methods.\n\t               * @module utils\n\t               */\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\n\t    'use strict';\n\n\t    /**\n\t                   * Returns cookie by name\n\t                   *\n\t                   * @memberof core.utils.lpCoreUtils\n\t                   * @param   {String} name Name of a cookie\n\t                   * @returns {String}\n\t                   */\n\t    exports.getCookie = function (name) {\n\t        var value = '; ' + document.cookie,\n\t        parts = '';\n\n\t        if (typeof name === 'string') {\n\t            parts = value.split('; ' + name + '=');\n\t            if (parts.length === 2) {\n\t                return parts.pop().split(';').shift();\n\t            }\n\t        }\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict'; /**\n\t               * Helper angular methods.\n\t               * @module ng\n\t               */\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\n\t    'use strict';\n\n\t    /**\n\t                   * Executes angular digest on the given scope\n\t                   * if it's not already being executed.\n\t                   * Then invokes the function `fn`.\n\t                   *\n\t                   * @memberof core.utils.lpCoreUtils\n\t                   * @param   {Object}  scope  Check digest phase in given `scope`\n\t                   * @param   {Function} fn  Function to execute\n\t                   */\n\t    exports.safeApply = function safeApply(scope, fn) {\n\t        var phase = scope.$root.$$phase;\n\t        if (phase === '$apply' || phase === '$digest') {\n\t            fn();\n\t        } else {\n\t            scope.$apply(fn());\n\t        }\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict'; /**\n\t               *  ----------------------------------------------------------------\n\t               *  Copyright © Backbase B.V.\n\t               *  ----------------------------------------------------------------\n\t               *  Author : Backbase R&D - Amsterdam - New York\n\t               *  Filename : httpInterceptor.js\n\t               *  Description: Launchpad Http Interceptor\n\t               *  ----------------------------------------------------------------\n\t               */\n\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\n\t    'use strict';\n\n\t    var $ = __webpack_require__(15);\n\t    var base = __webpack_require__(3);\n\t    var utils = base.utils;\n\t    var queue = base.queue;\n\t    var ignoreList = [];\n\n\t    /**\n\t                          * Accepts 1..n objects and the last argument must be the key. Starts\n\t                          * searching for the key in the first object and so on until it is found,\n\t                          * then return that value and deletes that property from the object.\n\t                          * @private\n\t                          * @param   {...Object} objects\n\t                          * @param   {String}    key      Last argument\n\t                          * @returns {*} First value found in `objects` by the `key`.\n\t                          */\n\t    var getValue = function getValue() /*objects, key*/{\n\t        var objects = [].slice.call(arguments);\n\t        var key = objects.pop();\n\t        var value;\n\n\t        for (var i = 0, len = objects.length; i < len; i++) {\n\t            if (objects[i].hasOwnProperty(key)) {\n\t                value = objects[i][key];\n\t                delete objects[i][key];\n\t                return value;\n\t            }\n\t        }\n\t    };\n\n\t    /**\n\t        * Replaces `url` string ocurrences of $(property_name) with the values\n\t        * of `property_name` in `data` and `params` objects. If it is found the\n\t        * property is deleted from the object. It will start searching in `data`\n\t        * and then in `params`.\n\t        * @private\n\t        * @param   {String} url\n\t        * @param   {Object} data\n\t        * @param   {Object} params\n\t        * @returns {String}\n\t        */\n\t    var interpolateUrl = function interpolateUrl(url, data, params) {\n\t        url = utils.trim(url).replace(\n\t        /\\$\\(([a-z]\\w*)\\)/gi,\n\t        function ($0, label) {\n\t            return getValue(data, params, label);\n\t        });\n\n\t        return url;\n\t    };\n\n\t    /**\n\t        * Check if current response is notifiable.\n\t        * @private\n\t        */\n\t    var isNotifyable = function isNotifyable(response) {\n\t        var url = response.config.url;\n\t        return !ignoreList.some(function (pattern) {\n\t            return pattern instanceof RegExp ? pattern.test(url) : url.indexOf(pattern) > -1;\n\t        });\n\t    };\n\n\t    /**\n\t        * Calculate context id from request object. Used to compare \"similar\" requests and group them in retry dialog.\n\t        * @private\n\t        * @param response\n\t        * @return {string}\n\t        */\n\t    var getContextId = function getContextId(response) {\n\t        return [\n\t        response.config.method,\n\t        response.config.url,\n\t        $.param(response.config.params)].\n\t        join('__');\n\t    };\n\n\n\t    /**\n\t        * Request/Response http interceptor\n\t        * @memberof core.http\n\t        * @ngFactory\n\t        * @ngInject\n\t        */\n\t    exports.lpCoreHttpInterceptor = function httpInterceptor($injector, $q) {\n\n\n\t        /**\n\t                                                                              * Interceptors get called with a http config object.\n\t                                                                              * The function is free to modify the config object or create a new one.\n\t                                                                              * The function needs to return the config object directly,\n\t                                                                              * or a promise containing the config or a new config object.\n\t                                                                              * @alias request\n\t                                                                              * @memberof core.http.lpCoreHttpInterceptor\n\t                                                                              * @param config {Object} Original request configuration\n\t                                                                              * @returns {Object} Modified request configuration\n\t                                                                              */\n\t        function requestInterceptor(config) {\n\t            config.data = config.data || {};\n\t            config.params = config.params || {};\n\n\t            // replaces all url parameters\n\t            config.url = interpolateUrl(config.url, config.data, config.params);\n\n\t            return config;\n\t        }\n\n\t        /**\n\t           * Interceptor gets called when a previous interceptor threw an error or resolved with a rejection.\n\t           * @alias requestError\n\t           * @memberof core.http.lpCoreHttpInterceptor\n\t           * @param responseErr {Object} Response http error\n\t           * @returns {Object} Modified response\n\t           */\n\t        function requestErrorInterceptor(responseErr) {\n\t            // not modified\n\t            return $q.reject(responseErr);\n\t        }\n\t        /**\n\t           * Interceptors get called with http response object.\n\t           * The function is free to modify the response object or create a new one.\n\t           * The function needs to return the response object directly,\n\t           * or as a promise containing the response or a new response object.\n\t           * @alias response\n\t           * @memberof core.http.lpCoreHttpInterceptor\n\t           * @param response {Object} HTTP response\n\t           * @returns {Object} Modified response\n\t           */\n\t        function responseInterceptor(response) {\n\t            // not modified\n\t            return response || $q.when(response);\n\t        }\n\n\t        /**\n\t           * Interceptor gets called when a previous interceptor threw an error or resolved with a rejection.\n\t           * @alias responseError\n\t           * @memberof core.http.lpCoreHttpInterceptor\n\t           * @param responseErr {Object} Response http error\n\t           * @returns {Object} Modified response error\n\t           */\n\t        function responseErrorInterceptor(responseErr) {\n\t            // Don't handle 404's\n\t            if (responseErr.status && responseErr.status !== 404) {\n\n\t                if (typeof responseErr.data !== 'string') {\n\t                    responseErr.data = responseErr.data || {};\n\t                } else\n\t                {\n\t                    // is string so we should not care for now\n\t                    // should be an object\n\t                    responseErr.data = {};\n\t                }\n\t                responseErr.data.errors = responseErr.data.errors || [];\n\n\t                // if endpoint doesn't provide any errors\n\t                // we create it and add the statusText if any\n\t                // otherwise 'unknown error message' key\n\t                var errors = responseErr.data.errors;\n\t                if (errors.length <= 0) {\n\t                    errors.push({\n\t                        code: responseErr.status,\n\t                        message: responseErr.statusText || 'Unknown error message' });\n\n\t                }\n\n\n\t                // ignore 403 and 401 for being notifiable\n\t                if (responseErr.status !== 401 && responseErr.status !== 403) {\n\t                    if (isNotifyable(responseErr)) {\n\t                        var context = {\n\t                            contextId: getContextId(responseErr),\n\t                            messages: responseErr.data.errors };\n\n\t                        return queue.push(context, function retryFunction() {\n\t                            return $injector.get('$http')(responseErr.config);\n\t                        });\n\t                    }\n\t                }\n\t            }\n\n\t            return $q.reject(responseErr);\n\t        }\n\n\t        /**\n\t           * Configuring of responseError interceptor notification behavior.\n\t           * Widgets have ability to prevent notifications from poping up for certain endpoints.\n\t           * @memberOf core.http.lpCoreHttpInterceptor\n\t           * @param {Object} params - Configuration of the notifications and retry queue.\n\t           * @param {Array} params.ignore - Array of urls or regular expression patters responseError interseptor will use to decide whether to show notification or not.\n\t           * @example Here is the example of how widget can configure interceptor to ignore accounts and debit accounts modules service error, as well as an example of regular expression pattern:\n\t           *\n\t           * ```\n\t           * lpCoreHttpInterceptor.configureNotifications({\n\t           *     ignore: [\n\t           *         widget.getPreference('accountsDataSrc'),\n\t           *         '$(servicesPath)/services/rest/v1/debit-accounts',\n\t           *         /services\\/profile\\/.+?/\n\t           *     ]\n\t           * });\n\t           * ```\n\t           *\n\t           * Ignore array can contain of simple URL strings or regular expression patterns. Placeholders like `$(servicesPath)` and `$(contextRoot)` are substituted automatically.\n\t           */\n\t        function configureNotifications(params) {\n\t            if (params.ignore) {\n\t                params.ignore = params.ignore.map(function (pattern) {\n\t                    return pattern instanceof RegExp ? pattern : utils.resolvePortalPlaceholders(pattern);\n\t                });\n\t                ignoreList = ignoreList.concat(params.ignore);\n\t            }\n\t        }\n\n\t        return {\n\t            configureNotifications: configureNotifications,\n\t            request: requestInterceptor,\n\t            requestError: requestErrorInterceptor,\n\t            response: responseInterceptor,\n\t            responseError: responseErrorInterceptor };\n\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module) {'use strict'; /**\n\t               * This module is responsible for internationalisation of all Launchpad widgets.\n\t               *\n\t               * #####Configuration\n\t               *\n\t               * External settings that are passed to it are:\n\t               *\n\t               * - `locale` – <a href=\"http://www.w3.org/TR/html401/struct/dirlang.html#h-8.1.1\">Language code</a>.\n\t               * Read from the lang attribute of html tag of the page.\n\t               * If lang attribute is not defined, fallbacks to browser's default language.\n\t               * You can change locale on the fly by publishing `lpCoreI18nUtils.LOCALE_CHANGE_EVENT`\n\t               *\n\t               * - `path` – Path where common translation files and angular locale files are stored.\n\t               * Default path is `$(contextRoot)/static/launchpad/modules/config/i18n`\n\t               *\n\t               * - `mergedFiles` – Used to determine if translation files are merged\n\t               * into one (one common and one per widget) or every language is separated in it's own file.\n\t               * Default value is `true` (files are merged)\n\t               *\n\t               * Backend is responsible for determining the right locale and printing it as a value of `html.lang` attribute.\n\t               * It is doing so in the following order:\n\t               *\n\t               * 1. If present, then return launchpad user(party) preference `lpLocale`.\n\t               * 2. If present, then return page preference `lpLocale`.\n\t               * 3. If present, then return portal preference `lpLocale`.\n\t               * 4. If present, then return value of `launchpad.defaultLocale` defined in `backbase.properties`.\n\t               *\n\t               * To change the `path` and `mergedFiles` settings, create i18n object with those keys\n\t               * on global window.launchpad object, for example:\n\t               *\n\t               * ```\n\t               * window.launchpad = {\n\t               *   i18n: {\n\t               *     path: 'bower_components/config/i18n',\n\t               *     mergedFiles: false\n\t               *   }\n\t               * }\n\t               * ```\n\t               *\n\t               * Path to <a href=\"https://github.com/angular/angular.js/tree/master/src/ngLocale\" target=\"_blank\">angular locale files</a>\n\t               * is built like: `path + '/ng-locale/angular-locale_{locale}.js'`,\n\t               * where `{locale}` is replaced with current locale string.\n\t               *\n\t               * Every Launchpad widgets contains property `locale` (accessible in Portal Manager).\n\t               * This property is used just to enable/disable i18n support.\n\t               * If there is no value, widget will not be initialized for i18n support.\n\t               * Any value will enable i18n but it is never used internally.\n\t               *\n\t               * #####Translation files\n\t               *\n\t               * Widget translation strings are defined inside `locale/all.json` in widget's directory\n\t               * and in `i18n.path/common.json` file. This applies when `mergedFiles` setting is set to true,\n\t               * otherwise, each laguage will have it's own file in the same location.\n\t               * Translation file can look like this:\n\t               *\n\t               * ```\n\t               * {\n\t               *   \"nl-NL\": {\n\t               *     \"Enrol for Estatements\": \"Schrijf je in voor eStatements\",\n\t               *     \"Statement as of\": \"Verklaring als van\"\n\t               *   },\n\t               *\n\t               *   \"ru-RU\": {\n\t               *     \"Enrol for Estatements\": \"Получать отчеты\",\n\t               *     \"Statement as of\": \"Отчет за\"\n\t               *   }\n\t               * }\n\t               * ```\n\t               *\n\t               * #####Translation\n\t               * To translate string used in Launchpad Widget html template, use angular tranlate filter:\n\t               *\n\t               * ```\n\t               * <span>{{'Statement as of'|translate}}</span>\n\t               * ```\n\t               *\n\t               * or lp-i18n directive described below.\n\t               *\n\t               * #####Enable i18n Language Switching in the UI\n\t               * To Enable i18n Language Switching in the UI, follow the below instructions to add a preference to a widget.\n\t               * 1. Open the PortalManager.\n\t               * 2. Navigate the Explorer to `Portals > Retail-banking > Items > Home`.\n\t               * 3. Select \"widget-navbar-advanced..\".\n\t               * 4. Select the \"Properties\" tab.\n\t               * 5. Activate the add property button \"+\".\n\t               * 6. In the \"Create Preference\" modal set.\n\t               *  1. Name to locales.\n\t               *  2. Label to locales.\n\t               *  3. Value to en-US,nl-NL  (comma separated list of languages).\n\t               * 7. Click save and now in the Client Portal a language menu should appear.\n\t               *\n\t               * Note: the language preference is not saved in a session.\n\t               *\n\t               *\n\t               * @copyright Backbase B.V.\n\t               * @author Backbase R&D - Amsterdam - New York\n\t               *\n\t               * #####References</h4>\n\t               *\n\t               * - <a target=\"_blank\" href=\"http://angular-translate.github.io/\">\n\t               *       http://angular-translate.github.io/</a>\n\t               * - <a target=\"_blank\" href=\"https://hacks.mozilla.org/2014/12/introducing-the-javascript-internationalization-api\">\n\t               *       https://hacks.mozilla.org/2014/12/introducing-the-javascript-internationalization-api</a>\n\t               *\n\t               * @name i18n\n\t               * @memberof core\n\t               * @ngModule\n\t               */\n\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\t    'use strict';\n\n\t    module.name = 'core.i18n';\n\n\t    var base = __webpack_require__(3);\n\t    // 3rd party modules\n\t    __webpack_require__(30);\n\t    __webpack_require__(31);\n\n\t    // some core modules\n\t    var utils = __webpack_require__(16);\n\t    var bus = __webpack_require__(4);\n\t    var error = __webpack_require__(9);\n\t    var cache = __webpack_require__(7);\n\n\t    var deps = [\n\t    'pascalprecht.translate',\n\t    'tmh.dynamicLocale',\n\t    utils.name,\n\t    error.name,\n\t    cache.name,\n\t    bus.name];\n\n\n\t    // @ngInject\n\t    function run(lpCoreBus, lpCoreI18n, lpCoreI18nUtils) {\n\n\t        lpCoreBus.subscribe(lpCoreI18nUtils.LOCALE_CHANGE_EVENT, function (locale) {\n\t            lpCoreI18n.setLocale(locale);\n\t        });\n\t    }\n\n\t    module.exports = base.createModule(module.name, deps).\n\t    value('lpI18nCommonTranslation') // common translations stored in loader factory\n\t    .constant(__webpack_require__(32)) // lpCoreI18nUtils\n\t    .factory(__webpack_require__(33)) // lpCoreI18nLoader\n\t    .provider(__webpack_require__(34)) // lpCoreI18n\n\t    .filter(__webpack_require__(35)) // currencySymbol\n\t    .directive(__webpack_require__(36)) // lp-i18n & lp-i18n-switch\n\t    .factory(__webpack_require__(37)) // exposes i18nUtils.loadMessages\n\t    .directive(__webpack_require__(38)) // contains lp-message directive\n\t    .run(run);\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)(module)))\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_30__;\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_31__;\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\t    'use strict';\n\n\t    var CURRENCY_MAP = {\n\t        'ALL': 'Lek',\n\t        'AFN': '؋',\n\t        'ARS': '$',\n\t        'AWG': 'ƒ',\n\t        'AUD': '$',\n\t        'AZN': 'ман',\n\t        'BSD': '$',\n\t        'BBD': '$',\n\t        'BYR': 'p.',\n\t        'BZD': 'BZ$',\n\t        'BMD': '$',\n\t        'BOB': '$b',\n\t        'BAM': 'KM',\n\t        'BWP': 'P',\n\t        'BGN': 'лв',\n\t        'BRL': 'R$',\n\t        'BND': '$',\n\t        'KHR': '៛',\n\t        'CAD': '$',\n\t        'KYD': '$',\n\t        'CLP': '$',\n\t        'CNY': '¥',\n\t        'COP': '$',\n\t        'CRC': '₡',\n\t        'HRK': 'kn',\n\t        'CUP': '₱',\n\t        'CZK': 'Kč',\n\t        'DKK': 'kr',\n\t        'DOP': 'RD$',\n\t        'XCD': '$',\n\t        'EGP': '£',\n\t        'SVC': '$',\n\t        'EEK': 'kr',\n\t        'EUR': '€',\n\t        'FKP': '£',\n\t        'FJD': '$',\n\t        'GHC': '¢',\n\t        'GIP': '£',\n\t        'GTQ': 'Q',\n\t        'GGP': '£',\n\t        'GYD': '',\n\t        'HNL': 'L',\n\t        'HKD': '$',\n\t        'HUF': 'Ft',\n\t        'ISK': 'kr',\n\t        'IDR': 'Rp',\n\t        'IRR': '﷼',\n\t        'IMP': '£',\n\t        'ILS': '₪',\n\t        'JMD': 'J$',\n\t        'JPY': '¥',\n\t        'JEP': '£',\n\t        'KZT': 'лв',\n\t        'KGS': 'лв',\n\t        'LAK': '₭',\n\t        'LVL': 'Ls',\n\t        'LBP': '£',\n\t        'LRD': '$',\n\t        'LTL': 'Lt',\n\t        'MKD': 'ден',\n\t        'MYR': 'RM',\n\t        'MUR': '₨',\n\t        'MXN': '$',\n\t        'MNT': '₮',\n\t        'MZN': 'MT',\n\t        'NAD': '$',\n\t        'NPR': '₨',\n\t        'ANG': 'ƒ',\n\t        'NZD': '$',\n\t        'NIO': 'C$',\n\t        'NGN': '₦',\n\t        'KPW': '₩',\n\t        'NOK': 'kr',\n\t        'OMR': '﷼',\n\t        'PKR': '₨',\n\t        'PAB': 'B/.',\n\t        'PYG': 'Gs',\n\t        'PEN': 'S/.',\n\t        'PHP': '₱',\n\t        'PLN': 'zł',\n\t        'QAR': '﷼',\n\t        'RON': 'lei',\n\t        'RUB': 'руб',\n\t        'SHP': '£',\n\t        'SAR': '﷼',\n\t        'RSD': 'Дин.',\n\t        'SCR': '₨',\n\t        'SGD': '$',\n\t        'SBD': '$',\n\t        'SOS': 'S',\n\t        'ZAR': 'R',\n\t        'KRW': '₩',\n\t        'LKR': '₨',\n\t        'SEK': 'kr',\n\t        'CHF': 'CHF',\n\t        'SRD': '$',\n\t        'SYP': '£',\n\t        'TWD': 'NT$',\n\t        'THB': '฿',\n\t        'TTD': 'TT$',\n\t        'TRL': '₤',\n\t        'TVD': '$',\n\t        'UAH': '₴',\n\t        'GBP': '£',\n\t        'USD': '$',\n\t        'UYU': '$U',\n\t        'UZS': 'лв',\n\t        'VEF': 'Bs',\n\t        'VND': '₫',\n\t        'YER': '﷼',\n\t        'ZWD': 'Z$' };\n\n\n\t    /**\n\t                        * NOTE: Doesn't work with angular Dependecy Injection\n\t                        * @memberof core.i18n\n\t                        * @ngConstant\n\t                        */\n\t    exports.lpCoreI18nUtils = {\n\t        WIDGET_TRANSLATION_PREFERENCE: 'i18nEndPoint',\n\t        /**\n\t                                                        * Hash containing currency symbols for every currency code\n\t                                                        * @example:\n\t                                                        * ```\n\t                                                        * lpCoreI18nUtils.CURRENCY_MAP.USD // \"$\"\n\t                                                        * ```\n\t                                                        */\n\t        CURRENCY_MAP: CURRENCY_MAP,\n\t        DEFAULT_TRANSLATIONS_PATH: '/locale/',\n\n\t        /**\n\t                                                * Name of the event triggered when locale data is loaded\n\t                                                */\n\t        COMMON_I18N_LOAD_EVENT: 'lpi18n:data:load',\n\n\t        /**\n\t                                                     * Name of the event triggered when locale string changes\n\t                                                     *\n\t                                                     * @example\n\t                                                     * ```\n\t                                                     * lpCoreBus.subscribe(lpCoreI18nUtils.LOCALE_CHANGE_EVENT, function(locale) {\n\t                                                     *   alert(locale); // alerts current locale\n\t                                                     * });\n\t                                                     * lpCoreBus.publish(lpCoreI18nUtils.LOCALE_CHANGE_EVENT, 'nl-NL'); // changes the language of all launchpad widgets\n\t                                                     * ```\n\t                                                     */\n\t        LOCALE_CHANGE_EVENT: 'lpi18n:locale:change',\n\t        ALL_LOCALES_FILE: 'all.json',\n\n\t        /**\n\t                                       * Normalizes locale string, returning object containing normalized string and external flag.\n\t                                       * @memberof core.i18n.lpCoreI18nUtils\n\t                                       * @param   {String} locale to normalize, e.g. 'en-us' or 'en_US' or 'EN-US' becomes 'en-US'\n\t                                       * @returns {Object} locale object with the external flag\n\t                                       */\n\t        parseLocale: function parseLocale(locale) {\n\t            // hardcode for 'en' -> 'en-US'\n\t            if (locale === 'en') {return 'en-US';}\n\n\t            if (typeof locale === 'string') {\n\t                var parts = locale.split(/[-_]/);\n\t                if (!parts[1]) {\n\t                    parts.push(parts[0]); // nl -> nl-NL, ru -> ru-RU etc.\n\t                }\n\t                parts[0] = parts[0].toLowerCase();\n\t                parts[1] = parts[1].toUpperCase();\n\n\t                return parts.join('-');\n\t            }\n\t            return '';\n\t        } };\n\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\t    'use strict';\n\n\t    // @ngInject\n\t    exports.lpCoreI18nLoader = function (lpCoreUtils, lpCoreI18nUtils, $q, $http, lpI18nCommonTranslation, lpCoreCachePromise, lpCoreBus, lpCoreError) {\n\t        /**\n\t                                                                                                                                                         * Returns either cached promise or new one.\n\t                                                                                                                                                         * @param {String} url - Url of the translation file.\n\t                                                                                                                                                         * @returns {Object} Promise object\n\t                                                                                                                                                         */\n\t        function getPromise(url) {\n\t            return lpCoreCachePromise({\n\t                key: url,\n\t                promise: function promise() {\n\t                    return $http.get(url);\n\t                } });\n\n\t        }\n\t        /**\n\t           * Main i18n loader\n\t           * @param {Object} options - Loader options\n\t           * @param {String} options.key - Locale string, added by angular-translate automatically\n\t           * @param {String} options.widgetUrl - Url of the widget\n\t           * @param {String} options.i18nPath - Path where translation files are stored\n\t           * @param {Boolean} options.merged - If false, load (key).json, otherwise load ALL_LOCALES_FILE\n\t           * @returns {Object} Promise object\n\t           */\n\t        return function (options) {\n\t            // widget translation path\n\t            var wUrl = options.widgetUrl + lpCoreI18nUtils.DEFAULT_TRANSLATIONS_PATH;\n\t            wUrl = lpCoreUtils.trimRight(wUrl, '/') + '/' + (options.merged ? lpCoreI18nUtils.ALL_LOCALES_FILE : options.key + '.json');\n\t            // common translations path\n\t            var cUrl = options.i18nPath + '/' + (options.merged ? 'common.json' : options.key + '.json');\n\n\t            return $q.all({\n\t                common: getPromise(cUrl),\n\t                widget: getPromise(wUrl) }).\n\t            then(function (res) {\n\t                var data;\n\t                if (options.merged) {\n\t                    // if all translations are in the same file, set them only once\n\t                    if (!lpI18nCommonTranslation) {\n\t                        lpI18nCommonTranslation = res.common.data; // TODO: doesn't work with [key], check for bug in deck container\n\t                        lpCoreBus.publish(lpCoreI18nUtils.COMMON_I18N_LOAD_EVENT, lpI18nCommonTranslation);\n\t                    }\n\t                    data = lpCoreUtils.extend({}, res.common.data[options.key], res.widget.data[options.key]);\n\t                } else {\n\t                    lpI18nCommonTranslation = res.common.data;\n\t                    lpCoreBus.publish(lpCoreI18nUtils.COMMON_I18N_LOAD_EVENT, lpI18nCommonTranslation);\n\n\t                    data = lpCoreUtils.extend({}, res.common.data, res.widget.data);\n\t                }\n\n\t                return data;\n\t            }).catch(function (err) {\n\t                lpCoreError.captureException(err);\n\t            });\n\t        };\n\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\t    'use strict';\n\n\t    // when triggering LOCALE_CHANGE event in the run phase, do it only once\n\t    var once = true;\n\t    var options;\n\t    var sLocales = ['en-US', 'en-IN'];\n\n\t    function supportedLocale(valLocale) {\n\t        var supportLocale = valLocale;\n\t        if (!(sLocales.indexOf(supportLocale) !== -1)) {\n\t            supportLocale = 'en-US';\n\t        }\n\t        return supportLocale;\n\t    }\n\n\t    function getHtmlAttr(name) {\n\t        return document.getElementsByTagName('html')[0].getAttribute(name);\n\t    }\n\n\t    /**\n\t       * @memberof core.i18n\n\t       * @ngProvider\n\t       * @ngInject\n\t       */\n\t    exports.lpCoreI18n = function (lpCoreUtils, $translateProvider, lpCoreI18nUtils, tmhDynamicLocaleProvider) {\n\n\t        // runs only once\n\t        if (!options) {\n\t            var lp = window.launchpad;\n\n\t            options = {\n\t                locale: supportedLocale(lpCoreI18nUtils.parseLocale(\n\t                getHtmlAttr('lang') || getHtmlAttr('xml:lang') ||\n\t                navigator.language || navigator.browserLanguage || navigator.systemLanguage || navigator.userLanguage)),\n\n\t                merged: true,\n\t                i18nPath: lpCoreUtils.resolvePortalPlaceholders(\n\t                lp ? '$(contextRoot)/static/launchpad/modules/config/i18n' : '/bower_components/config/i18n') };\n\n\n\n\t            if (lp && lp.i18n) {\n\t                options.merged = lp.i18n.mergedFiles;\n\t                options.i18nPath = lpCoreUtils.resolvePortalPlaceholders(lp.i18n.path);\n\t            }\n\t        }\n\n\t        tmhDynamicLocaleProvider.localeLocationPattern(options.i18nPath + '/ng-locale/angular-locale_{{locale}}.js');\n\t        $translateProvider.preferredLanguage(options.locale);\n\n\t        /**\n\t                                                               * Set up i18n configuration based on widget instance\n\t                                                               * @param {Object} widget instance widget\n\t                                                               */\n\t        this.useWidgetInstance = function (widgetInstance) {\n\t            if (lpCoreUtils.isEmpty(widgetInstance.getPreference('locale'))) {\n\t                return;\n\t            }\n\n\t            $translateProvider.useLoader('lpCoreI18nLoader', {\n\t                i18nPath: options.i18nPath,\n\t                merged: options.merged,\n\t                widgetUrl: lpCoreUtils.getWidgetBaseUrl(widgetInstance) });\n\n\t        };\n\n\t        /**\n\t            * Service i18n\n\t            * @param   {Function} $filter           Filter in module ng\n\t            * @param   {Object}   lpCoreI18nLoader  Request static loader provider\n\t            * @param   {Object}   $translate        ng-translate 3rd party\n\t            * @param   {Object}   tmhDynamicLocale  Dynamic locale switcher 3rd party\n\t            * @private\n\t            * @returns {Object}                     i18n Service\n\t            * @ngInject\n\t            */\n\t        this.$get = function ($filter, lpCoreI18nLoader, $translate, tmhDynamicLocale, lpCoreBus) {\n\t            // Syncing the default locale with Containers\n\t            // This event should be fired only once, not per each widget\n\t            // setLocale methods of the widget are subsribed to this event\n\t            if (once) {\n\t                setTimeout(function () {\n\t                    lpCoreBus.publish(lpCoreI18nUtils.LOCALE_CHANGE_EVENT, options.locale);\n\t                }, 0);\n\t                once = false;\n\t            }\n\t            return {\n\t                /**\n\t                      * Changes locale of the widget module.\n\t                      * @memberof core.i18n.lpCoreI18n\n\t                      * @param {String} locale Locale string, e.g. 'en-US'\n\t                      */\n\t                setLocale: function setLocale(locale) {\n\t                    $translate.use(locale);\n\t                    tmhDynamicLocale.set(locale.toLowerCase());\n\t                },\n\n\t                /**\n\t                    * Returns proper currency format, using currency filter.\n\t                    *\n\t                    * @example\n\t                    * ```\n\t                    * lpCoreI18n.formatCurrency(24, 'USD'); // \"$24\"\n\t                    * ```\n\t                    *\n\t                    * @memberof core.i18n.lpCoreI18n\n\t                    * @param   {Number} amount    Amount\n\t                    * @param   {String} currency  Currency code\n\t                    * @returns {String} Formatted string\n\t                    */\n\t                formatCurrency: function formatCurrency(amount, currency) {\n\t                    var symbol = $filter('currencySymbol')(currency);\n\t                    return $filter('currency')(amount, symbol); // built in ng filter, uses page locale.\n\t                },\n\n\t                /**\n\t                    * Returns localized date format, using date filter\n\t                    *\n\t                    * @example\n\t                    * ```\n\t                    * lpCoreI18n.formatDate(1288323623006, 'yyyy-MM-dd HH:mm:ss Z'); // \"2010-10-29 05:40:23 +0200\"\n\t                    * ```\n\t                    *\n\t                    * @memberof core.i18n.lpCoreI18n\n\t                    * @param   {Number} value   Date as Unix timestamp\n\t                    * @param   {String} format  Format\n\t                    * @returns {String}\n\t                    */\n\t                formatDate: function formatDate(value, format) {\n\t                    return $filter('date')(value, format || 'medium');\n\t                },\n\n\t                /**\n\t                    * Returns a translation instantly from the internal state of loaded translation.\n\t                    *\n\t                    * @example\n\t                    * ```\n\t                    * lpCoreI18n.instant('Enrol for Estatements'); // \"Schrijf je in voor eStatements\" for locale \"nl-NL\"\n\t                    * ```\n\t                    *\n\t                    * @memberof core.i18n.lpCoreI18n\n\t                    * @param   {String} string  A string which represents a translation id or array of strings.\n\t                    * @returns {String}\n\t                    */\n\t                instant: function instant(string) {\n\t                    return $translate.instant(string);\n\t                } };\n\n\n\n\t        };\n\t    };\n\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\t    'use strict';\n\n\t    /**\n\t                   * Renders proper currency symbol.\n\t                   *\n\t                   * @example\n\t                   * ```\n\t                   * <span>{{'JPY'|currencySymbol}}</span>\n\t                   * <span>¥</span>\n\t                   * ```\n\t                   *\n\t                   * @memberof core.i18n\n\t                   * @ngFilter\n\t                   * @ngInject\n\t                   */\n\t    exports.currencySymbol = function (lpCoreI18nUtils) {\n\t        return function (currency) {\n\t            return lpCoreI18nUtils.CURRENCY_MAP[currency] || '';\n\t        };\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports) {\n\t    'use strict';\n\n\t    /**\n\t                   * Use lp-i18n angular directive to translate string used in Launchpad Widget HTML template.\n\t                   *\n\t                   * @example\n\t                   * ```\n\t                   * <span lp-i18n=\"Statement as of\"></span>\n\t                   * ```\n\t                   *\n\t                   * @example\n\t                   * `label`, `placeholder` and `help` attributes inside of `lp-field`, `lp-input`, `lp-text-input`,\n\t                   * `lp-password-input` or `lp-checkbox` directives will also be automatically translated:\n\t                   *\n\t                   * ```\n\t                   * <div lp-field=\"lp-field\" label=\"Enrol for Estatements\"></div>\n\t                   * ```\n\t                   *\n\t                   * @memberof core.i18n\n\t                   * @ngDirective\n\t                   * @ngInject\n\t                   */\n\t    exports.lpI18n = function ($compile) {\n\t        function link(scope, el, attr) {\n\t            attr.$observe('lpI18n', function (val) {\n\t                el.attr('translate', val);\n\t                //need to prevent cycle loop on observable\n\t                el.removeAttr('lp-i18n');\n\t                $compile(el)(scope);\n\t            });\n\t        }\n\n\t        return {\n\t            restrict: 'AE',\n\t            link: link,\n\t            // These 2 options prevent additional other directives recompilations\n\t            // i.e. ngClick would twice, ngRepeat would render infinite loop, etc.\n\t            // Need to set priority higher then any other directive.\n\t            priority: Number.MAX_VALUE,\n\t            terminal: true };\n\n\t    };\n\n\t    /**\n\t        * @memberof core.i18n\n\t        * @ngDirective\n\t        * @ngInject\n\t        */\n\t    exports.lpI18nSwitch = function (lpCoreBus, lpCoreI18nUtils) {\n\t        function link(scope, el, attr) {\n\t            var locales = attr.lpI18nSwitch;\n\t            if (!locales) {return;}\n\t            locales = locales.split(',');\n\t            var id;\n\n\t            lpCoreBus.subscribe(lpCoreI18nUtils.LOCALE_CHANGE_EVENT, function (locale) {\n\t                id = locales.indexOf(locale);\n\t            });\n\n\t            el.on('click', function (e) {\n\t                e.preventDefault();\n\t                id = ++id % locales.length;\n\t                lpCoreBus.publish(lpCoreI18nUtils.LOCALE_CHANGE_EVENT, locales[id]);\n\t            });\n\t        }\n\n\t        return {\n\t            template: '<span translate=\"_languageCode\"></span>',\n\t            restrict: 'AE',\n\t            link: link };\n\n\t    };\n\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\n\t\t'use strict';\n\n\t\tvar $ = __webpack_require__(15);\n\n\t\t// @ngInject\n\t\texports.i18nUtils = function ($http, $q, lpCoreUtils) {\n\n\t\t\tvar i18nUtils = {};\n\n\t\t\tvar httpService = {\n\t\t\t\tgetInstance: function getInstance(options) {\n\t\t\t\t\tvar req = {\n\t\t\t\t\t\turl: lpCoreUtils.resolvePortalPlaceholders(endpoint),\n\t\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\t\tcache: true,\n\t\t\t\t\t\tdata: {},\n\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t'Accept': 'application/json',\n\t\t\t\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded;' } };\n\n\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tread: function read() {\n\t\t\t\t\t\t\treturn $http(req);\n\t\t\t\t\t\t} };\n\n\t\t\t\t},\n\t\t\t\tresolvePromise: function resolvePromise(data) {\n\t\t\t\t\t// Returns an already resolved promise with the `data` value\n\t\t\t\t\tvar promise = $q.when(data);\n\t\t\t\t\treturn {\n\t\t\t\t\t\tsuccess: function success(fp) {\n\t\t\t\t\t\t\tpromise.then(fp);\n\t\t\t\t\t\t\treturn promise;\n\t\t\t\t\t\t},\n\t\t\t\t\t\terror: function error(fp) {\n\t\t\t\t\t\t\tpromise.then(null, fp);\n\t\t\t\t\t\t\treturn promise;\n\t\t\t\t\t\t},\n\t\t\t\t\t\talways: function always(fp) {\n\t\t\t\t\t\t\tpromise['finally'](fp);\n\t\t\t\t\t\t\treturn promise;\n\t\t\t\t\t\t} };\n\n\t\t\t\t} };\n\n\n\t\t\ti18nUtils.loadMessages = function (lpWidget, locale, messageSrcPref) {\n\n\t\t\t\tvar response;\n\t\t\t\tmessageSrcPref = messageSrcPref || \"messageSrc\";\n\t\t\t\tvar messageSrc = lpWidget.getPreference(messageSrcPref);\n\t\t\t\tif (messageSrc) {\n\t\t\t\t\tvar messagesService = httpService.getInstance({\n\t\t\t\t\t\tendpoint: messageSrc });\n\n\t\t\t\t\tresponse = messagesService.read();\n\t\t\t\t} else {\n\t\t\t\t\tresponse = httpService.resolvePromise({});\n\t\t\t\t}\n\t\t\t\treturn response;\n\t\t\t};\n\n\t\t\treturn i18nUtils;\n\t\t};\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;\"use strict\";!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\n\t\t'use strict';\n\n\t\t// @ngInject\n\t\texports.lpMessage = function () {\n\t\t\treturn {\n\t\t\t\treplace: false,\n\t\t\t\trestrict: \"A\",\n\t\t\t\tscope: {\n\t\t\t\t\t\"key\": \"=lpMessage\",\n\t\t\t\t\t\"messages\": \"=lpBundle\" },\n\n\t\t\t\ttemplate: \"{{value}}\",\n\t\t\t\tlink: function link(scope, element, attrs) {\n\n\t\t\t\t\tvar insertMessage = function insertMessage(key, messages) {\n\n\t\t\t\t\t\tvar value;\n\t\t\t\t\t\tif (messages && messages.hasOwnProperty(key)) {\n\t\t\t\t\t\t\tvalue = messages[key];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvalue = \"[\" + key + \"]\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\tscope.value = value;\n\t\t\t\t\t};\n\n\t\t\t\t\tscope.$watch(\"key\", function (key) {\n\t\t\t\t\t\tinsertMessage(key, scope.messages);\n\t\t\t\t\t});\n\t\t\t\t\tscope.$watch(\"messages\", function (messages) {\n\t\t\t\t\t\tinsertMessage(scope.key, messages);\n\t\t\t\t\t});\n\t\t\t\t} };\n\n\t\t};\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module) {'use strict'; /**\n\t               * NOT IMPLEMENTED\n\t               * @name store\n\t               * @memberof core\n\t               * @ngModule\n\t               */\n\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\t  'use strict';\n\n\t  module.name = 'core.store';\n\t  var base = __webpack_require__(3);\n\t  var deps = [];\n\n\t  // https://developer.mozilla.org/en-US/docs/Web/API/Storage\n\t  function storeProvider() {\n\t    this.$get = function () {\n\t      var API = {};\n\n\t      /**\n\t                     * When passed a key name, will return the value stored in that key.\n\t                     * @param   {String} key  Name of the key you want to retrieve.\n\t                     * @returns {*} Value stored in the key, if it is not present it will return null.\n\t                     */\n\t      API.getItem = function (key) {};\n\n\t      /**\n\t                                        * When passed a key name and value, will add that key to the storage, or update\n\t                                        * that key's value if it already exists.\n\t                                        *\n\t                                        * @param {String} key Name of the key you want to create/update.\n\t                                        * @param {*} value Value you want to give the key you are creating/updating.\n\t                                        */\n\t      API.setItem = function (key, value) {};\n\n\t      /**\n\t                                               * When passed a key name, will remove the value stored in the key\n\t                                               * and the key itself\n\t                                               *\n\t                                               * @param  {String} key Name of the key woy want to remove.\n\t                                               */\n\t      API.removeItem = function (key) {};\n\n\t      /**\n\t                                           * Will empty all keys out of the storage.\n\t                                           */\n\t      API.reset = function () {};\n\n\t      return API;\n\t    };\n\t  }\n\n\t  module.exports = base.createModule(module.name, deps).\n\t  provider('lpCoreStore', storeProvider);\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)(module)))\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module) {'use strict'; /**\n\t               * Launchpad Template Module\n\t               *\n\t               * @copyright Backbase B.V.\n\t               * @author Backbase R&D - Amsterdam - New York\n\t               *\n\t               * @name template\n\t               * @memberof core\n\t               * @ngModule\n\t               */\n\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\n\t    'use strict';\n\n\t    module.name = 'core.template';\n\n\t    var base = __webpack_require__(3);\n\n\t    // external module deps\n\t    var deps = [];\n\n\t    // providers holder\n\t    var providers = {};\n\n\t    // directives holder\n\t    var directives = {};\n\n\t    // =============================\n\t    // Providers\n\t    // =============================\n\n\t    /**\n\t     * Helper service used by lpTemplate directive.\n\t     *\n\t     * @alias lpCoreTemplate\n\t     * @memberof core.template\n\t     * @ngProvider\n\t     * @ngInject\n\t     */\n\t    providers.lpCoreTemplate = function (lpCoreUtils) {\n\n\t        var defaults = {};\n\n\t        var API = {};\n\n\t        /**\n\t                       * Set provider options.\n\t                       * @param {Object} options Default options for lpCoreTemplate service.\n\t                       * @returns {Object} this templateProvider instance.\n\t                       */\n\t        this.useWidgetInstance = function (widgetInstance) {\n\t            // Create a map templateLKey -> path\n\t            var templates = {};\n\t            var path = lpCoreUtils.getWidgetBaseUrl(widgetInstance);\n\n\t            if (widgetInstance.model && widgetInstance.model.preferences && widgetInstance.model.preferences.array) {\n\t                templates = lpCoreUtils.reduce(widgetInstance.model.preferences.array, function (prev, curr) {\n\t                    if (curr.name.indexOf('widgetTemplate_') > -1) {\n\t                        prev[curr.name.replace('widgetTemplate_', '')] = curr.value;\n\t                    }\n\t                    return prev;\n\t                }, {});\n\t            }\n\n\t            if (path) {\n\t                path = lpCoreUtils.trimRight(path, '/');\n\t            }\n\n\t            lpCoreUtils.extend(defaults, {\n\t                path: path,\n\t                templates: templates });\n\n\t        };\n\n\t        // Provider Template instance\n\t        // @ngInject\n\t        this.$get = function (lpCoreConfiguration) {\n\t            /**\n\t                                                     * Provider API\n\t                                                     * @memberof core.template.lpCoreTemplate\n\t                                                     * @class\n\t                                                     */\n\t            API = function API(options) {\n\t                this.options = options;\n\n\t                // Initialise defaults.\n\t                lpCoreUtils.defaults(\n\t                this.options,\n\t                {\n\t                    // Default template path is the ABS path from config.\n\t                    path: lpCoreConfiguration.getAbsPath() });\n\n\n\t            };\n\n\t            /**\n\t                * get provider configuration\n\t                * @returns {Object} configuration option\n\t                */\n\t            API.prototype.getOptions = function () {\n\t                return this.options;\n\t            };\n\n\t            /**\n\t                * Get absolute template path.\n\t                * @returns {String}\n\t                */\n\t            API.prototype.getOptionsPath = function () {\n\t                return this.options.path;\n\t            };\n\n\t            /**\n\t                * Resolve template ID\n\t                *\n\t                * @param   {String}  id\n\t                * @returns {String}\n\t                */\n\t            API.prototype.getFullPath = function (id) {\n\t                var path = this.getOptionsPath();\n\t                if (path === '/') {\n\t                    return path + id;\n\t                } else\n\t                {\n\t                    return [path, id].join('/');\n\t                }\n\t            };\n\n\t            /**\n\t                * Resolve directive paths\n\t                * @param {String} src\n\t                * @param {String} name\n\t                * @return {String} resolvedPath\n\t                */\n\t            API.prototype.resolvePath = function (src, name) {\n\t                var resolvedPath,\n\t                templateKey,\n\t                customTemplate;\n\n\t                // If attribute \"name\" is provided take it as template key otherwise try to extract it from template path\n\t                if (name) {\n\t                    templateKey = name;\n\t                } else\n\t                {\n\t                    var match = src.match(/(?:^|\\/)([^\\/]+?)\\.html$/);\n\t                    templateKey = match && match[1];\n\t                }\n\n\t                if (templateKey && this.options.templates[templateKey]) {\n\n\t                    customTemplate = this.options.templates[templateKey];\n\n\t                    if (/^https?:\\/\\//.test(customTemplate)) {\n\t                        resolvedPath = customTemplate;\n\t                    } else\n\t                    {\n\t                        resolvedPath = this.getFullPath(customTemplate);\n\t                    }\n\t                } else\n\t                {\n\t                    resolvedPath = this.getFullPath(src);\n\t                }\n\n\t                return resolvedPath;\n\t            };\n\n\t            return new API(defaults);\n\t        };\n\t    };\n\n\t    // =============================\n\t    // Directives\n\t    // =============================\n\n\t    /**\n\t     * Wrapper around [ngInclude][1] directive. Fetches, compiles and includes an external HTML fragment.\n\t     *\n\t     * ##### Attributes\n\t     *\n\t     * ###### src\n\t     *\n\t     * lpTemplate uses `src` attribute as template path. The value of the attribute should be valid Angular expression. For static paths string literal should be used.\n\t     *\n\t     * If `src` is not provided `lp-template` attribute is used.\n\t     *\n\t     * Below two examples using string literals are equivalent:\n\t     *\n\t     * ```\n\t     * <lp-template src=\"'templates/accounts.html'\"></lp-template>\n\t     * <div lp-template=\"'template/accounts.html'\"></div>\n\t     * ```\n\t     *\n\t     * Template path could be configured in controller, in this case quotes are not needed:\n\t     *\n\t     * ```\n\t     * <lp-template src=\"templates.iban\"></lp-template>\n\t     * ```\n\t     *\n\t     * ###### name\n\t     *\n\t     * `lpTemplate` can also accept optional argument `name`. If provided, it is used for identifing template for customization with template path property. See next section for details.\n\t     *\n\t     * If `name` attribute is missing (in most cases) then template key is extracted from resolved template path as substring between last `/` and before `.html` strings. For example, if template path (result of evaluation of the expression for src) is `templates/accounts-header.html` then corresponding template key is `accounts-header`.\n\t     *\n\t     * ##### Template keys\n\t     *\n\t     * `lpTemplate` directive uses unique identifiers in order to provide a way to overwrite template path with custom preference. Special proprty name must conform the following format:\n\t     *\n\t     * ```\n\t     * widgetTemplate_{template key}\n\t     * ```\n\t     *\n\t     * Every widget that uses `lpTemplate` and allows template cutomization should describe template keys it provides.\n\t     *\n\t     * In above example with accounts-header key corresponding property would be `widgetTemplate_accounts-header`.\n\t     *\n\t     * [1]: https://docs.angularjs.org/api/ng/directive/ngInclude\n\t     *\n\t     * @alias lpTemplate\n\t     * @memberof core.template\n\t     * @ngDirective\n\t     * @ngInject\n\t     */\n\t    directives.lpTemplate = function ($compile, lpCoreTemplate, lpCoreUtils) {\n\n\t        /**\n\t                                                                               * @memberof core.template.lpTemplate\n\t                                                                               * @param {Object} scope\n\t                                                                               * @param {Object} attrs\n\t                                                                               * @returns {String} Angular html template\n\t                                                                               */\n\t        function getTemplate(scope, attrs, callback) {\n\n\t            var srcExp = decodeURIComponent(attrs.lpTemplate || attrs.src),\n\t            resolvedPath;\n\n\t            scope.$watch(srcExp, function (src) {\n\n\t                if (!src) {\n\n\t                    // For backward compatibility\n\t                    // If it's \"undefined\" but looks like template path with html extension then skip it in this digest\n\t                    if (src === undefined && !/\\.html$/.test(srcExp)) {\n\t                        return callback();\n\t                    }\n\n\t                    // This is likely deprecated old syntax just use this path as is\n\t                    lpCoreUtils.deprecate('Template expression \"' + srcExp + '\" is invalid and evaluated to \"' + src + '\". Raw path is used as is. See LPES-4017 for details.');\n\t                    src = srcExp;\n\t                }\n\n\t                resolvedPath = lpCoreTemplate.resolvePath(src, attrs.name);\n\n\t                callback('<div class=\"ng-transclude-node\"></div><div ng-include src=\"\\'' + resolvedPath + '\\'\"></div>');\n\n\t            });\n\t        }\n\n\t        // Directive configuration\n\t        return {\n\t            restrict: 'AE',\n\t            transclude: true,\n\t            priority: Number.MAX_VALUE,\n\t            link: function link(scope, element, attrs, controller, $transclude) {\n\n\t                getTemplate(scope, attrs, function (template) {\n\n\t                    if (template) {\n\t                        element.html(template).show();\n\n\t                        // manually transclude content\n\t                        $transclude(function (clone) {\n\t                            element.find('.ng-transclude-node').html(clone);\n\t                        });\n\n\t                        $compile(element.contents())(scope);\n\t                    }\n\t                });\n\t            } };\n\n\t    };\n\n\t    module.exports = base.createModule(module.name, deps).\n\t    provider(providers).\n\t    directive(directives);\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)(module)))\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module) {'use strict'; /**\n\t               * Configures\n\t               * <a href=\"https://docs.google.com/document/d/1BtDNCvYegmyzel4YPBFNxJaUZ2ywYUeBbzkLB4LpQzM/edit\">updating</a>\n\t               * widgets' models depending on other widgets actions.\n\t               *\n\t               * @copyright Backbase B.V.\n\t               * @author Backbase R&D - Amsterdam - New York\n\t               *\n\t               * @name update\n\t               * @memberof core\n\t               * @ngModule\n\t               */\n\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\t    'use strict';\n\n\t    module.name = 'core.update';\n\n\t    var base = __webpack_require__(3);\n\t    // core modules\n\t    var utils = __webpack_require__(16);\n\n\t    var deps = [\n\t    utils.name];\n\n\n\t    module.exports = base.createModule(module.name, deps).\n\t    provider(__webpack_require__(42));\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)(module)))\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict'; /*global define*/\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports) {\n\t    'use strict';\n\n\t    // load config list of relations\n\t    var config = __webpack_require__(43);\n\t    var utils = __webpack_require__(3).utils;\n\n\t    // main container for subscribers\n\t    var listeners = {};\n\n\t    /**\n\t                         *\n\t                         * @memberof core.update\n\t                         * @ngProvider\n\t                         * @ngInject\n\t                         */\n\t    exports.lpCoreUpdate = function () {\n\n\t        // @ngInject\n\t        this.$get = function () {\n\n\t            /**\n\t                                  * Very rough check for the same callbacks already added to the queue\n\t                                  *\n\t                                  * @param list\n\t                                  * @param obj\n\t                                  * @returns {Boolean}\n\t                                  * @private\n\t                                  */\n\t            var checkSameObjectEnlisted = function checkSameObjectEnlisted(list, obj) {\n\t                var res = false;\n\n\t                if (!utils.isArray(list)) {return res;}\n\n\t                list.forEach(function (o) {\n\t                    if (o === obj) {res = true;}\n\t                });\n\n\t                return res;\n\t            };\n\n\t            /**\n\t                * Get the list of all queues we should apply for a particular name\n\t                *\n\t                * @param name\n\t                * @returns {*}\n\t                * @private\n\t                */\n\t            var getList = function getList(name) {\n\t                var list,aux,main = 'actions',deps = 'deps';\n\n\t                if (!name || !config.hasOwnProperty(main) || !config.hasOwnProperty(deps)) {return false;}\n\n\t                list = config[main][name] || [];\n\t                aux = config[deps][name] || [];\n\n\t                return utils.chain(list).union(aux).uniq().value();\n\t            };\n\n\t            /**\n\t                * Invoke all callbacks for a single queue\n\t                *\n\t                * @param name\n\t                * @private\n\t                */\n\t            var invokeSingleQueue = function invokeSingleQueue(name) {\n\n\t                var queue = listeners[name];\n\t                if (!queue || !utils.isArray(queue) || queue.length < 1) {return;}\n\n\t                queue.forEach(function (callback) {\n\t                    try {\n\t                        callback();\n\t                    } catch (error) {\n\t                        // TODO: lpCoreError.captureException(error);\n\t                        throw new Error(error);\n\t                    }\n\t                });\n\t            };\n\n\t            /**\n\t                * Go through the list of queues and initiate invoking\n\t                *\n\t                * @param list\n\t                * @private\n\t                */\n\t            var invokeQueues = function invokeQueues(list) {\n\t                if (!list || !utils.isArray(list) || list.length < 1) {return;}\n\n\t                list.forEach(function (name) {\n\t                    invokeSingleQueue(name);\n\t                });\n\t            };\n\n\t            /**\n\t                * Add listener to proper widget's queue\n\t                *\n\t                * @example\n\t                * Subscribing at an update event within the widget's controller:\n\t                *\n\t                * ```\n\t                * var invoker = function() {\n\t                *   ctrl.widgetModel.load();\n\t                * };\n\t                *\n\t                * lpCoreUpdate.subscribe(widget.name, invoker);\n\t                * ```\n\t                *\n\t                * @memberof core.update.lpCoreUpdate\n\t                * @param   {String}    name\n\t                * @param   {Function}  callback\n\t                * @returns {Undefined}\n\t                */\n\t            var subscribe = function subscribe(name, callback) {\n\t                if (!name || typeof callback !== 'function') {return;}\n\n\t                // create new queue (if needed)\n\t                if (!listeners.hasOwnProperty(name)) {listeners[name] = [];}\n\n\t                if (!checkSameObjectEnlisted(listeners[name], callback)) {\n\t                    listeners[name].push(callback);\n\t                }\n\t            };\n\n\t            /**\n\t                * Invoke callbacks for this particular event name\n\t                *\n\t                * @example\n\t                * Triggering update event:\n\t                *\n\t                * ```\n\t                * var eventName = widget.name;\n\t                * lpCoreUpdate.trigger(eventName);\n\t                * ```\n\t                *\n\t                * @memberof core.update.lpCoreUpdate\n\t                * @param   {String}    name\n\t                * @returns {Undefined}\n\t                */\n\t            var trigger = function trigger(name) {\n\t                if (name) {invokeQueues(getList(name));}\n\t            };\n\n\t            return {\n\t                subscribe: subscribe, /* (name, callback) */\n\t                trigger: trigger /* (sourceEventName) */ };\n\n\n\t        };\n\t    };\n\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\t    'use strict';\n\n\t    module.exports = {\n\t        'actions': {\n\t            'newPaymentOrderInitiated': ['reviewTransfer'] },\n\n\n\t        'deps': {\n\t            'transactions': ['accounts'] } };\n\n\n\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module) {'use strict'; /**\n\t               * Core widget module provides services lpWidget and value widget into application\n\t               * @name widget\n\t               * @memberof core\n\t               * @ngModule\n\t               */\n\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\t  'use strict';\n\n\t  module.name = 'core.widget';\n\t  var base = __webpack_require__(3);\n\t  var deps = [];\n\n\t  module.exports = base.createModule(module.name, deps).\n\t  provider(__webpack_require__(45));\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)(module)))\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\t    'use strict';\n\n\t    /**\n\t                      * lpCoreWidget provider\n\t                      * @return {object} angular provider\n\t                      * @ngInject\n\t                      */\n\t    exports.lpCoreWidget = function widgetProvider($provide, lpCoreUtils) {\n\t        var widget;\n\n\t        this.useWidgetInstance = function (widgetInstance) {\n\t            widget = widgetInstance;\n\n\t            /**\n\t                                      * @method addResolvedPreference get normalized property from widget model\n\t                                      * @param {String} propName\n\t                                      * @returns {Object} value\n\t                                      */\n\t            widgetInstance.getResolvedPreference = function (propName) {\n\t                var val = this.getPreference(propName);\n\t                return lpCoreUtils.resolvePortalPlaceholders(val);\n\t            };\n\n\t            $provide.provider('lpWidget', function () {\n\t                /**\n\t                                                        * @returns {Object} widgetInstance\n\t                                                        */\n\t                this.getInstance = this.$get = function () {\n\t                    return widgetInstance;\n\t                };\n\t            });\n\n\t            $provide.value('widget', widget); // will be deprecated\n\t        };\n\n\t        this.$get = this.getInstance = function () {\n\t            return widget;\n\t        };\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\t    'use strict';\n\n\t    var base = __webpack_require__(3);\n\n\t    var deps = [];\n\n\n\t    module.exports = base.ng.module('common', deps).\n\t    constant('httpServicesConfig', {\n\t        defaultConfig: {\n\t            cacheTimeout: 1000,\n\t            xhrTimeout: 5000 } }).\n\n\n\t    factory(__webpack_require__(47)).\n\t    service(__webpack_require__(48)).\n\t    service(__webpack_require__(49)).\n\t    service(__webpack_require__(50)).\n\t    service(__webpack_require__(51));\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\n\t    'use strict';\n\n\t    var base = __webpack_require__(3);\n\t    var utils = base.utils;\n\n\t    // @ngInject\n\t    exports.formDataPersistence = function () {\n\n\t        function hasStorage() {\n\t            var uid = new Date().getTime().toString();\n\t            var storage;\n\t            var result;\n\t            try {\n\t                (storage = window.localStorage).setItem(uid, uid);\n\t                result = storage.getItem(uid) === uid;\n\t                storage.removeItem(uid);\n\t                return result && storage;\n\t            } catch (err) {\n\t                base.log.warn(err);\n\t            }\n\t        }\n\n\t        /**\n\t           * Creates a new FormDataPersistenceController instance\n\t           * @constructor\n\t           */\n\t        var FormDataPersistenceController = function FormDataPersistenceController() {\n\t        };\n\n\t        /**\n\t            * Save the form data in session storage with the form name as the key\n\t            * @param formName a string value of the form/widget name\n\t            * @param a JS object representing the values of the form\n\t            */\n\t        FormDataPersistenceController.prototype.saveFormData = function (formName, formObject) {\n\t            if (hasStorage()) {\n\t                var stringifiedFormObject = JSON.stringify(formObject);\n\t                window.sessionStorage.setItem(formName, stringifiedFormObject);\n\t            }\n\t        };\n\n\t        /**\n\t            * Removes saved data from session storage by form name\n\t            * @param formName the name of the widget form to remove\n\t            */\n\t        FormDataPersistenceController.prototype.removeFormData = function (formName) {\n\t            if (hasStorage()) {\n\t                window.sessionStorage.removeItem(formName);\n\t            }\n\t        };\n\n\t        /**\n\t            * Return the stored string of the form object\n\t            * @param widget form name\n\t            */\n\t        FormDataPersistenceController.prototype.getFormData = function (formName) {\n\n\t            var widgetForm = JSON.parse(window.sessionStorage.getItem(formName));\n\n\t            var formatObject = function formatObject(thisObject) {\n\t                for (var key in thisObject) {\n\t                    if (thisObject.hasOwnProperty(key)) {\n\t                        if (key.toLowerCase().indexOf('date') > -1 && typeof thisObject[key] !== 'boolean') {\n\t                            var testDate = new Date(thisObject[key]);\n\t                            //TODO: investigate better approach\n\t                            if (!isNaN(testDate.getTime())) {\n\t                                //a valid date\n\t                                thisObject[key] = testDate;\n\t                            }\n\t                        }\n\n\t                        if (thisObject[key] instanceof Object) {\n\t                            formatObject(thisObject[key]);\n\t                        }\n\t                    }\n\t                }\n\n\t                return thisObject;\n\t            };\n\n\t            formatObject(widgetForm);\n\n\t            return widgetForm;\n\t        };\n\n\t        /**\n\t            * Returns a flag if the form is currently saved\n\t            * @formName the name of the widget form to check\n\t            */\n\t        FormDataPersistenceController.prototype.isFormSaved = function (formName) {\n\t            var saved = window.sessionStorage.getItem(formName);\n\t            return saved === null ? false : true;\n\t        };\n\n\t        return {\n\t            getInstance: function getInstance() {\n\t                utils.deprecate('formDataPersistence is deprecated. It is now part of new transfer widget.');\n\t                return new FormDataPersistenceController();\n\t            } };\n\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\n\t    'use strict';\n\n\t    var utils = __webpack_require__(3).utils;\n\n\t    // @ngInject\n\t    exports.PreferenceService = function ($http, $filter, lpCoreUtils, lpWidget) {\n\n\t        utils.deprecate('PreferenceService is deprecated. Use lpUsersPreference in module-users.');\n\n\t        var preferenceEndpoint = lpWidget.getPreference('preferenceService');\n\t        var url = lpCoreUtils.resolvePortalPlaceholders(preferenceEndpoint);\n\t        var headers = {\n\t            'Accept': 'application/json',\n\t            'Content-Type': 'application/json',\n\t            'Cache-Control': 'no-cache, no-store, must-revalidate',\n\t            'Pragma': 'no-cache',\n\t            'Expires': '0' };\n\n\n\t        this.read = this.get = function () {\n\t            return $http.get(url, {\n\t                headers: headers });\n\n\t        };\n\n\t        this.save = function (field, value) {\n\t            var data = {};\n\t            data[field] = value;\n\n\t            return $http.put(url, lpCoreUtils.buildQueryString(data), {\n\t                headers: headers });\n\n\t        };\n\t        this.put = function (field, value) {\n\t            var data = {};\n\t            data[field] = value;\n\n\t            return $http.put(url + '/' + field, $filter('json')(data), {\n\t                headers: headers });\n\n\t        };\n\t    };\n\n\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\n\t    'use strict';\n\n\t    var base = __webpack_require__(3);\n\t    var angular = base.ng;\n\t    var utils = base.utils;\n\t    // @ngInject\n\t    exports.ProfileDetailsService = function ($http, lpCoreI18n, lpCoreError) {\n\n\t        utils.deprecate('ProfileDetailsService is deprecated. Use lpUserDetails in module-users.');\n\n\t        var defaults = {\n\t            counterPartyServiceUrl: '$(servicesPath)/services/rest/v1/party-data-management/party' };\n\n\t        var ProfileDetailService = this;\n\t        ProfileDetailService.config = defaults;\n\n\t        ProfileDetailService.setConfig = function (config) {\n\t            ProfileDetailService.config = angular.extend(defaults, config);\n\t        };\n\n\t        function doI18n(profileDetails) {\n\t            var detailsParsed = [];\n\t            utils.each(profileDetails, function (value, key) {\n\t                detailsParsed.push({\n\t                    key: lpCoreI18n.instant(key),\n\t                    value: key === 'dateOfBirth' ? lpCoreI18n.formatDate(value) : lpCoreI18n.instant(value) });\n\n\t            });\n\t            return detailsParsed;\n\t        }\n\n\t        // Return data in correct key, value format\n\t        ProfileDetailService.formatResponse = function (response) {\n\t            var data = {\n\t                fullname: [response.firstName, response.lastName].join(' '),\n\t                details: doI18n(response.details),\n\t                activities: [],\n\t                photoUrl: response.photoData };\n\n\n\t            if (!data.photoUrl && response.photoUrl) {\n\t                data.photoUrl = utils.decodePhotoUrl(response.photoUrl);\n\t            }\n\n\t            // Activities\n\t            if (response.activities) {\n\t                if (response.activities.lastLoggedIn) {\n\t                    data.activities.push({ key: 'Last Logged In', value: lpCoreI18n.formatDate(response.activities.lastLoggedIn, 'medium') });\n\t                }\n\t            }\n\n\t            return data;\n\t        };\n\n\t        ProfileDetailService.getData = function () {\n\t            var url = utils.resolvePortalPlaceholders(ProfileDetailService.config.counterPartyServiceUrl || defaults.counterPartyServiceUrl);\n\n\t            return $http.get(url, null, {\n\t                headers: {\n\t                    'Accept': 'application/json',\n\t                    'Content-Type': 'application/x-www-form-urlencoded;' } });\n\n\n\t        };\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 50 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\n\t    'use strict';\n\n\t    // @ngInject\n\t    exports.P2PService = function ($http, lpWidget, lpCoreUtils) {\n\n\t        var enrollmentEndpoint = lpWidget.getPreference('p2pEnrollmentEndpoint');\n\n\t        var editEmailEndpoint = \"/emails/\";\n\n\t        enrollmentEndpoint = lpCoreUtils.resolvePortalPlaceholders(lpWidget.getPreference('p2pEnrollmentEndpoint'));\n\n\t        this.emailType = {\n\t            primary: \"PRIMARY\",\n\t            secondary: \"SECONDARY\" };\n\n\n\t        this.emailStatus = {\n\t            verified: \"VERIFIED\",\n\t            unverified: \"UNVERIFIED\" };\n\n\n\n\t        this.getUserEnrollmentDetails = function () {\n\n\t            return $http.get(enrollmentEndpoint, null, {\n\t                headers: {\n\t                    'Accept': 'application/json',\n\t                    'Content-Type': 'application/json;' } });\n\n\n\t        };\n\n\t        //enroll user in P2P service based on details passed\n\t        this.enrollUserForP2P = function (value) {\n\n\t            return $http.post(enrollmentEndpoint, value, {\n\t                headers: {\n\t                    'Accept': 'application/json',\n\t                    'Content-Type': 'application/json;' } });\n\n\n\t        };\n\n\n\t        this.editP2PEnrollment = function (data) {\n\n\n\t            return $http.put(enrollmentEndpoint, data, {\n\t                headers: {\n\t                    'Accept': 'application/json',\n\t                    'Content-Type': 'application/json;' } });\n\n\n\t        };\n\n\t        //modify registered users P2P details\n\t        this.editP2PDepositAccount = function (value) {\n\n\t            var data = {\n\t                accountNumber: value };\n\n\n\t            return $http.put(enrollmentEndpoint, data, {\n\t                headers: {\n\t                    'Accept': 'application/json',\n\t                    'Content-Type': 'application/json;' } });\n\n\n\t        };\n\n\t        //adds a secondary P2P Email address\n\t        this.addP2PEmailAddress = function (emailAddress) {\n\t            var data = {\n\t                value: emailAddress };\n\n\n\t            return $http.post(enrollmentEndpoint + editEmailEndpoint, data, {\n\t                headers: {\n\t                    'Accept': 'application/json',\n\t                    'Content-type': 'application/json;' } });\n\n\n\t        };\n\n\t        //edits a specific email, primary or secondary and email value\n\t        this.editP2PEmailAddress = function (email) {\n\t            var data = {\n\t                value: email.value,\n\t                type: email.type };\n\n\n\t            return $http.put(enrollmentEndpoint + editEmailEndpoint + email.id, data, {\n\t                headers: {\n\t                    'Accept': 'application/json',\n\t                    'Content-Type': 'application/json;' } });\n\n\n\n\t        };\n\n\t        //edits the address type\n\t        this.editP2PEmailAddressType = function (email) {\n\t            var data = {\n\t                type: email.type };\n\n\n\t            return $http.put(enrollmentEndpoint + editEmailEndpoint + email.id, data, {\n\t                headers: {\n\t                    'Accept': 'application/json',\n\t                    'Content-Type': 'application/json;' } });\n\n\n\t        };\n\n\t        //deletes a specified email address\n\t        this.deleteP2PEmailAddress = function (email) {\n\n\t            return $http({ method: 'DELETE', url: enrollmentEndpoint + editEmailEndpoint + email.id });\n\t        };\n\n\n\n\t        this.verifyCode = function (email, code) {\n\n\t            var data = {\n\t                verification: {\n\t                    email: email,\n\t                    code: code } };\n\n\n\n\t            return $http.put(enrollmentEndpoint, data, {\n\t                headers: {\n\t                    'Accept': 'application/json',\n\t                    'Content-Type': 'application/json;' } });\n\n\n\t        };\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 51 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {return typeof obj;} : function (obj) {return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;};!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\n\t    'use strict';\n\t    // Feature detect + local reference\n\t    var hasStorage = function hasStorage() {\n\t        var uid = new Date();\n\t        var storage;\n\t        var result;\n\t        try {\n\t            (storage = window.localStorage).setItem(uid, uid);\n\t            result = storage.getItem(uid) == uid;\n\t            storage.removeItem(uid);\n\t            return result && storage;\n\t        } catch (exception) {}\n\t    };\n\n\t    // @ngInject\n\t    exports.httpService = function ($http, $q, $timeout, httpServicesConfig, lpCoreUtils) {\n\n\t        /**\n\t                                                                                            * Creates a new Service instance\n\t                                                                                            * @param config\n\t                                                                                            * @constructor\n\t                                                                                            */\n\t        var HttpService = function HttpService(config) {\n\t            lpCoreUtils.assign(this, httpServicesConfig.defaultConfig, config);\n\t        };\n\n\t        /**\n\t            * Read operation for this service,\n\t            * Will send an asynchronous GET request to this service's endpoint\n\t            * @param {Object} params Add get parameters\n\t            * @param {Boolean} force bypass cache\n\t            * @returns {Object} an xhr promise\n\t            */\n\t        HttpService.prototype.read = function (params, force) {\n\n\t            var self = this;\n\n\t            var cacheId = getCacheKey(this.endpoint, params),\n\t            promise;\n\n\t            if (!force) {\n\t                promise = getCacheItem(cacheId);\n\t            }\n\n\t            if (!promise) {\n\t                promise = makeXhrRequest(this.endpoint, 'GET', {}, this.contentType, params).\n\t                success(function (response) {\n\t                    setCacheItem(cacheId, response, self.cacheTimeout);\n\t                });\n\t            }\n\n\t            return promise;\n\t        };\n\n\t        /**\n\t            *\n\t            * @returns {String}\n\t            * @private\n\t            */\n\t        var getCacheKey = function getCacheKey(url, params) {\n\t            params = params ? \".\" + JSON.stringify(params) : \"\";\n\t            return \"launchpad.services/\" + url + params;\n\t        };\n\n\t        /**\n\t            *\n\t            * @returns {null}\n\t            * @private\n\t            */\n\t        var getCacheItem = function getCacheItem(cacheId) {\n\t            var cacheData = hasStorage() ? sessionStorage.getItem(cacheId) : null;\n\t            var promise = null;\n\t            if (cacheData) {\n\t                try {\n\t                    cacheData = JSON.parse(cacheData);\n\t                    if (cacheData.expires && cacheData.expires > new Date().getTime()) {\n\t                        // Cache hit: Expires in the future, resolve the promise.\n\t                        promise = resolvePromise(cacheData.data);\n\t                    } else {\n\t                        // Cache miss: remove stale item.\n\t                        clearCacheItem(cacheId);\n\t                    }\n\t                } catch (e) {\n\t                    // Silently ignore errors - will return null.\n\t                }\n\t            }\n\n\t            return promise;\n\t        };\n\n\t        /**\n\t            *\n\t            * @param string cacheId\n\t            * @param mixed data\n\t            * @param int timeout\n\t            * @private\n\t            */\n\t        var setCacheItem = function setCacheItem(cacheId, data, timeout) {\n\n\t            if (hasStorage()) {\n\t                try {\n\t                    sessionStorage.setItem(cacheId, JSON.stringify({\n\t                        expires: new Date().getTime() + timeout,\n\t                        data: data }));\n\n\t                } catch (error) {}\n\t            }\n\t        };\n\n\t        /**\n\t            *\n\t            * @returns {String}\n\t            * @private\n\t            */\n\t        var clearCacheItem = function clearCacheItem(cacheId) {\n\t            sessionStorage.removeItem(cacheId);\n\t        };\n\n\t        /**\n\t            * Create operation for this service\n\t            * Will send a POST request to this service's endpoint\n\t            * @param conf\n\t            * @returns {*}\n\t            */\n\t        HttpService.prototype.create = function (config) {\n\t            config = lpCoreUtils.assign({}, {\n\t                method: 'POST' },\n\t            config);\n\t            var contentType = config.contentType || this.contentType;\n\n\t            return makeXhrRequest(this.endpoint, config.method, config.data, contentType);\n\t        };\n\n\t        /**\n\t            * Update operation for this service\n\t            * Will send a PUT request to this service's endpoint\n\t            * @param conf\n\t            * @returns {*}\n\t            */\n\t        HttpService.prototype.update = function (config) {\n\t            config = lpCoreUtils.assign({}, {\n\t                method: 'PUT' },\n\t            config);\n\t            var contentType = config.contentType || this.contentType;\n\n\t            return makeXhrRequest(this.endpoint, config.method, config.data, contentType);\n\t        };\n\n\t        /**\n\t            * Delete operation for this service\n\t            * Will send a DELETE request to this service's endpoint\n\t            * @param conf\n\t            * @returns {*}\n\t            */\n\t        HttpService.prototype.del = function (config) {\n\t            config = lpCoreUtils.assign({}, {\n\t                method: 'DELETE' },\n\t            config);\n\t            return makeXhrRequest(this.endpoint, config.method, config.data, this.contentType);\n\t        };\n\n\t        /**\n\t            *\n\t            * @param conf\n\t            * @returns {*}\n\t            * @private\n\t            */\n\t        // Known issue with null: https://github.com/angular/angular.js/issues/2191\n\t        var makeXhrRequest = function makeXhrRequest(url, method, data, contentType, params, timeout) {\n\n\t            function isTesting() {\n\t                return window.location.protocol === \"file:\" || typeof window.__karma__ !== \"undefined\";\n\t            }\n\n\t            // Prevent GET caching. (small hack for url regex matching in unit tests)\n\t            if (method === 'GET' && !isTesting()) {\n\t                params = lpCoreUtils.assign(params || {}, {\n\t                    '_': new Date().getTime() });\n\n\t            }\n\n\t            contentType = contentType || 'application/x-www-form-urlencoded;';\n\t            if (contentType === 'application/x-www-form-urlencoded;') {\n\t                data = lpCoreUtils.buildQueryString(data || {});\n\t            }\n\n\t            var config = {\n\t                method: method,\n\t                url: url,\n\t                params: params,\n\t                data: data,\n\t                cache: false,\n\t                headers: {\n\t                    'Accept': 'application/json',\n\t                    'Content-Type': contentType },\n\n\t                timeout: timeout };\n\n\n\t            var promise = $http(config);\n\t            return promise;\n\t        };\n\n\t        var resolvePromise = function resolvePromise(data) {\n\t            var deferred = $q.defer(),\n\t            promise = deferred.promise;\n\n\t            // Defining `success` and `always` method for callbacks.\n\t            // `error` should never be called since the promise is resolved\n\t            promise.success = function (fn) {\n\t                promise.then(function (response) {\n\t                    fn(response);\n\t                }, null);\n\t                return promise;\n\t            };\n\n\t            promise.error = function (fn) {\n\t                promise.then(null, function (response) {\n\t                    fn(response);\n\t                });\n\t                return promise;\n\t            };\n\n\t            promise.always = function (fn) {\n\t                promise.then(null, null, function (response) {\n\t                    fn(response);\n\t                });\n\t                return promise;\n\t            };\n\n\t            $timeout(function () {\n\t                deferred.resolve(data);\n\t            });\n\n\t            return promise;\n\t        };\n\n\t        // Service pool\n\t        var services = {};\n\n\n\n\n\n\t        /**\n\t                            * Replaces variables within a url. For example\n\t                            *\n\t                            * @example\n\t                            * ${contextPath}/profile\n\t                            * is merged with\n\t                            * {\n\t                            *    contextPath: \"/portalserver\"\n\t                            * }\n\t                            * and becomes /portalserver/profile\n\t                            *\n\t                            * @param url {String} A url possibly contain vars to replace\n\t                            * @param urlVars {Object} Map of replacement vars\n\t                            */\n\t        var replaceUrlVars = function replaceUrlVars(url, urlVars) {\n\t            if (typeof url === \"string\" && (typeof urlVars === 'undefined' ? 'undefined' : _typeof(urlVars)) === \"object\") {\n\t                for (var urlVar in urlVars) {\n\t                    if (urlVars.hasOwnProperty(urlVar)) {\n\t                        var urlVarRegexp = new RegExp(\"\\\\$\\\\(\" + urlVar + \"\\\\)\", \"g\");\n\t                        url = url.replace(urlVarRegexp, urlVars[urlVar]);\n\t                    }\n\t                }\n\t            }\n\n\t            return url;\n\t        };\n\n\n\t        var getServiceInstance = function getServiceInstance(config) {\n\t            // Validate\n\t            if (!config.endpoint || typeof config.endpoint !== \"string\") {\n\t                throw new Error(\"You must specify an endpoint in your service config\");\n\t            }\n\n\t            if (!services[config.endpoint]) {\n\t                // Fix paramaterized context path (and backwards compatible with contextRoot)\n\t                // Update variables in endpoint url [ /transactions/$(transactiondId) ]\n\t                config.endpoint = lpCoreUtils.resolvePortalPlaceholders(config.endpoint, config.urlVars);\n\t                config.endpoint = replaceUrlVars(config.endpoint, config.urlVars);\n\t                services[config.endpoint] = new HttpService(config);\n\t            }\n\n\t            return services[config.endpoint];\n\t        };\n\n\t        return {\n\t            getInstance: getServiceInstance,\n\t            resolvePromise: resolvePromise };\n\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 52 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module) {'use strict'; /**\n\t               * @deprecated will be removed in LP v0.13.x\n\t               */\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\n\t    'use strict';\n\n\t    module.name = 'core-deprecated';\n\n\t    var base = __webpack_require__(3);\n\n\t    var deps = [];\n\n\t    module.exports = base.createModule(module.name, deps).\n\t    service(__webpack_require__(53)).\n\t    service(__webpack_require__(49)).\n\t    service(__webpack_require__(48));\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)(module)))\n\n/***/ }),\n/* 53 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\n\t    'use strict';\n\n\t    var base = __webpack_require__(3);\n\t    var utils = base.utils;\n\n\t    // @ngInject\n\t    exports.ProfileContactService = function ($http, lpWidget, lpCoreUtils) {\n\n\t        utils.deprecate('ProfileContactService is deprecated. Use lpUserDetails in module-users.');\n\n\t        var url = lpCoreUtils.resolvePortalPlaceholders(lpWidget.getPreference('saveUrl'));\n\n\t        this.read = function () {\n\t            return $http.get(url);\n\t        };\n\n\t        this.save = function (field, value) {\n\t            var data = {};\n\t            data[field] = value;\n\n\t            return $http.put(url, $.param(data), {\n\t                headers: {\n\t                    'Accept': 'application/json',\n\t                    'Content-Type': 'application/x-www-form-urlencoded;' } });\n\n\n\t        };\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ })\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// scripts/main.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap fac63de0391b117f11bc","/**\n * Launchpad Core module contains commonly used APIs for all Launchpad modules.\n *\n * @usage\n * ###Install\n * 1. Install core module:\n *\n * ```\n * bower i core --save\n * ```\n *\n * 2. Add `core` as a dependency of your angular module:\n *\n * ```\n * // main.js\n * var core = require('core');\n * var deps = [\n *   ...\n *   core.name,\n *   ...\n * ];\n *\n * module.exports = base.createModule(module.name, deps);\n * ```\n *\n * ###Develop\n *\n * ```\n * git clone ssh://git@stash.backbase.com:7999/LPM/foundation-core.git\n * cd core\n *\n * bower install && bblp start\n * ```\n *\n * ###Testing\n *\n * ```\n * bblp test\n * ```\n *\n * ###Build\n *\n * ```\n * bblp build\n * ```\n *\n * @name core\n * @ngModule\n */\ndefine(function (require, exports, module) {\n\n    'use strict';\n\n    module.name = 'core';\n\n    var base = require('base');\n    var bus = require('./modules/bus/main');\n    var cache = require('./modules/cache/main');\n    var configuration = require('./modules/configuration/main');\n    var error = require('./modules/error/main');\n    var http = require('./modules/http/main');\n    var i18n = require('./modules/i18n/main');\n    var portal = require('./modules/portal/main');\n    var store = require('./modules/store/main');\n    var template = require('./modules/template/main');\n    var update = require('./modules/update/main');\n    var utils = require('./modules/utils/main');\n    var widget = require('./modules/widget/main');\n\n    var migration = require('./_migration/common/common-module');\n    var deprecated = require('./_deprecated/scripts/main');\n\n    module.exports = base.createModule( module.name, [\n        update.name,\n        portal.name,\n        utils.name,\n        i18n.name,\n        bus.name,\n        cache.name,\n        http.name,\n        error.name,\n        store.name,\n        template.name,\n        configuration.name,\n        widget.name,\n\n        // To be migrated\n        migration.name,\n\n        // Migrated and moved to depreacted, will be removed in next breaking release\n        deprecated.name\n    ]);\n\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./scripts/main.js\n// module id = 1\n// module chunks = 0","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 2\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"base\"\n// module id = 3\n// module chunks = 0","/**\n * A mediator object that implements\n * the <a href=\"http://en.wikipedia.org/wiki/Publish%E2%80%93subscribe_pattern\" target=\"_blank\">pub/sub pattern</a>.\n * Any object can publish an event, optionally passing some data\n * in a channel, and all the subscribed listeners to that\n * event in that channel will be called in order.\n *\n * @copyright Backbase B.V.\n * @author Backbase R&D - Amsterdam - New York\n *\n * @name bus\n * @memberof core\n * @ngModule\n */\n\ndefine(function(require, exports, module) {\n    'use strict';\n\n    module.name = 'bus';\n    var base = require('base');\n    var deps = [];\n\n    module.exports = base.createModule(module.name, deps)\n        .provider(require('./provider'));\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./scripts/modules/bus/main.js\n// module id = 4\n// module chunks = 0","/**\n *  ----------------------------------------------------------------\n *  Copyright © Backbase B.V.\n *  ----------------------------------------------------------------\n *  Author : Backbase R&D - Amsterdam - New York\n *  Filename : provider.js\n *  Description: Bus Provider\n *  ----------------------------------------------------------------\n */\n\ndefine(function(require, exports, module) {\n\n    'use strict';\n\n    var EventEmitter = require('./eventemitter');\n\n    /**\n     * NOTE: If `windows.gadgets.pubsub` is available, this service is just a wrapper around it.\n     *\n     * All event names should include the source of the event and the type of event separated by a colon character.\n     *\n     * @memberof core.bus\n     * @ngProvider\n     */\n    exports.lpCoreBus = function() {\n\n        this.setChannel = function(options) {\n\n        };\n\n        // @ngInject\n        this.$get = function() {\n            /**\n             * @alias core.bus.lpCoreBus\n             */\n            var API = {};\n            var emitter = EventEmitter.create();\n\n            if (window.gadgets && window.gadgets.pubsub) {\n                return window.gadgets.pubsub;\n            }\n\n            /**\n             * Adds the specified event listener for the specified event.\n             * Allows subscription to the events published by other Launchpad modules / widgets.\n             *\n             * @example\n             * ```\n             * bus.subscribe('someEvent', function (data) {\n             *   console.log('Event has published with:', data);\n             * });\n             * ```\n             *\n             * @param name {String} Event name\n             * @param callback {Function} Listener\n             * @returns {Undefined}\n             */\n            API.subscribe = function(name, callback) {\n                emitter.on(name, callback);\n            };\n\n            /**\n             * Publishes the specified event.\n             * Allows publishing of events that other modules / widgets can subscribe to.\n             *\n             * @example\n             * ```\n             * var handler = function (arg1, arg2) {\n             *   console.log('Event has published', arg1, arg2);\n             * };\n             *\n             * bus.subscribe('someEvent', handler);\n             * bus.publish('someEvent', 'Hello', {foo: 'bar'}); // Event has published, Hello, {foo: \"bar\"}\n             * ```\n             *\n             * @param name {String} Event name\n             * @returns {Undefined}\n             */\n            API.publish = function (name/*, argument1, ..., argumentN*/) {\n                emitter.emit.apply(emitter, arguments);\n            };\n\n            /**\n             * Unsubscribes callback function from the event published by other Launchpad modules / widgets.\n             *\n             * @example\n             * ```\n             * var handler = function () {\n             *   console.log('Event has published');\n             * };\n             *\n             * bus.subscribe('someEvent', handler);\n             * bus.publish('someEvent'); // Event has published\n             *\n             * bus.unsubscribe('someEvent', handler);\n             * bus.publish('someEvent'); // Nothing happened here\n             * ```\n             *\n             * @param name {String} Event name\n             * @param callback {Function} Listener\n             * @returns {Undefined}\n             */\n            API.unsubscribe = function(name, callback) {\n                emitter.off(name, callback);\n            };\n\n            /**\n             * Provides the internal eventemitter to use separetely from the bus itself.\n             * It is useful sometimes to emit and listen events between cooperating objects.\n             *\n             * Available only if `window.gadgets.pubsub` is not available.\n             *\n             * @example\n             * For that you can create a new eventemitter:\n             * ```\n             * var emitter = lpCoreBus.EventEmitter.create();\n             *\n             * emitter.on('warning', function(message) {\n             *   console.log(message);\n             * });\n             *\n             * emitter.emit('warning', 'Lorem ipsum');\n             * ```\n             *\n             * @example\n             * or you can mix the eventemitter methods right into the object\n             * and use them as it were part of the original object:\n             * ```\n             * var alerts = {\n             *   show: function (message) {\n             *     ...\n             *     this.emit('show', message);\n             *   }\n             * };\n             *\n             * lpCoreBus.EventEmitter.mixin(alerts);\n             * ```\n             */\n            API.EventEmitter = EventEmitter;\n\n            return API;\n        };\n    };\n\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./scripts/modules/bus/provider.js\n// module id = 5\n// module chunks = 0","/**\n *  ----------------------------------------------------------------\n *  Copyright © Backbase B.V.\n *  ----------------------------------------------------------------\n *  Author : Backbase R&D - Amsterdam - New York\n *  Filename : eventemitter.js\n *  Description: A simple event emitter factory to use in any module\n *  ----------------------------------------------------------------\n */\n\ndefine(function(require, exports, module) {\n    'use strict';\n\n    function indexOf(listeners, listener) {\n        var idx = listeners.length;\n        var value;\n\n        while (idx--) {\n            value = listeners[idx][0];\n            if (value === listener || (value.listener && value.listener === listener)) {\n                return idx;\n            }\n        }\n\n        return -1;\n    }\n\n    function defined(thing) {\n        return typeof thing !== 'undefined';\n    }\n\n    /**\n     * Executes each of the listeners in order with the supplied arguments.\n     * @param   {String} event Name of the event\n     * @returns {Object}       Chainable methods\n     */\n    function emit(event) {\n        var listeners = this.listeners(event).slice();\n        var singleArg = arguments.length === 1;\n        var slice = Array.prototype.slice;\n        var idx = 0;\n        var len = listeners.length;\n\n        for ( ; idx < len; idx++) {\n            if (singleArg) {\n                if (defined(listeners[idx][1])) {\n                    listeners[idx][0].call(listeners[idx][1]);\n                }\n                else {\n                    listeners[idx][0]();\n                }\n            } else {\n                listeners[idx][0].apply(listeners[idx][1], slice.call(arguments, 1));\n            }\n        }\n\n        return this;\n    }\n\n    function EventEmitter() {}\n\n    EventEmitter.prototype = {\n        /**\n         * Adds an `event` `listener` to the end of the listeners array for\n         * the specified `event`.\n         * @param   {String}   event    Name of the event\n         * @param   {Function} listener Handler to be added\n         * @param   {Object}   thisp    Object to be bound to the listener\n         * @returns {Object}            Chainable methods\n         */\n        on: function(event, listener, thisp) {\n            var listeners = this.listeners(event);\n\n            if (indexOf(listeners, listener) < 0) {\n                listeners.push([listener, thisp]);\n            }\n\n            return this;\n        },\n\n        /**\n         * Removes a `listener` from the listener array for that `event`. If the\n         * `listener` is not provided removes all the listeners for that `event`.\n         * @param   {String}   event    Name of the event\n         * @param   {Function} listener Handler to be removed\n         * @returns {Object}            Chainable methods\n         */\n        off: function(event, listener) {\n            if (!arguments.length) {\n                this.events = null;\n                return this;\n            } else if (arguments.length === 1) {\n                if (this.events.hasOwnProperty(event)) {\n                    this.events[event] = null;\n                }\n                return this;\n            }\n\n            var listeners = this.listeners(event);\n            var listenerIndex = indexOf(listeners, listener);\n\n            if (listenerIndex >= 0) {\n                listeners.splice(listenerIndex, 1);\n            }\n\n            return this;\n        },\n\n        emit: emit,\n\n        /**\n         * Alias for emit\n         * {Function}\n         */\n        trigger: emit,\n\n        /**\n         * Adds a one time `listener` for the `event`.\n         * @param   {String}   event     Name of the event\n         * @param   {Function} listener  Handler to be added\n         * @param   {Object}   thisp     Object to be bound to the listener\n         * @returns {Object}             Chainable method\n         */\n        once: function(event, listener, thisp){\n            var self = this;\n\n            function one() {\n                listener.apply(this, arguments);\n                self.off(event, one);\n            }\n\n            one.listener = listener;\n            this.on(event, one, thisp);\n\n            return this;\n        },\n\n        /**\n         * Returns an array of listeners for the specified `event`.\n         * @param   {String} event  Name of the event\n         * @returns {Array}\n         */\n        listeners: function(event) {\n            var events = this.events || (this.events = {});\n\n            return events[event] || (events[event] = []);\n        }\n    };\n\n    EventEmitter.create = function() {\n        return new EventEmitter();\n    };\n\n    /**\n     * Adds event emitter functionality to `target`.\n     * @param  {Object} target Object to be mixed\n     */\n    EventEmitter.mixin = function(target) {\n        var props = ['on', 'off', 'emit', 'trigger', 'once', 'listeners'];\n\n        for (var i = props.length; i--; ) {\n            target[props[i]] = EventEmitter.prototype[props[i]];\n        }\n    };\n\n    module.exports = EventEmitter;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./scripts/modules/bus/eventemitter.js\n// module id = 6\n// module chunks = 0","/**\n * Provides generic cache system. Use this module to cache async calls.\n *\n * @copyright Backbase B.V.\n * @author Backbase R&D - Amsterdam - New York\n *\n * @name cache\n * @memberof core\n * @ngModule\n */\n\ndefine(function(require, exports, module) {\n    'use strict';\n\n    module.name = 'core.cache';\n    var base = require('base');\n    var deps = [];\n\n    var cache;\n    var promiseCache;\n\n    // @ngInject\n    function lpCoreCachePromise($cacheFactory, $q, lpCoreUtils) {\n        cache = cache || $cacheFactory('lp');\n\n        /**\n         * Returns cached promise for the key if it exists.\n         * Otherwise calls the function returning promise, and return it.\n         *\n         * @name lpCoreCachePromise\n         * @memberof core.cache\n         * @param   {Object}  options  Object containing:\n         *   {String} key        Cache key\n         *   {Function} promise  Function returning promise\n         * @returns {Promise}\n         * @ngFactory\n         */\n        function cachePromise(options) {\n            var promise = options.promise;\n            var key = options.key;\n            promiseCache = cache.get(key);\n            if(!promiseCache) {\n                promiseCache = promise.call();\n                cache.put(key, promiseCache);\n            }\n            return promiseCache;\n        }\n\n        return cachePromise;\n    }\n\n    module.exports = base.createModule(module.name, deps)\n        .factory('lpCoreCachePromise', lpCoreCachePromise);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./scripts/modules/cache/main.js\n// module id = 7\n// module chunks = 0","/**\n * Auto configuration module\n * @name configuration\n * @memberof core\n * @ngModule\n */\n\ndefine(function(require, exports, module) {\n    'use strict';\n\n    module.name = 'core.configuration';\n\n    var base = require('base');\n    var deps = [];\n\n    /**\n     * {Description}\n     * @name lpCoreConfiguration\n     * @memberof core.configuration\n     * @ngProvider\n     * @ngInject\n     */\n    function configurationProvider(lpCoreUtils, lpCoreI18nProvider) {\n        var widget;\n        var utils = lpCoreUtils;\n\n        this.useWidgetInstance = function(w) {\n            widget = w;\n            lpCoreI18nProvider.useWidgetInstance(w);\n        };\n\n        // @ngInject\n        this.$get = function() {\n            /**\n             * @alias core.configuration.lpCoreConfiguration\n             */\n            var API = function (setWidget) {\n                this.widget = setWidget;\n                this.attributes = {};\n\n                this.defineAttribute('locale', {\n                    'default': 'en'\n                });\n            };\n\n            /**\n             * Returns current value of locale attribute\n             *\n             * @example\n             * ```\n             * var locale = configProvider.getLocale(); // \"en\"\n             * ```\n             *\n             * @returns {String}\n             */\n            API.prototype.getLocale = function() {\n                return this.get('locale');\n            };\n\n            /**\n             * Defines a new config attribute with the specified attribute name\n             * and the specified attribute description.\n             *\n             * @example\n             * ```\n             * // Define attribute \"permission\" and set \"readonly\" as a default value\n             * configProvider.defineAttribute('permission', {\n             *   'default': 'readonly'\n             * });\n             * ```\n             *\n             * @param attr {String} Attribute name\n             * @param {Object} definition\n             *\n             * @returns {Undefined}\n             */\n            API.prototype.defineAttribute = function(attr, definition) {\n                this.attributes[attr] = definition;\n            };\n\n            /**\n             * Returns value of the specified attribute.\n             * Returns default value if actual value is undefined.\n             * @param attr {String} Attribute name\n             * @returns {*}\n             */\n            API.prototype.get = function(attr) {\n                var value;\n                if (this.widget) {\n                    value = (this.widget.getPreference(attr)) || (this.widget.getPreferenceFromParents(attr));\n                }\n\n                value = (typeof value !== 'undefined') ? value : (this.getDefault(attr));\n\n                // If the value is a string, the resolve portal client placeholders ($contextRoot, etc).\n                if (utils.isString(value)) {\n                    value = utils.resolvePortalPlaceholders(value);\n                }\n\n                return value;\n            };\n\n            /**\n             * Returns default value of the specified attribute or null,\n             * if the attribute doesn't have default value;\n             *\n             * @example\n             * ```\n             * // Read default value for \"locale\" attribute\n             * var defaultValue = configProvider.getDefault('locale'); // \"en\"\n             * ```\n             *\n             * @param attr {String} Attribute name\n             * @returns {*|Null}\n             */\n            API.prototype.getDefault = function(attr) {\n                return (this.attributes[attr] && this.attributes[attr]['default'])\n                    ? this.attributes[attr]['default']\n                    : null;\n            };\n\n            /**\n             * Returns the ABS path if there is one. Only works if a widget is set, otherwise assumes\n             * ABS path is on the root `/`.\n             * @returns {String}\n             */\n            API.prototype.getAbsPath = function() {\n                return (this.widget && utils.getWidgetBaseUrl(this.widget)) || '/';\n            };\n\n            return new API(widget);\n        };\n    }\n\n    module.exports = base.createModule(module.name, deps)\n        .provider('lpCoreConfiguration', configurationProvider);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./scripts/modules/configuration/main.js\n// module id = 8\n// module chunks = 0","/**\n * Error handler system. Overrides the default Angular\n * <a href=\"https://docs.angularjs.org/api/ng/service/$exceptionHandler\">$exceptionHandler</a> action.\n *\n * @copyright Backbase B.V.\n * @author : Backbase R&D - Amsterdam - New York\n *\n * @name error\n * @memberof core\n * @ngModule\n */\n\ndefine(function (require, exports, module) {\n\n    'use strict';\n\n    module.name = 'error';\n\n    var base = require('base');\n\n    var deps = [\n        // no dependencies\n    ];\n\n    module.exports = base.createModule(module.name, deps)\n        .config(require('./config'))\n        .factory(require('./handler'));\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./scripts/modules/error/main.js\n// module id = 9\n// module chunks = 0","/**\n *  ----------------------------------------------------------------\n *  Copyright © Backbase B.V.\n *  ----------------------------------------------------------------\n *  Author : Backbase R&D - Amsterdam - New York\n *  Filename : config.js\n *  Description:\n *  #TODO filter exceptions\n *  #TODO use lpCoreBus to emit some specific errors events\n *  #TODO add method to use custom handler\n *  ----------------------------------------------------------------\n */\ndefine(function(require, exports, module) {\n    'use strict';\n\n    // @ngInject\n    module.exports = function($provide) {\n\n        // module configuration\n        // Decorate the NG exceptionHandler\n        $provide.decorator('$exceptionHandler', function($delegate, $injector){\n            return function(e, opts) {\n                // Handle the exception by name and call the propper service\n                //var $log = $injector.get('$log');\n                //$log.debug('Default exception handler:', e.name);\n                $delegate(e, opts);\n            };\n        });\n    };\n\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./scripts/modules/error/config.js\n// module id = 10\n// module chunks = 0","define(function(require, exports, module) {\n    'use strict';\n\n    // base utility library (lodash + base);\n    var utils = require('base').utils;\n    var API = {};\n    var AssertionError;\n\n    /**\n     * lpCoreError API\n     *\n     * #####Correctly throwing an error\n     *\n     * 1. Errors should be thrown in the low-level parts of the application (**base, core, modules**)\n     * 2. Always throw an instance of `Error` class, never throw a string or an object. Getting stack trace\n     *    is only possible via Error object, for example.\n     * 3. Throwing an error stops code execution. If the error is not serious enough, throw it asynchronously\n     *\n     * #####Capture inside the widget\n     * @example\n     * ```\n     * var transaction = lpTransaction.api();\n     *\n     * // Widget level\n     * transaction.save()\n     *   .catch(lpCoreError.captureException) // basic handling\n     *   .then(showSuccessMethod)\n     *   .finally(doneLoading);\n     * ```\n     *\n     * #####Custom Error types in LP\n     *\n     * 1. API modules Error types LP{API}Error\n     *\n     * ```\n     * var TransactionError = lpCoreError.createException('LPTransactionError');\n     * var AccountError = lpCoreError.createException('LPAccountError');\n     * ```\n     *\n     * 2. Core Error types `LPCoreHttp`, `LPCoreI18n`, `LPCoreStore`, `LPCoreBus`, etc.\n     *\n     * #####Error types\n     *\n     * Besides the generic Error constructor, there are other core error constructors in JavaScript.\n     * For client-side exceptions, see Exception Handling Statements.\n     *\n     * - `EvalError` occurs regarding the global function eval().\n     * - `InternalError` occurs when an internal error in the JavaScript engine is thrown. E.g. \"too much recursion\".\n     * - `RangeError` occurs when a numeric variable or parameter is outside of its valid range.\n     * - `ReferenceError` occurs when de-referencing an invalid reference.\n     * - `SyntaxError` occurs while parsing code in eval().\n     * - `TypeError` occurs when a variable or parameter is not of a valid type.\n     * - `URIError` occurs when encodeURI() or decodeURI() are called\n     *\n     * #####Events / lpCoreBus\n     *\n     * ```\n     * // will publish a notification error event\n     * lpCoreBus.publish('lp:notify:error', error);\n     * ```\n     *\n     * #####Resources\n     * - <a target=\"_blank\" href=\"http://www.slideshare.net/nzakas/enterprise-javascript-error-handling-presentation\">\n     *      http://www.slideshare.net/nzakas/enterprise-javascript-error-handling-presentation</a>\n     * - <a target=\"_blank\" href=\"http://eloquentjavascript.net/1st_edition/chapter5.html\">\n     *      http://eloquentjavascript.net/1st_edition/chapter5.html</a>\n     * - <a target=\"_blank\" href=\"https://docs.angularjs.org/api/ng/service/$exceptionHandler\">\n     *      https://docs.angularjs.org/api/ng/service/$exceptionHandler</a>\n     * - <a target=\"_blank\" href=\"http://blog.loadimpact.com/2014/06/03/exception-handling-in-an-angularjs-web-application-tutorial/\">\n     *      http://blog.loadimpact.com/2014/06/03/exception-handling-in-an-angularjs-web-application-tutorial/</a>\n     * - <a target=\"_blank\" href=\"https://technology.amis.nl/2014/10/06/automatic-error-handling-in-angularjs/\">\n     *      https://technology.amis.nl/2014/10/06/automatic-error-handling-in-angularjs/</a>\n     * - <a target=\"_blank\" href=\"http://odetocode.com/blogs/scott/archive/2014/04/21/better-error-handling-in-angularjs.aspx\">\n     *      http://odetocode.com/blogs/scott/archive/2014/04/21/better-error-handling-in-angularjs.aspx</a>\n     * - <a target=\"_blank\" href=\"http://bahmutov.calepin.co/catch-all-errors-in-angular-app.html\">\n     *      http://bahmutov.calepin.co/catch-all-errors-in-angular-app.html</a>\n     * - <a target=\"_blank\" href=\"http://www.nczonline.net/blog/2009/03/03/the-art-of-throwing-javascript-errors/\">\n     *      http://www.nczonline.net/blog/2009/03/03/the-art-of-throwing-javascript-errors/</a>\n     *\n     * @memberof core.error\n     * @ngFactory\n     * @ngInject\n     */\n    exports.lpCoreError = function($exceptionHandler, $q) {\n        /**\n         * Creates a custom Error Exception\n         * @param   {String} name  Exception name\n         * @returns {Object}       ErrorCustomException constructor\n         */\n        API.createException = function(name) {\n            function ErrorException(message) {\n                this.name = name || 'Error';\n                this.message = message || 'Unknown Message';\n            }\n\n            ErrorException.prototype = new Error();\n            ErrorException.prototype.constructor = ErrorException;\n\n            return ErrorException;\n        };\n\n        /**\n         * Captures the exception and pass it to Angular exceptionHandler.\n         *\n         * @example\n         * Used in a `try-catch` block:\n         *\n         * ```\n         * try {\n         *   someUnpredictableMethod();\n         * } catch(error) {\n         *   lpCoreError.captureException(error);\n         * }\n         * ```\n         *\n         * @example\n         * Used in a `Promise`:\n         *\n         * ```\n         * someAsyncThing()\n         *   .then(someOtherAsyncThing)\n         *   .catch(function (error) {\n         *     lpCoreError.captureException(error);\n         *   });\n         * ```\n         *\n         * @example\n         * Also you can pass extra data:\n         *\n         * ```\n         * lpCoreError.captureException(error, {\n         *   some: 'option'\n         * });\n         * ```\n         *\n         * @memberof core.error.lpCoreError\n         * @param   {Error}  error  Exception\n         * @param   {Object} opts   Optional cause/options/context\n         * @returns {Object} Angular Error Object\n         */\n        API.captureException = function (error, opts) {\n            return $exceptionHandler(error, opts);\n        };\n\n        /**\n         * Throws the error.\n         *\n         * @example\n         * Throwing normal Error object (not recommended):\n         *\n         * ```\n         * exports.MainCtrl = function(lpCoreError) {\n         *   if (somethingWrong) {\n         *     lpCoreError.throwException('Normal Error');\n         *   }\n         * }\n         * ```\n         *\n         * This will throw an exception.name of type Error\n         * which will be caught by the **$exceptionHandler**\n         *\n         * @example\n         * Throwing your own exceptions (recommended, categorized exceptions):\n         *\n         * ```\n         * // Create a custom exception Error with Widgets.SampleWidget as name\n         * var WidgetErrorException = lpCoreError.createException('WidgetError');\n         *\n         * exports.MainCtrl = function(lpCoreError) {\n         *   if (somethingWrong) {\n         *     lpCoreError.throwException(new WidgetErrorException('Something wrong'));\n         *   }\n         * }\n         * ```\n         *\n         * This will throw an exception.name of type **WidgetError**\n         *\n         * @example\n         * Throwing errors in promises:\n         *\n         * ```\n         * var someOtherAsyncThing = function() {\n         *   return new Promise(function(resolve, reject) {\n         *     lpCoreError.throwException(new WidgetErrorException('Something wrong'));\n         *   });\n         * };\n         * ```\n         *\n         * You don't need to use reject method.\n         *\n         * @memberof core.error.lpCoreError\n         * @param error {Error|String} Error message or exception instance\n         * @returns {Undefined}\n         */\n        API.throwException = function (error) {\n            if (!(error instanceof Error)) {\n                error = new Error(error);\n            }\n            throw error;\n        };\n\n        /**\n         * Throws Error asynchronously.\n         * Throwing an error stops code execution.\n         * If the error is not serious enough, throw it asynchronously\n         *\n         * @memberof core.error.lpCoreError\n         * @param   {Error}     error  Error message or exception instance\n         * @param   {Number}    delay  Execution delay\n         * @param   {Object}    args   Arguments for the delay method\n         * @returns {Undefined}\n         */\n        API.throwExceptionAsync = function (error, delay, args) {\n            if (!(error instanceof Error)) {\n               error = new Error(error);\n            }\n            utils.defer( function () { throw error; }, (delay || 100), args );\n        };\n\n        /**\n         * Throws an AssertionError if condition is not satisfied.\n         * Supposed to be a standardized way for programs to test invariants.\n         *\n         * @example\n         * ```\n         * lpCoreError.assert(x === 12); // throws an AssertionError if false, with a default error message\n         * lpCoreError.assert(x === 12, 'I think it should be twelve') // throws an AssertionError if false, with the given error message\n         * ```\n         *\n         * @memberof core.error.lpCoreError\n         * @param   {Boolean}   condition  Evaluate condition\n         * @param   {String}    message    Error message\n         * @returns {Undefined}\n         */\n        API.assert = function (condition, message) {\n            AssertionError = AssertionError || API.createException('AssertionError');\n            if ( !condition ) {\n                API.throwException( new AssertionError(message || 'Assertion fails!') );\n            }\n        };\n\n        return API;\n    };\n\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./scripts/modules/error/handler.js\n// module id = 11\n// module chunks = 0","/**\n * Main lpCoreHttp module\n *\n * @copyright Backbase B.V.\n * @author Backbase R&D - Amsterdam - New York\n *\n * @name http\n * @memberof core\n * @ngModule\n */\n\ndefine(function(require, exports, module) {\n    'use strict';\n\n    module.name = 'http';\n\n    var base = require('base');\n    // 3rd Party\n    // Add angular ressources after base\n    require('angular-resource');\n\n    // module dependencies\n    var deps = [\n        'ngResource'\n    ];\n\n    module.exports = base.createModule(module.name, deps)\n        .config(require('./config'))\n        .factory(require('./httpInterceptor'));\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./scripts/modules/http/main.js\n// module id = 12\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_13__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"angular-resource\"\n// module id = 13\n// module chunks = 0","/**\n *  ----------------------------------------------------------------\n *  Copyright © Backbase B.V.\n *  ----------------------------------------------------------------\n *  Author : Backbase R&D - Amsterdam - New York\n *  Filename : config.js\n *  Description: http Configuration Module\n *  ----------------------------------------------------------------\n */\n\ndefine(function(require, exports, module) {\n\n    'use strict';\n\n    var base = require('base');\n    var $ = require('jquery');\n    var utils = require('../utils/main');\n\n    var $injector = base.ng.injector([utils.name]);\n    var lpCoreUtils = $injector.get('lpCoreUtils');\n\n    var xsrfTokenCookie = lpCoreUtils.getCookie('XSRF-TOKEN');\n\n    // set xsrf token for non-angular XHR requests\n\n    // Configure global XHR requests using jQuery\n    if (xsrfTokenCookie !== '') {\n        $.ajaxSetup({\n            global: true,\n            headers: { 'X-XSRF-TOKEN': xsrfTokenCookie }\n        });\n    }\n\n    /**\n     * [httpConfig description]\n     * @param $httpProvider\n     * @param $provide\n     * @returns {*}\n     */\n     // @ngInject\n    module.exports = function($httpProvider) {\n        // create the interceptor factory\n        $httpProvider.interceptors.push('lpCoreHttpInterceptor');\n        var defaultHeaders = {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'X-XSRF-TOKEN': xsrfTokenCookie\n        };\n        $httpProvider.defaults.headers.common = defaultHeaders;\n        $httpProvider.defaults.headers.post = defaultHeaders;\n        $httpProvider.defaults.headers.put = defaultHeaders;\n        //* #TODO add general $resourceProvider.defaults\n\n    };\n\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./scripts/modules/http/config.js\n// module id = 14\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_15__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"jquery\"\n// module id = 15\n// module chunks = 0","/**\n * Core utilities module exposed as `lpCoreUtils` angular constant object.\n * @name utils\n * @memberof core\n * @ngModule\n */\n\ndefine(function (require, exports, module) {\n\n    'use strict';\n\n    module.name = 'core.utils';\n\n    var base = require('base');\n\n    /**\n     * @name lpCoreUtils\n     * @memberof core.utils\n     * @ngConstant\n     */\n    var utils = base.utils;\n\n    var url = require('./url');\n    var date = require('./date');\n    var portal = require('./portal');\n    var is = require('./is');\n    var parse = require('./parse');\n    var string = require('./string');\n    var cookie = require('./cookie');\n    var ngUtils = require('./ng');\n\n    utils.mixin(url);\n    utils.mixin(date);\n    utils.mixin(portal);\n    utils.mixin(is);\n    utils.mixin(parse);\n    utils.mixin(string);\n    utils.mixin(cookie);\n    utils.mixin(ngUtils);\n\n    module.exports = base.createModule( module.name, [])\n        .constant( { 'lpCoreUtils': utils });\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./scripts/modules/utils/main.js\n// module id = 16\n// module chunks = 0","/**\n * Parses / stringifies query string\n * @module url\n */\ndefine(function(require, exports, module) {\n    'use strict';\n\n    var utils = require('base').utils;\n\n    /**\n     * Given a `string` returns the json `object` equivalent.\n     *\n     * @memberof core.utils.lpCoreUtils\n     * @param   {String} str  The query string\n     * @returns {Object} Returns a json object\n     */\n    exports.parseQuerystring = function parseQuerystring(str) {\n        if (!utils.isString(str)) {\n            return {};\n        }\n\n        str = utils.trim(str);\n\n        if (!str) {\n            return {};\n        }\n\n        return utils.reduce(str.split('&'), function(obj, param) {\n            var parts = param.split('=');\n            var key = decodeURIComponent(parts[0]);\n            var val = parts[1];\n\n            val = utils.isUndefined(val) ? null : decodeURIComponent(val);\n\n            if (obj.hasOwnProperty(key)) {\n                if (!utils.isArray(obj[key])) {\n                    obj[key] = [obj[key]];\n                }\n                obj[key].push(val);\n            } else {\n                obj[key] = val;\n            }\n\n            return obj;\n        }, {});\n    };\n\n    /**\n     * Given an `object` returns its query string equivalent.\n     *\n     * @example\n     * ```\n     * lpCoreUtils.buildQueryString({\n     *   search: 'backbase',\n     *   page: 3\n     * }); // \"search=backbase&page=3\"\n     * ```\n     *\n     * @memberof core.utils.lpCoreUtils\n     * @param   {Object} obj  A json compliant object\n     * @returns {String} Returns the query string\n     */\n    exports.buildQueryString = function buildQueryString(obj) {\n        if (!utils.isObject(obj)) {\n            return '';\n        }\n\n        return utils.map(utils.keys(obj), function(key) {\n            var val = obj[key];\n\n            if (utils.isArray(val)) {\n                return utils.map(val, function (val2) {\n                    return encodeURIComponent(key) + '=' + encodeURIComponent(val2);\n                }).join('&');\n            }\n\n            return encodeURIComponent(key) + '=' + encodeURIComponent(val);\n        }).join('&');\n    };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./scripts/modules/utils/url.js\n// module id = 17\n// module chunks = 0","/**\n * Missing methods in the Date native object and extensions.\n * @module date\n */\ndefine(function(require, exports, module) {\n    'use strict';\n\n    var utils = require('base').utils;\n    var pad = function(number) {\n        return utils.pad(number, 2, '0');\n    };\n\n    /**\n     * Exposes <a href=\"http://momentjs.com/docs/\" target=\"_blank\">momentjs</a> object.\n     *\n     * @memberof core.utils.lpCoreUtils\n     * @example\n     * ```\n     * var date = lpCoreUtils.date().format('dddd, MMMM Do YYYY, h:mm:ss a');\n     * console.log(date); // \"Sunday, February 14th 2010, 3:25:50 pm\"\n     * ```\n     */\n    exports.date = require('moment');\n\n    /**\n     * Returns a string in ISO format, `YYYY-MM-DDTHH:mm:ss.sssZ`, UTC format.\n     *\n     * @memberof core.utils.lpCoreUtils\n     * @param   {Date}   date  The input date\n     * @returns {String}       The ISO string representation.\n     */\n    exports.dateToISOString = function(date) {\n        if (Date.prototype.toISOString) {\n            return Date.prototype.toISOString.call(date);\n        }\n\n        /** https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString */\n        return date.getUTCFullYear() +\n            '-' + pad(date.getUTCMonth() + 1) +\n            '-' + pad(date.getUTCDate()) +\n            'T' + pad(date.getUTCHours()) +\n            ':' + pad(date.getUTCMinutes()) +\n            ':' + pad(date.getUTCSeconds()) +\n            '.' + (date.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) +\n            'Z';\n    };\n\n    exports.dateFormat = function(date, options) {};\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./scripts/modules/utils/date.js\n// module id = 18\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_19__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"moment\"\n// module id = 19\n// module chunks = 0","/**\n * Utility methods to assign with portal.\n * @module string\n */\ndefine(function(require, exports, module) {\n    'use strict';\n\n    var base = require('base');\n    var lpPortal = base.inject('lpPortal', require('../portal/main').name);\n    var utils = base.utils;\n\n    /**\n     * Resolve portal client placeholders.\n     *\n     * @example\n     * ```\n     * lpCoreUtils.resolvePortalPlaceholders('$(contextPath)/some/page.html'); // \"/real/context/path/some/page.html\"\n     * ```\n     *\n     * @memberof core.utils.lpCoreUtils\n     * @param   {String} string Path to be resolved\n     * @returns {String}\n     */\n    exports.resolvePortalPlaceholders = function(string) {\n        var replaceWith = lpPortal.root || '';\n        if ( utils.isString(string) ) {\n            var replacements = utils([\n                '$(contextRoot)',\n                '$(contextPath)',\n                '$(servicesPath)'\n            ]);\n\n            string = replacements.reduce(function(str, replace) {\n                return str.replace(replace, replaceWith);\n            }, string);\n        }\n        return string;\n    };\n\n    /**\n     * Returns the base URL of the given widget instance.\n     *\n     * @memberof core.utils.lpCoreUtils\n     * @param   {Widget} widgetInstance Instance of the widget\n     * @returns {String}\n     */\n    exports.getWidgetBaseUrl = function(widgetInstance) {\n        if( !utils.isEmpty(widgetInstance)) {\n            var src = widgetInstance.getPreference('src');\n            return (src && exports.resolvePortalPlaceholders(\n                src.replace(/\\/[^\\/]*$/, '')\n            ));\n        }\n    };\n\n    /**\n     * Return value of the portal configuration property\n     * @memberof core.utils.lpCoreUtils\n     * @param   {String} property  Name of the portal property\n     * @returns {String}           Value of the portal property\n     */\n    // TODO: remove this method after refactoring MFALogin to use lpPortal\n    exports.getPortalProperty = function(property) {\n        switch (property) {\n            case 'serverRoot':\n                return lpPortal.root;\n            case 'portalName':\n                return lpPortal.name;\n            case 'pageName':\n                return lpPortal.page.name;\n            case 'defaultLandingPage':\n                return lpPortal.defaultLandingPage;\n            case 'locale':\n                return lpPortal.locale;\n            case 'hideAccount':\n                return lpPortal.hideAccount;\n            case 'maskAccount':\n                return lpPortal.maskAccount;\n            default:\n                return lpPortal['_portalConfig'][property];\n        }\n    };\n\n     /**\n      * Returns value of the page configuration preference\n      * @memberof core.utils.lpCoreUtils\n      * @param   {String} prop  Name of the page property\n      * @returns {String}       Value of the page property\n      */\n    exports.getPagePreference = function(prop) {\n        return lpPortal.page.getPreference(prop);\n    };\n\n    /**\n     * Returns the portal page element\n     * @memberof core.utils.lpCoreUtils\n     * @returns {Element}\n     */\n    exports.getPortalPage = function() {\n        return lpPortal.page;\n    };\n\n    exports.generateUUID = function() {\n\n            var d = new Date().getTime();\n            var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n                    var r = (d + Math.random() * 16) % 16 | 0;\n                    d = Math.floor(d / 16);\n                    return (c === 'x' ? r : (r & 0x7 | 0x8)).toString(16);\n            });\n            return uuid;\n    };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./scripts/modules/utils/portal.js\n// module id = 20\n// module chunks = 0","/**\n *  ----------------------------------------------------------------\n *  Copyright © Backbase B.V.\n *  ----------------------------------------------------------------\n *  Author : Backbase R&D - Amsterdam - New York\n *  Filename : main.js\n *  Description: module for communication with portal client\n * ----------------------------------------------------------------\n */\n\ndefine(function (require, exports, module) {\n    'use strict';\n\n    module.name = 'core.portal';\n\n    var base = require('base');\n\n    var deps = [\n    ];\n\n    // @ngInject\n    function run() {\n\n    }\n\n    module.exports = base.createModule(module.name, deps)\n        .constant(require('./portal')) // lpPortal\n        .run(run);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./scripts/modules/portal/main.js\n// module id = 21\n// module chunks = 0","define(function (require, exports, module) {\n    'use strict';\n    var utils = require('base').utils;\n    var b$ = window.b$ || {};\n    var portal = utils.assign({\n        portalView: { getElementsByTagName: function(){ return []; } },\n        config: { serverRoot: './' },\n        pageName: '',\n        pageUUID: '',\n        loggedInUserId: ''\n    }, b$.portal);\n    var bd = utils.assign( {\n        designMode: false\n    }, window.bd);\n\n    var page = {\n        name: portal.pageName,\n        id: portal.pageUUID\n    };\n\n    var pageClient = portal.portalView.getElementsByTagName('page')[0];\n    page.getPreference = function(prop) {\n        if (pageClient) {\n            return pageClient.getPreference(prop);\n        }\n    };\n\n    exports.lpPortal = {\n        root: portal.config.serverRoot,\n        name: portal.portalName,\n        page: page,\n        defaultLandingPage: portal.config.defaultLandingPage,\n        linkId: portal.linkUUID,\n        userId: portal.loggedInUserId,\n        designMode: bd.designMode === 'true',\n        // used by module-accounts: (temporary solution, should be widget preferences)\n        // portal.config.locale - choses the type of IBAN. possible values EU, US, en-US\n        locale: portal.config.locale,\n        // portal.config.hideAccount - if true account no is hidden\n        hideAccount: portal.config.hideAccount,\n        // portal.config.maskAccount - if number only first # will show\n        maskAccount: portal.config.maskAccount,\n        // temporary solution in case that some config value is missing\n        // if you use it, console.log the property that is requested\n        '_portalConfig': portal.config\n        // resourceManager?\n        // noDup is not used anywhere\n    };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./scripts/modules/portal/portal.js\n// module id = 22\n// module chunks = 0","/**\n * Testing methods.\n * @module is\n */\ndefine(function(require, exports, module) {\n\n    'use strict';\n\n    /**\n     * Check if input is valid email address.\n     *\n     * @memberof core.utils.lpCoreUtils\n     * @param   {String}  email  Email address\n     * @returns {Boolean}\n     */\n    exports.isValidEmail = function (email) {\n        var regularExpressions = /^\\w+([\\.\\-]?\\w+)*@\\w+([\\.\\-]?\\w+)*(\\.\\w+)+$/;\n        return regularExpressions.test(email);\n    };\n\n    /**\n     * Check if string is valid UUID\n     *\n     * @memberof core.utils.lpCoreUtils\n     * @param   {String}  string\n     * @returns {Boolean}\n     */\n    exports.isValidUUID = function (string) {\n        var regularExpressions = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;\n        return regularExpressions.test(string);\n    };\n\n    /**\n     * Validate the payment detail checksum based on ISO 7064\n     * http://en.wikipedia.org/wiki/International_Bank_Account_Number#Validating_the_IBAN\n     * @param  {String} input the input to be validated\n     */\n    exports.isValidISO7064Checksum = function(input) {\n        /**\n        * Replace letters from the IBAN with numbers\n        * @param  {String} str [description]\n        */\n        var replaceLetters = function(str) {\n            var strArray = str.split('');\n            for (var i = 0; i < strArray.length; i++) {\n                if (/[A-Z]/.test(strArray[i])) {\n                    strArray[i] = strArray[i].charCodeAt(0) - 55;\n                }\n            }\n            return strArray.join('');\n        };\n\n        /**\n         * Performs a basic mod-97 operation for IBAN validation (as described in ISO 7064)\n         * @param  {String} str Max 9 character string respresenting part of the IBAN\n         */\n        var mod97 = function(str) {\n            var result = parseInt(str, 10) % 97;\n            result = result.toString();\n\n            return result.length === 1 ? '0' + result : result;\n        };\n\n        if(input) {\n            input = input.substr(4) + input.substr(0, 4);\n            input = replaceLetters(input);\n            //bypasses javascript INT32 restriction\n            while (input.length > 2 && !isNaN(input)) {\n                input = mod97(input.substr(0, 9)) + input.substr(9);\n            }\n            if (parseInt(input, 10) === 1) {\n                return true;\n            }\n        }\n\n        return false;\n    };\n\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./scripts/modules/utils/is.js\n// module id = 23\n// module chunks = 0","/**\n * Parsing methods.\n * @module parse\n */\ndefine(function(require, exports, module) {\n\n    'use strict';\n\n    /**\n     * Normalizes boolean values, to be real Boolean type.\n     *\n     * @example\n     * ```\n     * lpCoreUtils.parseBoolean(''); // false\n     * ```\n     *\n     * @memberof core.utils.lpCoreUtils\n     * @param    {String|Boolean|Number} val\n     * @returns  {Boolean}\n     */\n    exports.parseBoolean = function (val) {\n        return (typeof val === 'boolean' && val) ||\n            (typeof val === 'string' && /\\s*true\\s*/i.test(val)) ||\n            (typeof val === 'number' && val !== 0);\n    };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./scripts/modules/utils/parse.js\n// module id = 24\n// module chunks = 0","/**\n * String helper methods.\n * @module utils\n */\ndefine(function(require, exports, module) {\n\n    'use strict';\n\n    var utils = require('base').utils;\n\n    /**\n     * Removes all the html tags from `str`.\n     * @memberof core.utils.lpCoreUtils\n     * @param   {String} str  Input string\n     * @returns {String}\n     */\n    exports.stripHtml = function (str) {\n        if (!utils.isString(str)) {\n            // TODO: use custom log object when implemented\n            console.log(str + ' is not a String');\n            return '';\n        }\n\n        return str.replace(/<\\/?[^>]+>/g, '');\n    };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./scripts/modules/utils/string.js\n// module id = 25\n// module chunks = 0","/**\n * Cookie helper methods.\n * @module utils\n */\ndefine(function(require, exports, module) {\n\n    'use strict';\n\n    /**\n     * Returns cookie by name\n     *\n     * @memberof core.utils.lpCoreUtils\n     * @param   {String} name Name of a cookie\n     * @returns {String}\n     */\n    exports.getCookie = function(name) {\n        var value = '; ' + document.cookie,\n            parts = '';\n\n        if (typeof name === 'string') {\n            parts = value.split('; ' + name + '=');\n            if (parts.length === 2) {\n                return parts.pop().split(';').shift();\n            }\n        }\n    };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./scripts/modules/utils/cookie.js\n// module id = 26\n// module chunks = 0","/**\n * Helper angular methods.\n * @module ng\n */\ndefine(function(require, exports, module) {\n\n    'use strict';\n\n    /**\n     * Executes angular digest on the given scope\n     * if it's not already being executed.\n     * Then invokes the function `fn`.\n     *\n     * @memberof core.utils.lpCoreUtils\n     * @param   {Object}  scope  Check digest phase in given `scope`\n     * @param   {Function} fn  Function to execute\n     */\n    exports.safeApply = function safeApply(scope, fn) {\n        var phase = scope.$root.$$phase;\n        if (phase === '$apply' || phase === '$digest') {\n            fn();\n        } else {\n            scope.$apply(fn());\n        }\n    };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./scripts/modules/utils/ng.js\n// module id = 27\n// module chunks = 0","/**\n *  ----------------------------------------------------------------\n *  Copyright © Backbase B.V.\n *  ----------------------------------------------------------------\n *  Author : Backbase R&D - Amsterdam - New York\n *  Filename : httpInterceptor.js\n *  Description: Launchpad Http Interceptor\n *  ----------------------------------------------------------------\n */\n\ndefine(function(require, exports, module) {\n\n    'use strict';\n\n    var $ = require('jquery');\n    var base = require('base');\n    var utils = base.utils;\n    var queue = base.queue;\n    var ignoreList = [];\n\n    /**\n     * Accepts 1..n objects and the last argument must be the key. Starts\n     * searching for the key in the first object and so on until it is found,\n     * then return that value and deletes that property from the object.\n     * @private\n     * @param   {...Object} objects\n     * @param   {String}    key      Last argument\n     * @returns {*} First value found in `objects` by the `key`.\n     */\n    var getValue = function(/*objects, key*/) {\n        var objects = [].slice.call(arguments);\n        var key = objects.pop();\n        var value;\n\n        for (var i = 0, len = objects.length; i < len; i++) {\n            if (objects[i].hasOwnProperty(key)) {\n                value = objects[i][key];\n                delete objects[i][key];\n                return value;\n            }\n        }\n    };\n\n    /**\n     * Replaces `url` string ocurrences of $(property_name) with the values\n     * of `property_name` in `data` and `params` objects. If it is found the\n     * property is deleted from the object. It will start searching in `data`\n     * and then in `params`.\n     * @private\n     * @param   {String} url\n     * @param   {Object} data\n     * @param   {Object} params\n     * @returns {String}\n     */\n    var interpolateUrl = function(url, data, params) {\n        url = utils.trim(url).replace(\n            /\\$\\(([a-z]\\w*)\\)/gi,\n            function($0, label) {\n                return getValue(data, params, label);\n            });\n\n        return url;\n    };\n\n    /**\n     * Check if current response is notifiable.\n     * @private\n     */\n    var isNotifyable = function(response) {\n        var url = response.config.url;\n        return !ignoreList.some(function(pattern) {\n            return pattern instanceof RegExp ? pattern.test(url) : url.indexOf(pattern) > -1;\n        });\n    };\n\n    /**\n     * Calculate context id from request object. Used to compare \"similar\" requests and group them in retry dialog.\n     * @private\n     * @param response\n     * @return {string}\n     */\n    var getContextId = function(response) {\n        return [\n            response.config.method,\n            response.config.url,\n            $.param(response.config.params)\n        ].join('__');\n    };\n\n\n    /**\n     * Request/Response http interceptor\n     * @memberof core.http\n     * @ngFactory\n     * @ngInject\n     */\n    exports.lpCoreHttpInterceptor = function httpInterceptor($injector, $q) {\n\n\n        /**\n         * Interceptors get called with a http config object.\n         * The function is free to modify the config object or create a new one.\n         * The function needs to return the config object directly,\n         * or a promise containing the config or a new config object.\n         * @alias request\n         * @memberof core.http.lpCoreHttpInterceptor\n         * @param config {Object} Original request configuration\n         * @returns {Object} Modified request configuration\n         */\n        function requestInterceptor(config) {\n            config.data = config.data || {};\n            config.params = config.params || {};\n\n            // replaces all url parameters\n            config.url = interpolateUrl(config.url, config.data, config.params);\n\n            return config;\n        }\n\n        /**\n         * Interceptor gets called when a previous interceptor threw an error or resolved with a rejection.\n         * @alias requestError\n         * @memberof core.http.lpCoreHttpInterceptor\n         * @param responseErr {Object} Response http error\n         * @returns {Object} Modified response\n         */\n        function requestErrorInterceptor(responseErr) {\n            // not modified\n            return $q.reject(responseErr);\n        }\n        /**\n         * Interceptors get called with http response object.\n         * The function is free to modify the response object or create a new one.\n         * The function needs to return the response object directly,\n         * or as a promise containing the response or a new response object.\n         * @alias response\n         * @memberof core.http.lpCoreHttpInterceptor\n         * @param response {Object} HTTP response\n         * @returns {Object} Modified response\n         */\n        function responseInterceptor(response) {\n            // not modified\n            return response || $q.when(response);\n        }\n\n        /**\n         * Interceptor gets called when a previous interceptor threw an error or resolved with a rejection.\n         * @alias responseError\n         * @memberof core.http.lpCoreHttpInterceptor\n         * @param responseErr {Object} Response http error\n         * @returns {Object} Modified response error\n         */\n        function responseErrorInterceptor(responseErr) {\n            // Don't handle 404's\n            if (responseErr.status && responseErr.status !== 404) {\n\n                if (typeof responseErr.data !== 'string') {\n                    responseErr.data = responseErr.data || {};\n                }\n                else {\n                    // is string so we should not care for now\n                    // should be an object\n                    responseErr.data = {};\n                }\n                responseErr.data.errors = responseErr.data.errors || [];\n\n                // if endpoint doesn't provide any errors\n                // we create it and add the statusText if any\n                // otherwise 'unknown error message' key\n                var errors = responseErr.data.errors;\n                if (errors.length <= 0) {\n                    errors.push({\n                        code: responseErr.status,\n                        message: responseErr.statusText || 'Unknown error message'\n                    });\n                }\n\n\n                // ignore 403 and 401 for being notifiable\n                if((responseErr.status !== 401 && responseErr.status !== 403)) {\n                    if (isNotifyable(responseErr) ) {\n                        var context = {\n                            contextId: getContextId(responseErr),\n                            messages: responseErr.data.errors\n                        };\n                        return queue.push(context, function retryFunction() {\n                            return $injector.get('$http')(responseErr.config);\n                        });\n                    }\n                }\n            }\n\n            return $q.reject(responseErr);\n        }\n\n        /**\n         * Configuring of responseError interceptor notification behavior.\n         * Widgets have ability to prevent notifications from poping up for certain endpoints.\n         * @memberOf core.http.lpCoreHttpInterceptor\n         * @param {Object} params - Configuration of the notifications and retry queue.\n         * @param {Array} params.ignore - Array of urls or regular expression patters responseError interseptor will use to decide whether to show notification or not.\n         * @example Here is the example of how widget can configure interceptor to ignore accounts and debit accounts modules service error, as well as an example of regular expression pattern:\n         *\n         * ```\n         * lpCoreHttpInterceptor.configureNotifications({\n         *     ignore: [\n         *         widget.getPreference('accountsDataSrc'),\n         *         '$(servicesPath)/services/rest/v1/debit-accounts',\n         *         /services\\/profile\\/.+?/\n         *     ]\n         * });\n         * ```\n         *\n         * Ignore array can contain of simple URL strings or regular expression patterns. Placeholders like `$(servicesPath)` and `$(contextRoot)` are substituted automatically.\n         */\n        function configureNotifications(params) {\n            if (params.ignore) {\n                params.ignore = params.ignore.map(function(pattern) {\n                    return pattern instanceof RegExp ? pattern : utils.resolvePortalPlaceholders(pattern);\n                });\n                ignoreList = ignoreList.concat(params.ignore);\n            }\n        }\n\n        return {\n            configureNotifications: configureNotifications,\n            request: requestInterceptor,\n            requestError: requestErrorInterceptor,\n            response: responseInterceptor,\n            responseError: responseErrorInterceptor\n        };\n    };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./scripts/modules/http/httpInterceptor.js\n// module id = 28\n// module chunks = 0","/**\n * This module is responsible for internationalisation of all Launchpad widgets.\n *\n * #####Configuration\n *\n * External settings that are passed to it are:\n *\n * - `locale` – <a href=\"http://www.w3.org/TR/html401/struct/dirlang.html#h-8.1.1\">Language code</a>.\n * Read from the lang attribute of html tag of the page.\n * If lang attribute is not defined, fallbacks to browser's default language.\n * You can change locale on the fly by publishing `lpCoreI18nUtils.LOCALE_CHANGE_EVENT`\n *\n * - `path` – Path where common translation files and angular locale files are stored.\n * Default path is `$(contextRoot)/static/launchpad/modules/config/i18n`\n *\n * - `mergedFiles` – Used to determine if translation files are merged\n * into one (one common and one per widget) or every language is separated in it's own file.\n * Default value is `true` (files are merged)\n *\n * Backend is responsible for determining the right locale and printing it as a value of `html.lang` attribute.\n * It is doing so in the following order:\n *\n * 1. If present, then return launchpad user(party) preference `lpLocale`.\n * 2. If present, then return page preference `lpLocale`.\n * 3. If present, then return portal preference `lpLocale`.\n * 4. If present, then return value of `launchpad.defaultLocale` defined in `backbase.properties`.\n *\n * To change the `path` and `mergedFiles` settings, create i18n object with those keys\n * on global window.launchpad object, for example:\n *\n * ```\n * window.launchpad = {\n *   i18n: {\n *     path: 'bower_components/config/i18n',\n *     mergedFiles: false\n *   }\n * }\n * ```\n *\n * Path to <a href=\"https://github.com/angular/angular.js/tree/master/src/ngLocale\" target=\"_blank\">angular locale files</a>\n * is built like: `path + '/ng-locale/angular-locale_{locale}.js'`,\n * where `{locale}` is replaced with current locale string.\n *\n * Every Launchpad widgets contains property `locale` (accessible in Portal Manager).\n * This property is used just to enable/disable i18n support.\n * If there is no value, widget will not be initialized for i18n support.\n * Any value will enable i18n but it is never used internally.\n *\n * #####Translation files\n *\n * Widget translation strings are defined inside `locale/all.json` in widget's directory\n * and in `i18n.path/common.json` file. This applies when `mergedFiles` setting is set to true,\n * otherwise, each laguage will have it's own file in the same location.\n * Translation file can look like this:\n *\n * ```\n * {\n *   \"nl-NL\": {\n *     \"Enrol for Estatements\": \"Schrijf je in voor eStatements\",\n *     \"Statement as of\": \"Verklaring als van\"\n *   },\n *\n *   \"ru-RU\": {\n *     \"Enrol for Estatements\": \"Получать отчеты\",\n *     \"Statement as of\": \"Отчет за\"\n *   }\n * }\n * ```\n *\n * #####Translation\n * To translate string used in Launchpad Widget html template, use angular tranlate filter:\n *\n * ```\n * <span>{{'Statement as of'|translate}}</span>\n * ```\n *\n * or lp-i18n directive described below.\n *\n * #####Enable i18n Language Switching in the UI\n * To Enable i18n Language Switching in the UI, follow the below instructions to add a preference to a widget.\n * 1. Open the PortalManager.\n * 2. Navigate the Explorer to `Portals > Retail-banking > Items > Home`.\n * 3. Select \"widget-navbar-advanced..\".\n * 4. Select the \"Properties\" tab.\n * 5. Activate the add property button \"+\".\n * 6. In the \"Create Preference\" modal set.\n *  1. Name to locales.\n *  2. Label to locales.\n *  3. Value to en-US,nl-NL  (comma separated list of languages).\n * 7. Click save and now in the Client Portal a language menu should appear.\n *\n * Note: the language preference is not saved in a session.\n *\n *\n * @copyright Backbase B.V.\n * @author Backbase R&D - Amsterdam - New York\n *\n * #####References</h4>\n *\n * - <a target=\"_blank\" href=\"http://angular-translate.github.io/\">\n *       http://angular-translate.github.io/</a>\n * - <a target=\"_blank\" href=\"https://hacks.mozilla.org/2014/12/introducing-the-javascript-internationalization-api\">\n *       https://hacks.mozilla.org/2014/12/introducing-the-javascript-internationalization-api</a>\n *\n * @name i18n\n * @memberof core\n * @ngModule\n */\n\ndefine(function (require, exports, module) {\n    'use strict';\n\n    module.name = 'core.i18n';\n\n    var base = require('base');\n    // 3rd party modules\n    require('angular-translate');\n    require('angular-dynamic-locale');\n\n    // some core modules\n    var utils = require('../utils/main');\n    var bus = require('../bus/main');\n    var error = require('../error/main');\n    var cache = require('../cache/main');\n\n    var deps = [\n        'pascalprecht.translate',\n        'tmh.dynamicLocale',\n        utils.name,\n        error.name,\n        cache.name,\n        bus.name\n    ];\n\n    // @ngInject\n    function run(lpCoreBus, lpCoreI18n, lpCoreI18nUtils) {\n\n        lpCoreBus.subscribe(lpCoreI18nUtils.LOCALE_CHANGE_EVENT, function (locale) {\n            lpCoreI18n.setLocale(locale);\n        });\n    }\n\n    module.exports = base.createModule(module.name, deps)\n        .value('lpI18nCommonTranslation') // common translations stored in loader factory\n        .constant(require('./utils')) // lpCoreI18nUtils\n        .factory(require('./loader')) // lpCoreI18nLoader\n        .provider(require('./i18n')) // lpCoreI18n\n        .filter(require('./filters')) // currencySymbol\n        .directive(require('./directives')) // lp-i18n & lp-i18n-switch\n        .factory(require('./_migration/utils')) // exposes i18nUtils.loadMessages\n        .directive(require('./_migration/lp-message')) // contains lp-message directive\n        .run(run);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./scripts/modules/i18n/main.js\n// module id = 29\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_30__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"angular-translate\"\n// module id = 30\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_31__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"angular-dynamic-locale\"\n// module id = 31\n// module chunks = 0","define(function (require, exports, module) {\n    'use strict';\n\n    var CURRENCY_MAP = {\n        'ALL': 'Lek',\n        'AFN': '؋',\n        'ARS': '$',\n        'AWG': 'ƒ',\n        'AUD': '$',\n        'AZN': 'ман',\n        'BSD': '$',\n        'BBD': '$',\n        'BYR': 'p.',\n        'BZD': 'BZ$',\n        'BMD': '$',\n        'BOB': '$b',\n        'BAM': 'KM',\n        'BWP': 'P',\n        'BGN': 'лв',\n        'BRL': 'R$',\n        'BND': '$',\n        'KHR': '៛',\n        'CAD': '$',\n        'KYD': '$',\n        'CLP': '$',\n        'CNY': '¥',\n        'COP': '$',\n        'CRC': '₡',\n        'HRK': 'kn',\n        'CUP': '₱',\n        'CZK': 'Kč',\n        'DKK': 'kr',\n        'DOP': 'RD$',\n        'XCD': '$',\n        'EGP': '£',\n        'SVC': '$',\n        'EEK': 'kr',\n        'EUR': '€',\n        'FKP': '£',\n        'FJD': '$',\n        'GHC': '¢',\n        'GIP': '£',\n        'GTQ': 'Q',\n        'GGP': '£',\n        'GYD': '',\n        'HNL': 'L',\n        'HKD': '$',\n        'HUF': 'Ft',\n        'ISK': 'kr',\n        'IDR': 'Rp',\n        'IRR': '﷼',\n        'IMP': '£',\n        'ILS': '₪',\n        'JMD': 'J$',\n        'JPY': '¥',\n        'JEP': '£',\n        'KZT': 'лв',\n        'KGS': 'лв',\n        'LAK': '₭',\n        'LVL': 'Ls',\n        'LBP': '£',\n        'LRD': '$',\n        'LTL': 'Lt',\n        'MKD': 'ден',\n        'MYR': 'RM',\n        'MUR': '₨',\n        'MXN': '$',\n        'MNT': '₮',\n        'MZN': 'MT',\n        'NAD': '$',\n        'NPR': '₨',\n        'ANG': 'ƒ',\n        'NZD': '$',\n        'NIO': 'C$',\n        'NGN': '₦',\n        'KPW': '₩',\n        'NOK': 'kr',\n        'OMR': '﷼',\n        'PKR': '₨',\n        'PAB': 'B/.',\n        'PYG': 'Gs',\n        'PEN': 'S/.',\n        'PHP': '₱',\n        'PLN': 'zł',\n        'QAR': '﷼',\n        'RON': 'lei',\n        'RUB': 'руб',\n        'SHP': '£',\n        'SAR': '﷼',\n        'RSD': 'Дин.',\n        'SCR': '₨',\n        'SGD': '$',\n        'SBD': '$',\n        'SOS': 'S',\n        'ZAR': 'R',\n        'KRW': '₩',\n        'LKR': '₨',\n        'SEK': 'kr',\n        'CHF': 'CHF',\n        'SRD': '$',\n        'SYP': '£',\n        'TWD': 'NT$',\n        'THB': '฿',\n        'TTD': 'TT$',\n        'TRL': '₤',\n        'TVD': '$',\n        'UAH': '₴',\n        'GBP': '£',\n        'USD': '$',\n        'UYU': '$U',\n        'UZS': 'лв',\n        'VEF': 'Bs',\n        'VND': '₫',\n        'YER': '﷼',\n        'ZWD': 'Z$'\n    };\n\n    /**\n     * NOTE: Doesn't work with angular Dependecy Injection\n     * @memberof core.i18n\n     * @ngConstant\n     */\n    exports.lpCoreI18nUtils = {\n        WIDGET_TRANSLATION_PREFERENCE: 'i18nEndPoint',\n        /**\n         * Hash containing currency symbols for every currency code\n         * @example:\n         * ```\n         * lpCoreI18nUtils.CURRENCY_MAP.USD // \"$\"\n         * ```\n         */\n        CURRENCY_MAP: CURRENCY_MAP,\n        DEFAULT_TRANSLATIONS_PATH: '/locale/',\n\n        /**\n         * Name of the event triggered when locale data is loaded\n         */\n        COMMON_I18N_LOAD_EVENT: 'lpi18n:data:load',\n\n        /**\n         * Name of the event triggered when locale string changes\n         *\n         * @example\n         * ```\n         * lpCoreBus.subscribe(lpCoreI18nUtils.LOCALE_CHANGE_EVENT, function(locale) {\n         *   alert(locale); // alerts current locale\n         * });\n         * lpCoreBus.publish(lpCoreI18nUtils.LOCALE_CHANGE_EVENT, 'nl-NL'); // changes the language of all launchpad widgets\n         * ```\n         */\n        LOCALE_CHANGE_EVENT: 'lpi18n:locale:change',\n        ALL_LOCALES_FILE: 'all.json',\n\n        /**\n         * Normalizes locale string, returning object containing normalized string and external flag.\n         * @memberof core.i18n.lpCoreI18nUtils\n         * @param   {String} locale to normalize, e.g. 'en-us' or 'en_US' or 'EN-US' becomes 'en-US'\n         * @returns {Object} locale object with the external flag\n         */\n        parseLocale: function (locale) {\n            // hardcode for 'en' -> 'en-US'\n            if (locale === 'en') { return 'en-US'; }\n\n            if (typeof locale === 'string') {\n                var parts = locale.split(/[-_]/);\n                if (!parts[1]) {\n                    parts.push(parts[0]); // nl -> nl-NL, ru -> ru-RU etc.\n                }\n                parts[0] = parts[0].toLowerCase();\n                parts[1] = parts[1].toUpperCase();\n\n                return parts.join('-');\n            }\n            return '';\n        }\n    };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./scripts/modules/i18n/utils.js\n// module id = 32\n// module chunks = 0","define(function(require, exports, module) {\n    'use strict';\n\n    // @ngInject\n    exports.lpCoreI18nLoader = function(lpCoreUtils, lpCoreI18nUtils, $q, $http, lpI18nCommonTranslation, lpCoreCachePromise, lpCoreBus, lpCoreError) {\n            /**\n             * Returns either cached promise or new one.\n             * @param {String} url - Url of the translation file.\n             * @returns {Object} Promise object\n             */\n            function getPromise(url) {\n                return lpCoreCachePromise({\n                    key: url,\n                    promise: function() {\n                        return $http.get(url);\n                    }\n                });\n            }\n            /**\n             * Main i18n loader\n             * @param {Object} options - Loader options\n             * @param {String} options.key - Locale string, added by angular-translate automatically\n             * @param {String} options.widgetUrl - Url of the widget\n             * @param {String} options.i18nPath - Path where translation files are stored\n             * @param {Boolean} options.merged - If false, load (key).json, otherwise load ALL_LOCALES_FILE\n             * @returns {Object} Promise object\n             */\n            return function (options) {\n                // widget translation path\n                var wUrl = options.widgetUrl + lpCoreI18nUtils.DEFAULT_TRANSLATIONS_PATH;\n                wUrl = lpCoreUtils.trimRight(wUrl, '/') + '/' + (options.merged ? lpCoreI18nUtils.ALL_LOCALES_FILE : (options.key + '.json'));\n                // common translations path\n                var cUrl = options.i18nPath + '/' + (options.merged ? 'common.json' : (options.key + '.json'));\n\n                return $q.all({\n                    common: getPromise(cUrl),\n                    widget: getPromise(wUrl)\n                }).then(function(res) {\n                    var data;\n                    if (options.merged) {\n                        // if all translations are in the same file, set them only once\n                        if (!lpI18nCommonTranslation) {\n                            lpI18nCommonTranslation = res.common.data; // TODO: doesn't work with [key], check for bug in deck container\n                            lpCoreBus.publish(lpCoreI18nUtils.COMMON_I18N_LOAD_EVENT, lpI18nCommonTranslation);\n                        }\n                        data = lpCoreUtils.extend({}, res.common.data[options.key], res.widget.data[options.key]);\n                    } else {\n                        lpI18nCommonTranslation = res.common.data;\n                        lpCoreBus.publish(lpCoreI18nUtils.COMMON_I18N_LOAD_EVENT, lpI18nCommonTranslation);\n\n                        data = lpCoreUtils.extend({}, res.common.data, res.widget.data);\n                    }\n\n                    return data;\n                }).catch(function(err) {\n                    lpCoreError.captureException(err);\n                });\n            };\n\n    };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./scripts/modules/i18n/loader.js\n// module id = 33\n// module chunks = 0","define(function(require, exports, module) {\n    'use strict';\n\n    // when triggering LOCALE_CHANGE event in the run phase, do it only once\n    var once = true;\n    var options;\n\tvar sLocales = ['en-US', 'en-IN'];\n\n    function supportedLocale(valLocale) {\n\t\tvar supportLocale = valLocale;\n\t\tif (!(sLocales.indexOf(supportLocale) !== -1)) {\n\t\t\tsupportLocale = 'en-US';\n\t\t}\n\t\treturn supportLocale;\n    }\n\n    function getHtmlAttr(name) {\n        return document.getElementsByTagName('html')[0].getAttribute(name);\n    }\n\n    /**\n     * @memberof core.i18n\n     * @ngProvider\n     * @ngInject\n     */\n    exports.lpCoreI18n = function(lpCoreUtils, $translateProvider, lpCoreI18nUtils, tmhDynamicLocaleProvider) {\n\n        // runs only once\n        if (!options) {\n            var lp = window.launchpad;\n\n            options = {\n                locale: supportedLocale(lpCoreI18nUtils.parseLocale(\n                    getHtmlAttr('lang') || getHtmlAttr('xml:lang') ||\n                    navigator.language || navigator.browserLanguage || navigator.systemLanguage || navigator.userLanguage\n                )),\n                merged: true,\n                i18nPath: lpCoreUtils.resolvePortalPlaceholders(\n                    lp ? '$(contextRoot)/static/launchpad/modules/config/i18n' : '/bower_components/config/i18n'\n                )\n            };\n\n            if (lp && lp.i18n) {\n                options.merged = lp.i18n.mergedFiles;\n                options.i18nPath = lpCoreUtils.resolvePortalPlaceholders(lp.i18n.path);\n            }\n        }\n\n        tmhDynamicLocaleProvider.localeLocationPattern(options.i18nPath + '/ng-locale/angular-locale_{{locale}}.js');\n        $translateProvider.preferredLanguage(options.locale);\n\n        /**\n         * Set up i18n configuration based on widget instance\n         * @param {Object} widget instance widget\n         */\n        this.useWidgetInstance = function(widgetInstance) {\n            if(lpCoreUtils.isEmpty(widgetInstance.getPreference('locale'))) {\n                return;\n            }\n\n            $translateProvider.useLoader('lpCoreI18nLoader', {\n                i18nPath: options.i18nPath,\n                merged: options.merged,\n                widgetUrl: lpCoreUtils.getWidgetBaseUrl(widgetInstance)\n            });\n        };\n\n        /**\n         * Service i18n\n         * @param   {Function} $filter           Filter in module ng\n         * @param   {Object}   lpCoreI18nLoader  Request static loader provider\n         * @param   {Object}   $translate        ng-translate 3rd party\n         * @param   {Object}   tmhDynamicLocale  Dynamic locale switcher 3rd party\n         * @private\n         * @returns {Object}                     i18n Service\n         * @ngInject\n         */\n        this.$get = function($filter, lpCoreI18nLoader, $translate, tmhDynamicLocale, lpCoreBus) {\n            // Syncing the default locale with Containers\n            // This event should be fired only once, not per each widget\n            // setLocale methods of the widget are subsribed to this event\n            if (once) {\n                setTimeout(function () {\n                    lpCoreBus.publish(lpCoreI18nUtils.LOCALE_CHANGE_EVENT, options.locale);\n                }, 0);\n                once = false;\n            }\n            return {\n                /**\n                 * Changes locale of the widget module.\n                 * @memberof core.i18n.lpCoreI18n\n                 * @param {String} locale Locale string, e.g. 'en-US'\n                 */\n                setLocale: function(locale) {\n                    $translate.use(locale);\n                    tmhDynamicLocale.set(locale.toLowerCase());\n                },\n\n                /**\n                 * Returns proper currency format, using currency filter.\n                 *\n                 * @example\n                 * ```\n                 * lpCoreI18n.formatCurrency(24, 'USD'); // \"$24\"\n                 * ```\n                 *\n                 * @memberof core.i18n.lpCoreI18n\n                 * @param   {Number} amount    Amount\n                 * @param   {String} currency  Currency code\n                 * @returns {String} Formatted string\n                 */\n                formatCurrency: function (amount, currency) {\n                    var symbol = $filter('currencySymbol')(currency);\n                    return $filter('currency')(amount, symbol); // built in ng filter, uses page locale.\n                },\n\n                /**\n                 * Returns localized date format, using date filter\n                 *\n                 * @example\n                 * ```\n                 * lpCoreI18n.formatDate(1288323623006, 'yyyy-MM-dd HH:mm:ss Z'); // \"2010-10-29 05:40:23 +0200\"\n                 * ```\n                 *\n                 * @memberof core.i18n.lpCoreI18n\n                 * @param   {Number} value   Date as Unix timestamp\n                 * @param   {String} format  Format\n                 * @returns {String}\n                 */\n                formatDate: function(value, format) {\n                    return $filter('date')(value, format || 'medium');\n                },\n\n                /**\n                 * Returns a translation instantly from the internal state of loaded translation.\n                 *\n                 * @example\n                 * ```\n                 * lpCoreI18n.instant('Enrol for Estatements'); // \"Schrijf je in voor eStatements\" for locale \"nl-NL\"\n                 * ```\n                 *\n                 * @memberof core.i18n.lpCoreI18n\n                 * @param   {String} string  A string which represents a translation id or array of strings.\n                 * @returns {String}\n                 */\n                instant: function(string) {\n                    return $translate.instant(string);\n                }\n\n            };\n\n        };\n    };\n\n});\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./scripts/modules/i18n/i18n.js\n// module id = 34\n// module chunks = 0","define(function (require, exports, module) {\n    'use strict';\n\n    /**\n     * Renders proper currency symbol.\n     *\n     * @example\n     * ```\n     * <span>{{'JPY'|currencySymbol}}</span>\n     * <span>¥</span>\n     * ```\n     *\n     * @memberof core.i18n\n     * @ngFilter\n     * @ngInject\n     */\n    exports.currencySymbol = function (lpCoreI18nUtils) {\n        return function (currency) {\n            return lpCoreI18nUtils.CURRENCY_MAP[currency] || '';\n        };\n    };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./scripts/modules/i18n/filters.js\n// module id = 35\n// module chunks = 0","define(function (require, exports) {\n    'use strict';\n\n    /**\n     * Use lp-i18n angular directive to translate string used in Launchpad Widget HTML template.\n     *\n     * @example\n     * ```\n     * <span lp-i18n=\"Statement as of\"></span>\n     * ```\n     *\n     * @example\n     * `label`, `placeholder` and `help` attributes inside of `lp-field`, `lp-input`, `lp-text-input`,\n     * `lp-password-input` or `lp-checkbox` directives will also be automatically translated:\n     *\n     * ```\n     * <div lp-field=\"lp-field\" label=\"Enrol for Estatements\"></div>\n     * ```\n     *\n     * @memberof core.i18n\n     * @ngDirective\n     * @ngInject\n     */\n    exports.lpI18n = function ($compile) {\n        function link(scope, el, attr) {\n            attr.$observe('lpI18n', function(val) {\n                el.attr('translate', val);\n                //need to prevent cycle loop on observable\n                el.removeAttr('lp-i18n');\n                $compile(el)(scope);\n            });\n        }\n\n        return {\n            restrict: 'AE',\n            link: link,\n            // These 2 options prevent additional other directives recompilations\n            // i.e. ngClick would twice, ngRepeat would render infinite loop, etc.\n            // Need to set priority higher then any other directive.\n            priority: Number.MAX_VALUE,\n            terminal: true\n        };\n    };\n\n    /**\n     * @memberof core.i18n\n     * @ngDirective\n     * @ngInject\n     */\n    exports.lpI18nSwitch = function (lpCoreBus, lpCoreI18nUtils) {\n        function link(scope, el, attr) {\n            var locales = attr.lpI18nSwitch;\n            if (!locales) { return; }\n            locales = locales.split(',');\n            var id;\n\n            lpCoreBus.subscribe(lpCoreI18nUtils.LOCALE_CHANGE_EVENT, function (locale) {\n                id = locales.indexOf(locale);\n            });\n\n            el.on('click', function (e) {\n                e.preventDefault();\n                id = ++id % locales.length;\n                lpCoreBus.publish(lpCoreI18nUtils.LOCALE_CHANGE_EVENT, locales[id]);\n            });\n        }\n\n        return {\n            template: '<span translate=\"_languageCode\"></span>',\n            restrict: 'AE',\n            link: link\n        };\n    };\n\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./scripts/modules/i18n/directives.js\n// module id = 36\n// module chunks = 0","define(function(require, exports, module) {\n\n    'use strict';\n\n    var $ = require('jquery');\n\n\t// @ngInject\n    exports.i18nUtils = function($http, $q, lpCoreUtils) {\n\n\t\tvar i18nUtils = {};\n\n\t\tvar httpService = {\n\t\t\tgetInstance: function(options) {\n\t\t\t\tvar req = {\n\t\t\t\t\turl: lpCoreUtils.resolvePortalPlaceholders(endpoint),\n\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\tcache: true,\n\t\t\t\t\tdata: {},\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'Accept': 'application/json',\n\t\t\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded;'\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\treturn {\n\t\t\t\t\tread: function() {\n\t\t\t\t\t\treturn $http(req);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t},\n\t\t\tresolvePromise: function(data) {\n\t\t\t\t// Returns an already resolved promise with the `data` value\n\t\t\t\tvar promise = $q.when(data);\n\t\t\t\treturn {\n\t\t\t\t\tsuccess: function(fp) {\n\t\t\t\t\t\tpromise.then(fp);\n\t\t\t\t\t\treturn promise;\n\t\t\t\t\t},\n\t\t\t\t\terror: function(fp) {\n\t\t\t\t\t\tpromise.then(null, fp);\n\t\t\t\t\t\treturn promise;\n\t\t\t\t\t},\n\t\t\t\t\talways: function(fp) {\n\t\t\t\t\t\tpromise['finally'](fp);\n\t\t\t\t\t\treturn promise;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\n\t\ti18nUtils.loadMessages = function(lpWidget, locale, messageSrcPref) {\n\n\t\t\tvar response;\n\t\t\tmessageSrcPref = messageSrcPref || \"messageSrc\";\n\t\t\tvar messageSrc = lpWidget.getPreference(messageSrcPref);\n\t\t\tif(messageSrc) {\n\t\t\t\tvar messagesService = httpService.getInstance({\n\t\t\t\t\tendpoint: messageSrc\n\t\t\t\t});\n\t\t\t\tresponse = messagesService.read();\n\t\t\t} else {\n\t\t\t\tresponse = httpService.resolvePromise({});\n\t\t\t}\n\t\t\treturn response;\n\t\t};\n\n\t\treturn i18nUtils;\n\t};\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./scripts/modules/i18n/_migration/utils.js\n// module id = 37\n// module chunks = 0","define(function(require, exports, module) {\n\n    'use strict';\n\n\t// @ngInject\n\texports.lpMessage = function() {\n\t\treturn {\n\t\t\treplace: false,\n\t\t\trestrict: \"A\",\n\t\t\tscope: {\n\t\t\t\t\"key\": \"=lpMessage\",\n\t\t\t\t\"messages\": \"=lpBundle\"\n\t\t\t},\n\t\t\ttemplate: \"{{value}}\",\n\t\t\tlink: function(scope, element, attrs) {\n\n\t\t\t\tvar insertMessage = function(key, messages) {\n\n\t\t\t\t\tvar value;\n\t\t\t\t\tif(messages && messages.hasOwnProperty(key)) {\n\t\t\t\t\t\tvalue = messages[key];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvalue = \"[\" + key + \"]\";\n\t\t\t\t\t}\n\t\t\t\t\tscope.value = value;\n\t\t\t\t};\n\n\t\t\t\tscope.$watch(\"key\", function(key) {\n\t\t\t\t\tinsertMessage(key, scope.messages);\n\t\t\t\t});\n\t\t\t\tscope.$watch(\"messages\", function(messages) {\n\t\t\t\t\tinsertMessage(scope.key, messages);\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t};\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./scripts/modules/i18n/_migration/lp-message.js\n// module id = 38\n// module chunks = 0","/**\n * NOT IMPLEMENTED\n * @name store\n * @memberof core\n * @ngModule\n */\n\ndefine(function(require, exports, module) {\n    'use strict';\n\n    module.name = 'core.store';\n    var base = require('base');\n    var deps = [];\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/Storage\n    function storeProvider() {\n        this.$get = function() {\n            var API = {};\n\n            /**\n             * When passed a key name, will return the value stored in that key.\n             * @param   {String} key  Name of the key you want to retrieve.\n             * @returns {*} Value stored in the key, if it is not present it will return null.\n             */\n            API.getItem = function(key) {};\n\n            /**\n             * When passed a key name and value, will add that key to the storage, or update\n             * that key's value if it already exists.\n             *\n             * @param {String} key Name of the key you want to create/update.\n             * @param {*} value Value you want to give the key you are creating/updating.\n             */\n            API.setItem = function(key, value) {};\n\n            /**\n             * When passed a key name, will remove the value stored in the key\n             * and the key itself\n             *\n             * @param  {String} key Name of the key woy want to remove.\n             */\n            API.removeItem = function(key) {};\n\n            /**\n             * Will empty all keys out of the storage.\n             */\n            API.reset = function() {};\n\n            return API;\n        };\n    }\n\n    module.exports = base.createModule( module.name, deps )\n        .provider( 'lpCoreStore', storeProvider );\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./scripts/modules/store/main.js\n// module id = 39\n// module chunks = 0","/**\n * Launchpad Template Module\n *\n * @copyright Backbase B.V.\n * @author Backbase R&D - Amsterdam - New York\n *\n * @name template\n * @memberof core\n * @ngModule\n */\n\ndefine(function(require, exports, module) {\n\n    'use strict';\n\n    module.name = 'core.template';\n\n    var base = require('base');\n\n    // external module deps\n    var deps = [];\n\n    // providers holder\n    var providers = {};\n\n    // directives holder\n    var directives = {};\n\n    // =============================\n    // Providers\n    // =============================\n\n    /**\n     * Helper service used by lpTemplate directive.\n     *\n     * @alias lpCoreTemplate\n     * @memberof core.template\n     * @ngProvider\n     * @ngInject\n     */\n    providers.lpCoreTemplate = function(lpCoreUtils) {\n\n        var defaults = {};\n\n        var API = {};\n\n        /**\n         * Set provider options.\n         * @param {Object} options Default options for lpCoreTemplate service.\n         * @returns {Object} this templateProvider instance.\n         */\n        this.useWidgetInstance = function(widgetInstance) {\n            // Create a map templateLKey -> path\n            var templates = {};\n            var path = lpCoreUtils.getWidgetBaseUrl(widgetInstance);\n\n            if (widgetInstance.model && widgetInstance.model.preferences && widgetInstance.model.preferences.array) {\n                templates = lpCoreUtils.reduce(widgetInstance.model.preferences.array, function (prev, curr) {\n                    if (curr.name.indexOf('widgetTemplate_') > -1) {\n                        prev[curr.name.replace('widgetTemplate_', '')] = curr.value;\n                    }\n                    return prev;\n                }, {});\n            }\n\n            if (path) {\n                path = lpCoreUtils.trimRight(path, '/');\n            }\n\n            lpCoreUtils.extend(defaults, {\n                path: path,\n                templates: templates\n            });\n        };\n\n        // Provider Template instance\n        // @ngInject\n        this.$get = function(lpCoreConfiguration) {\n            /**\n             * Provider API\n             * @memberof core.template.lpCoreTemplate\n             * @class\n             */\n            API = function(options) {\n                this.options = options;\n\n                // Initialise defaults.\n                lpCoreUtils.defaults(\n                    this.options,\n                    {\n                        // Default template path is the ABS path from config.\n                        path: lpCoreConfiguration.getAbsPath()\n                    }\n                );\n            };\n\n            /**\n             * get provider configuration\n             * @returns {Object} configuration option\n             */\n            API.prototype.getOptions = function() {\n                return this.options;\n            };\n\n            /**\n             * Get absolute template path.\n             * @returns {String}\n             */\n            API.prototype.getOptionsPath = function() {\n                return this.options.path;\n            };\n\n            /**\n             * Resolve template ID\n             *\n             * @param   {String}  id\n             * @returns {String}\n             */\n            API.prototype.getFullPath = function(id) {\n                var path = this.getOptionsPath();\n                if (path === '/') {\n                    return path + id;\n                }\n                else {\n                    return [path, id].join('/');\n                }\n            };\n\n            /**\n             * Resolve directive paths\n             * @param {String} src\n             * @param {String} name\n             * @return {String} resolvedPath\n             */\n            API.prototype.resolvePath = function(src, name){\n                var resolvedPath,\n                    templateKey,\n                    customTemplate;\n\n                // If attribute \"name\" is provided take it as template key otherwise try to extract it from template path\n                if (name) {\n                    templateKey = name;\n                }\n                else {\n                    var match = src.match(/(?:^|\\/)([^\\/]+?)\\.html$/);\n                    templateKey = match && match[1];\n                }\n\n                if (templateKey && this.options.templates[templateKey]) {\n\n                    customTemplate = this.options.templates[templateKey];\n\n                    if (/^https?:\\/\\//.test(customTemplate)) {\n                        resolvedPath = customTemplate;\n                    }\n                    else {\n                        resolvedPath = this.getFullPath(customTemplate);\n                    }\n                }\n                else {\n                    resolvedPath = this.getFullPath(src);\n                }\n\n                return resolvedPath;\n            };\n\n            return new API(defaults);\n        };\n    };\n\n    // =============================\n    // Directives\n    // =============================\n\n    /**\n     * Wrapper around [ngInclude][1] directive. Fetches, compiles and includes an external HTML fragment.\n     *\n     * ##### Attributes\n     *\n     * ###### src\n     *\n     * lpTemplate uses `src` attribute as template path. The value of the attribute should be valid Angular expression. For static paths string literal should be used.\n     *\n     * If `src` is not provided `lp-template` attribute is used.\n     *\n     * Below two examples using string literals are equivalent:\n     *\n     * ```\n     * <lp-template src=\"'templates/accounts.html'\"></lp-template>\n     * <div lp-template=\"'template/accounts.html'\"></div>\n     * ```\n     *\n     * Template path could be configured in controller, in this case quotes are not needed:\n     *\n     * ```\n     * <lp-template src=\"templates.iban\"></lp-template>\n     * ```\n     *\n     * ###### name\n     *\n     * `lpTemplate` can also accept optional argument `name`. If provided, it is used for identifing template for customization with template path property. See next section for details.\n     *\n     * If `name` attribute is missing (in most cases) then template key is extracted from resolved template path as substring between last `/` and before `.html` strings. For example, if template path (result of evaluation of the expression for src) is `templates/accounts-header.html` then corresponding template key is `accounts-header`.\n     *\n     * ##### Template keys\n     *\n     * `lpTemplate` directive uses unique identifiers in order to provide a way to overwrite template path with custom preference. Special proprty name must conform the following format:\n     *\n     * ```\n     * widgetTemplate_{template key}\n     * ```\n     *\n     * Every widget that uses `lpTemplate` and allows template cutomization should describe template keys it provides.\n     *\n     * In above example with accounts-header key corresponding property would be `widgetTemplate_accounts-header`.\n     *\n     * [1]: https://docs.angularjs.org/api/ng/directive/ngInclude\n     *\n     * @alias lpTemplate\n     * @memberof core.template\n     * @ngDirective\n     * @ngInject\n     */\n    directives.lpTemplate = function($compile, lpCoreTemplate, lpCoreUtils) {\n\n        /**\n         * @memberof core.template.lpTemplate\n         * @param {Object} scope\n         * @param {Object} attrs\n         * @returns {String} Angular html template\n         */\n        function getTemplate(scope, attrs, callback) {\n\n            var srcExp = decodeURIComponent(attrs.lpTemplate || attrs.src),\n                resolvedPath;\n\n            scope.$watch(srcExp, function(src) {\n\n                if (!src) {\n\n                    // For backward compatibility\n                    // If it's \"undefined\" but looks like template path with html extension then skip it in this digest\n                    if (src === undefined && !/\\.html$/.test(srcExp)) {\n                        return callback();\n                    }\n\n                    // This is likely deprecated old syntax just use this path as is\n                    lpCoreUtils.deprecate('Template expression \"' + srcExp + '\" is invalid and evaluated to \"' + src + '\". Raw path is used as is. See LPES-4017 for details.');\n                    src = srcExp;\n                }\n\n                resolvedPath = lpCoreTemplate.resolvePath(src, attrs.name);\n\n                callback('<div class=\"ng-transclude-node\"></div><div ng-include src=\"\\'' + resolvedPath + '\\'\"></div>');\n\n            });\n        }\n\n        // Directive configuration\n        return {\n            restrict: 'AE',\n            transclude: true,\n            priority: Number.MAX_VALUE,\n            link: function(scope, element, attrs, controller, $transclude) {\n\n                getTemplate(scope, attrs, function(template) {\n\n                    if (template) {\n                        element.html(template).show();\n\n                        // manually transclude content\n                        $transclude(function(clone) {\n                            element.find('.ng-transclude-node').html(clone);\n                        });\n\n                        $compile(element.contents())(scope);\n                    }\n                });\n            }\n        };\n    };\n\n    module.exports = base.createModule(module.name, deps)\n        .provider(providers)\n        .directive(directives);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./scripts/modules/template/main.js\n// module id = 40\n// module chunks = 0","/**\n * Configures\n * <a href=\"https://docs.google.com/document/d/1BtDNCvYegmyzel4YPBFNxJaUZ2ywYUeBbzkLB4LpQzM/edit\">updating</a>\n * widgets' models depending on other widgets actions.\n *\n * @copyright Backbase B.V.\n * @author Backbase R&D - Amsterdam - New York\n *\n * @name update\n * @memberof core\n * @ngModule\n */\n\ndefine(function (require, exports, module) {\n    'use strict';\n\n    module.name = 'core.update';\n\n    var base = require('base');\n    // core modules\n    var utils = require('../utils/main');\n\n    var deps = [\n        utils.name\n    ];\n\n    module.exports = base.createModule(module.name, deps)\n        .provider(require('./providers'));\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./scripts/modules/update/main.js\n// module id = 41\n// module chunks = 0","/*global define*/\ndefine(function (require, exports) {\n    'use strict';\n\n    // load config list of relations\n    var config = require('./config');\n    var utils = require('base').utils;\n\n    // main container for subscribers\n    var listeners = {};\n\n    /**\n     *\n     * @memberof core.update\n     * @ngProvider\n     * @ngInject\n     */\n    exports.lpCoreUpdate = function () {\n\n        // @ngInject\n        this.$get = function () {\n\n            /**\n             * Very rough check for the same callbacks already added to the queue\n             *\n             * @param list\n             * @param obj\n             * @returns {Boolean}\n             * @private\n             */\n            var checkSameObjectEnlisted = function (list, obj) {\n                var res = false;\n\n                if (!utils.isArray(list)) { return res; }\n\n                list.forEach(function (o) {\n                    if (o === obj) { res = true; }\n                });\n\n                return res;\n            };\n\n            /**\n             * Get the list of all queues we should apply for a particular name\n             *\n             * @param name\n             * @returns {*}\n             * @private\n             */\n            var getList = function (name) {\n                var list, aux, main = 'actions', deps = 'deps';\n\n                if (!name || !(config.hasOwnProperty(main)) || !(config.hasOwnProperty(deps))) { return false; }\n\n                list = config[main][name] || [];\n                aux = config[deps][name] || [];\n\n                return utils.chain(list).union(aux).uniq().value();\n            };\n\n            /**\n             * Invoke all callbacks for a single queue\n             *\n             * @param name\n             * @private\n             */\n            var invokeSingleQueue = function (name) {\n\n                var queue = listeners[name];\n                if (!queue || !utils.isArray(queue) || queue.length < 1) { return; }\n\n                queue.forEach(function (callback) {\n                    try {\n                        callback();\n                    } catch (error) {\n                        // TODO: lpCoreError.captureException(error);\n                        throw new Error(error);\n                    }\n                });\n            };\n\n            /**\n             * Go through the list of queues and initiate invoking\n             *\n             * @param list\n             * @private\n             */\n            var invokeQueues = function (list) {\n                if (!list || !utils.isArray(list) || list.length < 1) { return; }\n\n                list.forEach(function (name) {\n                    invokeSingleQueue(name);\n                });\n            };\n\n            /**\n             * Add listener to proper widget's queue\n             *\n             * @example\n             * Subscribing at an update event within the widget's controller:\n             *\n             * ```\n             * var invoker = function() {\n             *   ctrl.widgetModel.load();\n             * };\n             *\n             * lpCoreUpdate.subscribe(widget.name, invoker);\n             * ```\n             *\n             * @memberof core.update.lpCoreUpdate\n             * @param   {String}    name\n             * @param   {Function}  callback\n             * @returns {Undefined}\n             */\n            var subscribe = function (name, callback) {\n                if (!name || typeof callback !== 'function') { return; }\n\n                // create new queue (if needed)\n                if (!listeners.hasOwnProperty(name)) { listeners[name] = []; }\n\n                if (!checkSameObjectEnlisted(listeners[name], callback)) {\n                    listeners[name].push(callback);\n                }\n            };\n\n            /**\n             * Invoke callbacks for this particular event name\n             *\n             * @example\n             * Triggering update event:\n             *\n             * ```\n             * var eventName = widget.name;\n             * lpCoreUpdate.trigger(eventName);\n             * ```\n             *\n             * @memberof core.update.lpCoreUpdate\n             * @param   {String}    name\n             * @returns {Undefined}\n             */\n            var trigger = function (name) {\n                if (name) { invokeQueues(getList(name)); }\n            };\n\n            return {\n                subscribe: subscribe,/* (name, callback) */\n                trigger: trigger /* (sourceEventName) */\n            };\n\n        };\n    };\n\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./scripts/modules/update/providers.js\n// module id = 42\n// module chunks = 0","define(function (require, exports, module) {\n    'use strict';\n\n    module.exports = {\n        'actions': {\n            'newPaymentOrderInitiated': ['reviewTransfer']\n        },\n\n        'deps': {\n            'transactions': ['accounts']\n        }\n    };\n\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./scripts/modules/update/config.js\n// module id = 43\n// module chunks = 0","/**\n * Core widget module provides services lpWidget and value widget into application\n * @name widget\n * @memberof core\n * @ngModule\n */\n\ndefine(function(require, exports, module) {\n    'use strict';\n\n    module.name = 'core.widget';\n    var base = require('base');\n    var deps = [];\n\n    module.exports = base.createModule(module.name, deps)\n        .provider(require('./providers'));\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./scripts/modules/widget/main.js\n// module id = 44\n// module chunks = 0","define(function(require, exports, module) {\n    'use strict';\n\n\t/**\n     * lpCoreWidget provider\n     * @return {object} angular provider\n     * @ngInject\n     */\n\texports.lpCoreWidget = function widgetProvider($provide, lpCoreUtils) {\n        var widget;\n\n        this.useWidgetInstance = function(widgetInstance) {\n            widget = widgetInstance;\n\n            /**\n             * @method addResolvedPreference get normalized property from widget model\n             * @param {String} propName\n             * @returns {Object} value\n             */\n            widgetInstance.getResolvedPreference = function(propName) {\n                var val = this.getPreference(propName);\n                return lpCoreUtils.resolvePortalPlaceholders(val);\n            };\n\n            $provide.provider('lpWidget', function() {\n                /**\n                 * @returns {Object} widgetInstance\n                 */\n                this.getInstance = this.$get = function() {\n                    return widgetInstance;\n                };\n            });\n\n            $provide.value('widget', widget); // will be deprecated\n        };\n\n        this.$get = this.getInstance = function() {\n            return widget;\n        };\n    };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./scripts/modules/widget/providers.js\n// module id = 45\n// module chunks = 0","define(function (require, exports, module) {\n    'use strict';\n\n    var base = require('base');\n\n    var deps = [\n    ];\n\n    module.exports = base.ng.module('common', deps)\n        .constant('httpServicesConfig', {\n            defaultConfig: {\n                cacheTimeout: 1000,\n                xhrTimeout: 5000\n            }\n        })\n        .factory(require('../../_deprecated/scripts/form-data-persistence'))\n        .service(require('../../_deprecated/scripts/preference-service'))\n        .service(require('../../_deprecated/scripts/profile-detail-service'))\n        .service(require('./p2p-service'))\n        .service(require('./rest-services'));\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./scripts/_migration/common/common-module.js\n// module id = 46\n// module chunks = 0","define(function(require, exports, module) {\n\n    'use strict';\n\n    var base = require('base');\n    var utils = base.utils;\n\n    // @ngInject\n    exports.formDataPersistence = function() {\n\n        function hasStorage() {\n            var uid = new Date().getTime().toString();\n            var storage;\n            var result;\n            try {\n                (storage = window.localStorage).setItem(uid, uid);\n                result = storage.getItem(uid) === uid;\n                storage.removeItem(uid);\n                return result && storage;\n            } catch (err) {\n                base.log.warn(err);\n            }\n        }\n\n        /**\n         * Creates a new FormDataPersistenceController instance\n         * @constructor\n         */\n        var FormDataPersistenceController = function() {\n        };\n\n        /**\n         * Save the form data in session storage with the form name as the key\n         * @param formName a string value of the form/widget name\n         * @param a JS object representing the values of the form\n         */\n        FormDataPersistenceController.prototype.saveFormData = function(formName, formObject) {\n            if (hasStorage()) {\n\t\tvar stringifiedFormObject = JSON.stringify(formObject);\n\t\twindow.sessionStorage.setItem(formName, stringifiedFormObject);\n            }\n        };\n\n        /**\n         * Removes saved data from session storage by form name\n         * @param formName the name of the widget form to remove\n         */\n        FormDataPersistenceController.prototype.removeFormData = function(formName) {\n            if (hasStorage()) {\n                window.sessionStorage.removeItem(formName);\n            }\n        };\n\n        /**\n         * Return the stored string of the form object\n         * @param widget form name\n         */\n        FormDataPersistenceController.prototype.getFormData = function(formName) {\n\n            var widgetForm = JSON.parse(window.sessionStorage.getItem(formName));\n\n            var formatObject = function(thisObject) {\n                for (var key in thisObject) {\n                    if (thisObject.hasOwnProperty(key)) {\n                        if (key.toLowerCase().indexOf('date') > -1 && typeof thisObject[key] !== 'boolean') {\n                            var testDate = new Date(thisObject[key]);\n                            //TODO: investigate better approach\n                            if (!isNaN(testDate.getTime())) {\n                                //a valid date\n                                thisObject[key] = testDate;\n                            }\n                        }\n\n                        if (thisObject[key] instanceof Object) {\n                            formatObject(thisObject[key]);\n                        }\n                    }\n                }\n\n                return thisObject;\n            };\n\n            formatObject(widgetForm);\n\n            return widgetForm;\n        };\n\n        /**\n         * Returns a flag if the form is currently saved\n         * @formName the name of the widget form to check\n         */\n        FormDataPersistenceController.prototype.isFormSaved = function(formName) {\n            var saved = window.sessionStorage.getItem(formName);\n            return saved === null ? false : true;\n        };\n\n        return {\n            getInstance: function() {\n                utils.deprecate('formDataPersistence is deprecated. It is now part of new transfer widget.');\n                return new FormDataPersistenceController();\n            }\n        };\n    };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./scripts/_deprecated/scripts/form-data-persistence.js\n// module id = 47\n// module chunks = 0","define(function(require, exports, module) {\n\n    'use strict';\n\n    var utils = require('base').utils;\n\n    // @ngInject\n    exports.PreferenceService = function($http, $filter, lpCoreUtils, lpWidget) {\n\n        utils.deprecate('PreferenceService is deprecated. Use lpUsersPreference in module-users.');\n\n        var preferenceEndpoint = lpWidget.getPreference('preferenceService');\n        var url = lpCoreUtils.resolvePortalPlaceholders(preferenceEndpoint);\n        var headers = {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'Cache-Control': 'no-cache, no-store, must-revalidate',\n            'Pragma': 'no-cache',\n            'Expires': '0'\n        };\n\n        this.read = this.get = function() {\n            return $http.get(url, {\n                headers: headers\n            });\n        };\n\n        this.save = function(field, value) {\n            var data = {};\n            data[field] = value;\n\n            return $http.put(url, lpCoreUtils.buildQueryString(data), {\n                headers: headers\n            });\n        };\n        this.put = function(field, value) {\n            var data = {};\n            data[field] = value;\n\n            return $http.put(url + '/' + field, $filter('json')(data), {\n                headers: headers\n            });\n        };\n    };\n\n\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./scripts/_deprecated/scripts/preference-service.js\n// module id = 48\n// module chunks = 0","define(function(require, exports, module) {\n\n    'use strict';\n\n    var base = require('base');\n    var angular = base.ng;\n    var utils = base.utils;\n    // @ngInject\n    exports.ProfileDetailsService = function($http, lpCoreI18n, lpCoreError) {\n\n        utils.deprecate('ProfileDetailsService is deprecated. Use lpUserDetails in module-users.');\n\n        var defaults = {\n            counterPartyServiceUrl: '$(servicesPath)/services/rest/v1/party-data-management/party'\n        };\n        var ProfileDetailService = this;\n        ProfileDetailService.config = defaults;\n\n        ProfileDetailService.setConfig = function (config){\n            ProfileDetailService.config = angular.extend(defaults, config);\n        };\n\n        function doI18n(profileDetails) {\n            var detailsParsed = [];\n            utils.each(profileDetails, function (value, key) {\n                detailsParsed.push({\n                    key: lpCoreI18n.instant(key),\n                    value: (key === 'dateOfBirth') ? lpCoreI18n.formatDate(value) : lpCoreI18n.instant(value)\n                });\n            });\n            return detailsParsed;\n        }\n\n        // Return data in correct key, value format\n        ProfileDetailService.formatResponse = function (response) {\n            var data = {\n                fullname: [response.firstName, response.lastName].join(' '),\n                details: doI18n(response.details),\n                activities: [],\n                photoUrl: response.photoData\n            };\n\n            if(!data.photoUrl && response.photoUrl){\n                data.photoUrl = utils.decodePhotoUrl(response.photoUrl);\n            }\n\n            // Activities\n            if (response.activities) {\n                if (response.activities.lastLoggedIn) {\n                    data.activities.push({ key: 'Last Logged In', value: lpCoreI18n.formatDate(response.activities.lastLoggedIn, 'medium') });\n                }\n            }\n\n            return data;\n        };\n\n        ProfileDetailService.getData = function () {\n            var url = utils.resolvePortalPlaceholders(ProfileDetailService.config.counterPartyServiceUrl || defaults.counterPartyServiceUrl);\n\n            return $http.get(url, null, {\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/x-www-form-urlencoded;'\n                }\n            });\n        };\n    };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./scripts/_deprecated/scripts/profile-detail-service.js\n// module id = 49\n// module chunks = 0","define(function(require, exports, module) {\n\n    'use strict';\n\n    // @ngInject\n    exports.P2PService = function($http, lpWidget, lpCoreUtils) {\n\n        var enrollmentEndpoint = lpWidget.getPreference('p2pEnrollmentEndpoint');\n\n        var editEmailEndpoint = \"/emails/\";\n\n        enrollmentEndpoint = lpCoreUtils.resolvePortalPlaceholders(lpWidget.getPreference('p2pEnrollmentEndpoint'))\n\n        this.emailType = {\n            primary: \"PRIMARY\",\n            secondary: \"SECONDARY\"\n        };\n\n        this.emailStatus = {\n            verified: \"VERIFIED\",\n            unverified: \"UNVERIFIED\"\n        };\n\n\n        this.getUserEnrollmentDetails = function() {\n\n            return $http.get(enrollmentEndpoint, null, {\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json;'\n                }\n            });\n        };\n\n        //enroll user in P2P service based on details passed\n        this.enrollUserForP2P = function(value) {\n\n            return $http.post(enrollmentEndpoint, value, {\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json;'\n                }\n            });\n        };\n\n\n        this.editP2PEnrollment = function(data) {\n\n\n            return $http.put(enrollmentEndpoint, data, {\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json;'\n                }\n            });\n        };\n\n        //modify registered users P2P details\n        this.editP2PDepositAccount = function(value) {\n\n            var data = {\n                accountNumber: value\n            };\n\n            return $http.put(enrollmentEndpoint, data, {\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json;'\n                }\n            });\n        };\n\n        //adds a secondary P2P Email address\n        this.addP2PEmailAddress = function(emailAddress) {\n            var data = {\n                value: emailAddress\n            };\n\n            return $http.post(enrollmentEndpoint + editEmailEndpoint, data, {\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-type': 'application/json;'\n                }\n            });\n        };\n\n        //edits a specific email, primary or secondary and email value\n        this.editP2PEmailAddress = function(email) {\n            var data = {\n                value: email.value,\n                type: email.type\n            };\n\n            return $http.put(enrollmentEndpoint + editEmailEndpoint + email.id, data, {\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json;'\n                }\n            });\n\n        };\n\n        //edits the address type\n        this.editP2PEmailAddressType = function(email) {\n            var data = {\n                type: email.type\n            };\n\n            return $http.put(enrollmentEndpoint + editEmailEndpoint + email.id, data, {\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json;'\n                }\n            });\n        };\n\n        //deletes a specified email address\n        this.deleteP2PEmailAddress = function(email) {\n\n            return $http({method: 'DELETE', url: enrollmentEndpoint + editEmailEndpoint + email.id});\n        };\n\n\n\n        this.verifyCode = function(email, code) {\n\n            var data = {\n                verification: {\n                    email: email,\n                    code: code\n                }\n            };\n\n            return $http.put(enrollmentEndpoint, data, {\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json;'\n                }\n            });\n        };\n    };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./scripts/_migration/common/p2p-service.js\n// module id = 50\n// module chunks = 0","define(function(require, exports, module) {\n\n    'use strict';\n    // Feature detect + local reference\n    var hasStorage = function() {\n        var uid = new Date;\n        var storage;\n        var result;\n        try {\n            (storage = window.localStorage).setItem(uid, uid);\n            result = storage.getItem(uid) == uid;\n            storage.removeItem(uid);\n            return result && storage;\n        } catch (exception) {}\n    };\n\n    // @ngInject\n    exports.httpService = function($http, $q, $timeout, httpServicesConfig, lpCoreUtils) {\n\n        /**\n         * Creates a new Service instance\n         * @param config\n         * @constructor\n         */\n        var HttpService = function(config) {\n            lpCoreUtils.assign(this, httpServicesConfig.defaultConfig, config);\n        };\n\n        /**\n         * Read operation for this service,\n         * Will send an asynchronous GET request to this service's endpoint\n         * @param {Object} params Add get parameters\n         * @param {Boolean} force bypass cache\n         * @returns {Object} an xhr promise\n         */\n        HttpService.prototype.read = function(params, force) {\n\n            var self = this;\n\n            var cacheId = getCacheKey(this.endpoint, params),\n                promise;\n\n            if (!force) {\n                promise = getCacheItem(cacheId);\n            }\n\n            if (!promise) {\n                promise = makeXhrRequest(this.endpoint, 'GET', {}, this.contentType, params)\n                    .success(function(response) {\n                        setCacheItem(cacheId, response, self.cacheTimeout);\n                    });\n            }\n\n            return promise;\n        };\n\n        /**\n         *\n         * @returns {String}\n         * @private\n         */\n        var getCacheKey = function(url, params) {\n            params = params ? \".\" + JSON.stringify(params) : \"\";\n            return \"launchpad.services/\" + url + params;\n        };\n\n        /**\n         *\n         * @returns {null}\n         * @private\n         */\n        var getCacheItem = function(cacheId) {\n            var cacheData = hasStorage() ? sessionStorage.getItem(cacheId) : null;\n            var promise = null;\n            if (cacheData) {\n                try {\n                    cacheData = JSON.parse(cacheData);\n                    if (cacheData.expires && cacheData.expires > new Date().getTime()) {\n                        // Cache hit: Expires in the future, resolve the promise.\n                        promise = resolvePromise(cacheData.data);\n                    } else {\n                        // Cache miss: remove stale item.\n                        clearCacheItem(cacheId);\n                    }\n                } catch (e) {\n                    // Silently ignore errors - will return null.\n                }\n            }\n\n            return promise;\n        };\n\n        /**\n         *\n         * @param string cacheId\n         * @param mixed data\n         * @param int timeout\n         * @private\n         */\n        var setCacheItem = function(cacheId, data, timeout) {\n\n            if (hasStorage()) {\n                try {\n                    sessionStorage.setItem(cacheId, JSON.stringify({\n                        expires: new Date().getTime() + timeout,\n                        data: data\n                    }));\n                } catch (error) {}\n            }\n        };\n\n        /**\n         *\n         * @returns {String}\n         * @private\n         */\n        var clearCacheItem = function(cacheId) {\n            sessionStorage.removeItem(cacheId);\n        };\n\n        /**\n         * Create operation for this service\n         * Will send a POST request to this service's endpoint\n         * @param conf\n         * @returns {*}\n         */\n        HttpService.prototype.create = function(config) {\n            config = lpCoreUtils.assign({}, {\n                method: 'POST'\n            }, config);\n            var contentType = config.contentType || this.contentType;\n\n            return makeXhrRequest(this.endpoint, config.method, config.data, contentType);\n        };\n\n        /**\n         * Update operation for this service\n         * Will send a PUT request to this service's endpoint\n         * @param conf\n         * @returns {*}\n         */\n        HttpService.prototype.update = function(config) {\n            config = lpCoreUtils.assign({}, {\n                method: 'PUT'\n            }, config);\n            var contentType = config.contentType || this.contentType;\n\n            return makeXhrRequest(this.endpoint, config.method, config.data, contentType);\n        };\n\n        /**\n         * Delete operation for this service\n         * Will send a DELETE request to this service's endpoint\n         * @param conf\n         * @returns {*}\n         */\n        HttpService.prototype.del = function(config) {\n            config = lpCoreUtils.assign({}, {\n                method: 'DELETE'\n            }, config);\n            return makeXhrRequest(this.endpoint, config.method, config.data, this.contentType);\n        };\n\n        /**\n         *\n         * @param conf\n         * @returns {*}\n         * @private\n         */\n        // Known issue with null: https://github.com/angular/angular.js/issues/2191\n        var makeXhrRequest = function(url, method, data, contentType, params, timeout) {\n\n            function isTesting() {\n                return window.location.protocol === \"file:\" || typeof window.__karma__ !== \"undefined\";\n            }\n\n            // Prevent GET caching. (small hack for url regex matching in unit tests)\n            if (method === 'GET' && !isTesting()) {\n                params = lpCoreUtils.assign(params || {}, {\n                    '_': new Date().getTime()\n                });\n            }\n\n            contentType = contentType || 'application/x-www-form-urlencoded;';\n            if (contentType === 'application/x-www-form-urlencoded;') {\n                data = lpCoreUtils.buildQueryString(data || {});\n            }\n\n            var config = {\n                method: method,\n                url: url,\n                params: params,\n                data: data,\n                cache: false,\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': contentType\n                },\n                timeout: timeout\n            };\n\n            var promise = $http(config);\n            return promise;\n        };\n\n        var resolvePromise = function(data) {\n            var deferred = $q.defer(),\n                promise = deferred.promise;\n\n            // Defining `success` and `always` method for callbacks.\n            // `error` should never be called since the promise is resolved\n            promise.success = function(fn) {\n                promise.then(function(response) {\n                    fn(response);\n                }, null);\n                return promise;\n            };\n\n            promise.error = function(fn) {\n                promise.then(null, function(response) {\n                    fn(response);\n                });\n                return promise;\n            };\n\n            promise.always = function(fn) {\n                promise.then(null, null, function(response) {\n                    fn(response);\n                });\n                return promise;\n            };\n\n            $timeout(function() {\n                deferred.resolve(data);\n            });\n\n            return promise;\n        };\n\n        // Service pool\n        var services = {};\n\n\n\n\n\n        /**\n         * Replaces variables within a url. For example\n         *\n         * @example\n         * ${contextPath}/profile\n         * is merged with\n         * {\n         *    contextPath: \"/portalserver\"\n         * }\n         * and becomes /portalserver/profile\n         *\n         * @param url {String} A url possibly contain vars to replace\n         * @param urlVars {Object} Map of replacement vars\n         */\n        var replaceUrlVars = function(url, urlVars) {\n            if(typeof url === \"string\" && typeof urlVars === \"object\") {\n                for(var urlVar in urlVars) {\n                    if(urlVars.hasOwnProperty(urlVar)) {\n                        var urlVarRegexp = new RegExp(\"\\\\$\\\\(\" + urlVar + \"\\\\)\", \"g\");\n                        url = url.replace(urlVarRegexp, urlVars[urlVar]);\n                    }\n                }\n            }\n\n            return url;\n        };\n\n\n        var getServiceInstance = function(config) {\n            // Validate\n            if (!config.endpoint || typeof config.endpoint !== \"string\") {\n                throw new Error(\"You must specify an endpoint in your service config\");\n            }\n\n            if (!services[config.endpoint]) {\n                // Fix paramaterized context path (and backwards compatible with contextRoot)\n                // Update variables in endpoint url [ /transactions/$(transactiondId) ]\n                config.endpoint = lpCoreUtils.resolvePortalPlaceholders(config.endpoint, config.urlVars);\n                config.endpoint = replaceUrlVars(config.endpoint, config.urlVars);\n                services[config.endpoint] = new HttpService(config);\n            }\n\n            return services[config.endpoint];\n        };\n\n        return {\n            getInstance: getServiceInstance,\n            resolvePromise: resolvePromise\n        };\n    };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./scripts/_migration/common/rest-services.js\n// module id = 51\n// module chunks = 0","/**\n * @deprecated will be removed in LP v0.13.x\n */\ndefine( function (require, exports, module) {\n\n    'use strict';\n\n    module.name = 'core-deprecated';\n\n    var base = require('base');\n\n    var deps = [];\n\n    module.exports = base.createModule(module.name, deps)\n        .service(require('./profile-contact-service'))\n        .service(require('./profile-detail-service'))\n        .service(require('./preference-service'));\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./scripts/_deprecated/scripts/main.js\n// module id = 52\n// module chunks = 0","define(function(require, exports, module) {\n\n    'use strict';\n\n    var base = require('base');\n    var utils = base.utils;\n\n    // @ngInject\n    exports.ProfileContactService = function($http, lpWidget, lpCoreUtils) {\n\n        utils.deprecate('ProfileContactService is deprecated. Use lpUserDetails in module-users.');\n\n        var url = lpCoreUtils.resolvePortalPlaceholders(lpWidget.getPreference('saveUrl'));\n\n        this.read = function() {\n            return $http.get(url);\n        };\n\n        this.save = function(field, value) {\n            var data = {};\n            data[field] = value;\n\n            return $http.put(url, $.param(data), {\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/x-www-form-urlencoded;'\n                }\n            });\n        };\n    };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./scripts/_deprecated/scripts/profile-contact-service.js\n// module id = 53\n// module chunks = 0"],"sourceRoot":""}
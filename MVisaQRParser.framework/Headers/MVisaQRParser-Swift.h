// Generated by Apple Swift version 4.0 effective-3.2 (swiftlang-900.0.65 clang-900.0.37)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_attribute(external_source_symbol)
# define SWIFT_STRINGIFY(str) #str
# define SWIFT_MODULE_NAMESPACE_PUSH(module_name) _Pragma(SWIFT_STRINGIFY(clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in=module_name, generated_declaration))), apply_to=any(function, enum, objc_interface, objc_category, objc_protocol))))
# define SWIFT_MODULE_NAMESPACE_POP _Pragma("clang attribute pop")
#else
# define SWIFT_MODULE_NAMESPACE_PUSH(module_name)
# define SWIFT_MODULE_NAMESPACE_POP
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR __attribute__((enum_extensibility(open)))
# else
#  define SWIFT_ENUM_ATTR
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_ATTR SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) SWIFT_ENUM(_type, _name)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if __has_feature(modules)
@import ObjectiveC;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

SWIFT_MODULE_NAMESPACE_PUSH("MVisaQRParser")

SWIFT_CLASS("_TtC13MVisaQRParser16MVISAMerchantTLV")
@interface MVISAMerchantTLV : NSObject
@property (nonatomic) BOOL isTipAvailable;
/// Tag 00 - version 01
@property (nonatomic, copy) NSString * _Nullable payloadFormatIndicator;
/// Tag 01 - version 01
@property (nonatomic, copy) NSString * _Nullable pointOfInitiation;
/// Tag 02 version 00 and 01
@property (nonatomic, copy) NSString * _Nullable mVisaMerchantID;
@property (nonatomic, copy) NSString * _Nullable mVisaMerchantPAN;
/// Tag 03 version 01
@property (nonatomic, copy) NSString * _Nullable tag03;
/// Tag 04 - version 01
@property (nonatomic, copy) NSString * _Nullable masterCardPAN1;
/// Tag 05 - version 01
@property (nonatomic, copy) NSString * _Nullable masterCardPAN2;
/// Tag 06 - version 01
@property (nonatomic, copy) NSString * _Nullable npciid1;
/// Tag 07 - version 01
@property (nonatomic, copy) NSString * _Nullable npciid2;
/// Tag 08 - version 01
@property (nonatomic, copy) NSString * _Nullable tag08;
/// Tag 09 - version 01
@property (nonatomic, copy) NSString * _Nullable tag09;
/// Tag 10 - version 01
@property (nonatomic, copy) NSString * _Nullable tag10;
/// Tag 11 - version 01
@property (nonatomic, copy) NSString * _Nullable tag11;
/// Tag 12 - version 01
@property (nonatomic, copy) NSString * _Nullable tag12;
/// Tag 13 - version 01
@property (nonatomic, copy) NSString * _Nullable tag13;
/// Tag 14 - version 01
@property (nonatomic, copy) NSString * _Nullable tag14;
/// Tag 15 - version 01
@property (nonatomic, copy) NSString * _Nullable tag15;
/// Tag 16 - version 01
@property (nonatomic, copy) NSString * _Nullable tag16;
/// Tag 17 to 25 Reserved by EMVCo - version 01
@property (nonatomic, copy) NSString * _Nullable tag17;
@property (nonatomic, copy) NSString * _Nullable tag18;
@property (nonatomic, copy) NSString * _Nullable tag19;
@property (nonatomic, copy) NSString * _Nullable tag20;
@property (nonatomic, copy) NSString * _Nullable tag21;
@property (nonatomic, copy) NSString * _Nullable tag22;
@property (nonatomic, copy) NSString * _Nullable tag23;
@property (nonatomic, copy) NSString * _Nullable tag24;
@property (nonatomic, copy) NSString * _Nullable tag25;
/// Tag 26 to 51 Templates reserved for additional payment networks - version 01
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable tag26;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable tag27;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable tag28;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable tag29;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable tag30;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable tag31;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable tag32;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable tag33;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable tag34;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable tag35;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable tag36;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable tag37;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable tag38;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable tag39;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable tag40;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable tag41;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable tag42;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable tag43;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable tag44;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable tag45;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable tag46;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable tag47;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable tag48;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable tag49;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable tag50;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable tag51;
/// Tag 52 version 00 and 01
@property (nonatomic, copy) NSString * _Nullable merchantCategoryCode;
/// Tag 53 version 00 and 01
@property (nonatomic, copy) NSString * _Nullable currencyCode;
/// Tag 54 version 00 and 01
@property (nonatomic, copy) NSString * _Nullable transactionAmount;
/// Tag 55 version 00 and 01
@property (nonatomic, copy) NSString * _Nullable tipAndFeeIndicator;
/// Tag 56 version 00 and 01
@property (nonatomic, copy) NSString * _Nullable convenienceFeeAmount;
/// Tag 57 version 00 and 01
@property (nonatomic, copy) NSString * _Nullable convenienceFeePercentage;
/// Tag 58 version 00 and 01
@property (nonatomic, copy) NSString * _Nullable countryCode;
/// Tag 59 version 00 and 01
@property (nonatomic, copy) NSString * _Nullable merchantName;
/// Tag 60 version 00 and 01
@property (nonatomic, copy) NSString * _Nullable cityName;
/// Tag 61 - version 01
@property (nonatomic, copy) NSString * _Nullable postalCode;
/// Tag 62 - version 01 - Super tag
@property (nonatomic, copy) NSString * _Nullable additionalDataField;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable additionalDataFieldTemplate;
/// Tag 63 - version 01
@property (nonatomic, copy) NSString * _Nullable crc;
/// Tag 64 - version 01
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable merchantInformationLanguageTemplate;
/// Tag 65 to 79 RFU for EMVCo - version 01
@property (nonatomic, copy) NSString * _Nullable tag65;
@property (nonatomic, copy) NSString * _Nullable tag66;
@property (nonatomic, copy) NSString * _Nullable tag67;
@property (nonatomic, copy) NSString * _Nullable tag68;
@property (nonatomic, copy) NSString * _Nullable tag69;
@property (nonatomic, copy) NSString * _Nullable tag70;
@property (nonatomic, copy) NSString * _Nullable tag71;
@property (nonatomic, copy) NSString * _Nullable tag72;
@property (nonatomic, copy) NSString * _Nullable tag73;
@property (nonatomic, copy) NSString * _Nullable tag74;
@property (nonatomic, copy) NSString * _Nullable tag75;
@property (nonatomic, copy) NSString * _Nullable tag76;
@property (nonatomic, copy) NSString * _Nullable tag77;
@property (nonatomic, copy) NSString * _Nullable tag78;
@property (nonatomic, copy) NSString * _Nullable tag79;
/// Tag 80 to 99 Unreserved Templates - version 01
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable tag80;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable tag81;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable tag82;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable tag83;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable tag84;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable tag85;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable tag86;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable tag87;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable tag88;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable tag89;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable tag90;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable tag91;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable tag92;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable tag93;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable tag94;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable tag95;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable tag96;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable tag97;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable tag98;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable tag99;
/// Supported only in Version 00
@property (nonatomic, copy) NSString * _Nullable primaryID;
/// Supported only in Version 00
@property (nonatomic, copy) NSString * _Nullable secondaryID;
/// Tag 01 - version 01
@property (nonatomic, copy) NSString * _Nullable billID;
/// Tag 02 - version 01
@property (nonatomic, copy) NSString * _Nullable mobileNumber;
/// Tag 03 - version 01
@property (nonatomic, copy) NSString * _Nullable storeID;
/// Tag 04 - version 01
@property (nonatomic, copy) NSString * _Nullable loyaltyNumber;
/// Tag 05 - version 01
@property (nonatomic, copy) NSString * _Nullable referenceID;
/// Tag 06 - version 01
@property (nonatomic, copy) NSString * _Nullable consumerID;
/// Tag 07 - version 01
@property (nonatomic, copy) NSString * _Nullable terminalID;
/// Tag 08 - version 01
@property (nonatomic, copy) NSString * _Nullable purpose;
/// Tag 09 - version 01
@property (nonatomic, copy) NSString * _Nullable additionalConsumerDataRequest;
/// Tag 10 - version 01
@property (nonatomic, copy) NSString * _Nullable tagSixtyTwo10;
/// Tag 11 - version 01
@property (nonatomic, copy) NSString * _Nullable addDataMasterCard1;
/// Tag 12 - version 01
@property (nonatomic, copy) NSString * _Nullable addDataMasterCard2;
/// Tag 13 - version 01
@property (nonatomic, copy) NSString * _Nullable addDataNpci1;
/// Tag 14 - version 01
@property (nonatomic, copy) NSString * _Nullable addDataNpci2;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC13MVisaQRParser19MVisaPayMerchantTLV")
@interface MVisaPayMerchantTLV : MVISAMerchantTLV
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end




SWIFT_CLASS("_TtC13MVisaQRParser10QRCodeData")
@interface QRCodeData : MVISAMerchantTLV
@property (nonatomic) BOOL isPrimaryIDMandatory;
@property (nonatomic) BOOL isSecondaryIDMandatory;
@property (nonatomic, copy) NSString * _Nullable primaryIDLength;
@property (nonatomic, copy) NSString * _Nullable secondaryIDLength;
@property (nonatomic) BOOL isBillIDMandatory;
@property (nonatomic) BOOL isMobileNumberMandatory;
@property (nonatomic) BOOL isStoreIDMandatory;
@property (nonatomic) BOOL isLoyaltyNumberMandatory;
@property (nonatomic) BOOL isReferenceIDMandatory;
@property (nonatomic) BOOL isConsumerIDMandatory;
@property (nonatomic) BOOL isTerminalIDMandatory;
@property (nonatomic) BOOL isPurposeMandatory;
@property (nonatomic) BOOL isAdditonalConsumerDataRequestMandatory;
@property (nonatomic) BOOL isAddDataMasterCard1Mandatory;
@property (nonatomic) BOOL isAddDataMasterCard2Mandatory;
@property (nonatomic) BOOL isAddDataNpci1Mandatory;
@property (nonatomic) BOOL isAddDataNpci2Mandatory;
@property (nonatomic, readonly, copy) NSString * _Nonnull jsonOutput;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC13MVisaQRParser11QRCodeError")
@interface QRCodeError : NSObject
@property (nonatomic, copy) NSArray<NSString *> * _Nonnull errorCodes;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end

@class QRCodeParserResponse;

/// The QRCodeParser class provides sync and async methods to parse QR code string
/// all the available methods are class level.
/// To parse QR Code, call class method parseQRData: with required parameter.
SWIFT_CLASS("_TtC13MVisaQRParser12QRCodeParser")
@interface QRCodeParser : NSObject
/// Parse QR code string asynchronously and provide String Json with parsed data or error in completionHandler block.
/// \param qrCodeString QR code string which need to be parsed.
///
/// \param completionHandler A block object containing the String object with parsed data.
/// String Json has 2 keys, qrCodeData and qrCodeError. qrCodeData key will have parse json and qrCodeError key will have error detail.
/// if qrCodeError key is not in output means parsing is successfully done and qrCodeData key will have parsed data in json.
/// If qrCodeError key is there in output json means QR data has some error and qrCodeError key will provide json array of error codes.
///
+ (void)parseQRDataForStringWithQrCodeString:(NSString * _Nonnull)qrCodeStr completionHandler:(SWIFT_NOESCAPE void (^ _Nonnull)(NSString * _Nullable))completionHandler;
/// Parse QR code string and provide String JSON object with parsed JSON data OR error JSON data.
/// <ul>
///   <li>
///     Return string json object with parsed data or error json.
///     String Json has 2 keys, qrCodeData and qrCodeError. qrCodeData key will have parse json and qrCodeError key will have error detail.
///     if qrCodeError is nil, which means parsing is successfully done and qrCodeData will have parsed data.
///     If qrCodeError is not nil which means QR data has some error and qrCodeError.errorCodes will provide array of error codes.
///   </li>
/// </ul>
/// \param qrCodeString QR code string which need to be parsed.
///
+ (NSString * _Nonnull)parseQRDataForStringWithQrCodeString:(NSString * _Nonnull)qrCodeStr SWIFT_WARN_UNUSED_RESULT;
/// Parse QR code string asynchronously and provide QRCodeParserResponse object with parsed data and error object in completionHandler block.
/// \param qrCodeString QR code string which need to be parsed.
///
/// \param completionHandler A block object containing the QRCodeParserResponse object with parsed data.
/// QRCodeParserResponse has 2 variables, qrCodeData of type QRCodeData which has parsed QR data and qrCodeError of type QRCodeError which has error information.
/// if qrCodeError is nil means parsing is successfully done and qrCodeData will have parsed data.
/// If qrCodeError is not nil means QR data has some error and qrCodeError.errorCodes will provide array of error codes.
///
+ (void)parseQRDataWithQrCodeString:(NSString * _Nonnull)qrCodeStr completionHandler:(SWIFT_NOESCAPE void (^ _Nonnull)(QRCodeParserResponse * _Nullable))completionHandler;
/// Parse QR code string and provide QRCodeParserResponse object with parsed data and error object.
/// <ul>
///   <li>
///     Return QRCodeParserResponse object with parsed data.
///     QRCodeParserResponse has 2 variables, qrCodeData of type QRCodeData which has parsed QR data and qrCodeError of type QRCodeError which has error information.
///     if qrCodeError is nil, which means parsing is successfully done and qrCodeData will have parsed data.
///     If qrCodeError is not nil which means QR data has some error and qrCodeError.errorCodes will provide array of error codes.
///   </li>
/// </ul>
/// \param qrCodeString QR code string which need to be parsed.
///
+ (QRCodeParserResponse * _Nonnull)parseQRDataWithQrCodeString:(NSString * _Nonnull)qrCodeStr SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC13MVisaQRParser20QRCodeParserResponse")
@interface QRCodeParserResponse : NSObject
@property (nonatomic, readonly, strong) QRCodeData * _Nullable qrCodeData;
@property (nonatomic, readonly, strong) QRCodeError * _Nullable qrCodeError;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end

SWIFT_MODULE_NAMESPACE_POP
#pragma clang diagnostic pop
